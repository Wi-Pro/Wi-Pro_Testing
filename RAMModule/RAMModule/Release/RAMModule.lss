
RAMModule.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000020a  0000027e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000020a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000286  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  68:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  6c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  70:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  74:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  78:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ea e0       	ldi	r30, 0x0A	; 10
  90:	f2 e0       	ldi	r31, 0x02	; 2
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a8 30       	cpi	r26, 0x08	; 8
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>
  9e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <main>
  a2:	0c 94 03 01 	jmp	0x206	; 0x206 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <SPI_Init>:
  aa:	80 eb       	ldi	r24, 0xB0	; 176
  ac:	84 b9       	out	0x04, r24	; 4
  ae:	09 9a       	sbi	0x01, 1	; 1
  b0:	80 e5       	ldi	r24, 0x50	; 80
  b2:	8c bd       	out	0x2c, r24	; 44
  b4:	08 95       	ret

000000b6 <getRAMStatus>:
  b6:	11 98       	cbi	0x02, 1	; 2
  b8:	85 e0       	ldi	r24, 0x05	; 5
  ba:	8e bd       	out	0x2e, r24	; 46
  bc:	0d b4       	in	r0, 0x2d	; 45
  be:	07 fe       	sbrs	r0, 7
  c0:	fd cf       	rjmp	.-6      	; 0xbc <getRAMStatus+0x6>
  c2:	1e bc       	out	0x2e, r1	; 46
  c4:	0d b4       	in	r0, 0x2d	; 45
  c6:	07 fe       	sbrs	r0, 7
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <getRAMStatus+0xe>
  ca:	11 9a       	sbi	0x02, 1	; 2
  cc:	8e b5       	in	r24, 0x2e	; 46
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	08 95       	ret

000000d2 <setRAMStatus>:
  d2:	11 98       	cbi	0x02, 1	; 2
  d4:	91 e0       	ldi	r25, 0x01	; 1
  d6:	9e bd       	out	0x2e, r25	; 46
  d8:	0d b4       	in	r0, 0x2d	; 45
  da:	07 fe       	sbrs	r0, 7
  dc:	fd cf       	rjmp	.-6      	; 0xd8 <setRAMStatus+0x6>
  de:	8e bd       	out	0x2e, r24	; 46
  e0:	0d b4       	in	r0, 0x2d	; 45
  e2:	07 fe       	sbrs	r0, 7
  e4:	fd cf       	rjmp	.-6      	; 0xe0 <setRAMStatus+0xe>
  e6:	11 9a       	sbi	0x02, 1	; 2
  e8:	08 95       	ret

000000ea <SPI_WriteAddress>:
  ea:	22 e0       	ldi	r18, 0x02	; 2
  ec:	2e bd       	out	0x2e, r18	; 46
  ee:	0d b4       	in	r0, 0x2d	; 45
  f0:	07 fe       	sbrs	r0, 7
  f2:	fd cf       	rjmp	.-6      	; 0xee <SPI_WriteAddress+0x4>
  f4:	9e bd       	out	0x2e, r25	; 46
  f6:	0d b4       	in	r0, 0x2d	; 45
  f8:	07 fe       	sbrs	r0, 7
  fa:	fd cf       	rjmp	.-6      	; 0xf6 <SPI_WriteAddress+0xc>
  fc:	8e bd       	out	0x2e, r24	; 46
  fe:	0d b4       	in	r0, 0x2d	; 45
 100:	07 fe       	sbrs	r0, 7
 102:	fd cf       	rjmp	.-6      	; 0xfe <SPI_WriteAddress+0x14>
 104:	08 95       	ret

00000106 <SPI_WriteData>:
 106:	8e bd       	out	0x2e, r24	; 46
 108:	0d b4       	in	r0, 0x2d	; 45
 10a:	07 fe       	sbrs	r0, 7
 10c:	fd cf       	rjmp	.-6      	; 0x108 <SPI_WriteData+0x2>
 10e:	08 95       	ret

00000110 <SPI_ReadAddress>:
 110:	23 e0       	ldi	r18, 0x03	; 3
 112:	2e bd       	out	0x2e, r18	; 46
 114:	0d b4       	in	r0, 0x2d	; 45
 116:	07 fe       	sbrs	r0, 7
 118:	fd cf       	rjmp	.-6      	; 0x114 <SPI_ReadAddress+0x4>
 11a:	9e bd       	out	0x2e, r25	; 46
 11c:	0d b4       	in	r0, 0x2d	; 45
 11e:	07 fe       	sbrs	r0, 7
 120:	fd cf       	rjmp	.-6      	; 0x11c <SPI_ReadAddress+0xc>
 122:	8e bd       	out	0x2e, r24	; 46
 124:	0d b4       	in	r0, 0x2d	; 45
 126:	07 fe       	sbrs	r0, 7
 128:	fd cf       	rjmp	.-6      	; 0x124 <SPI_ReadAddress+0x14>
 12a:	08 95       	ret

0000012c <SPI_ReadData>:
 12c:	1e bc       	out	0x2e, r1	; 46
 12e:	0d b4       	in	r0, 0x2d	; 45
 130:	07 fe       	sbrs	r0, 7
 132:	fd cf       	rjmp	.-6      	; 0x12e <SPI_ReadData+0x2>
 134:	8e b5       	in	r24, 0x2e	; 46
 136:	08 95       	ret

00000138 <RAMWrite>:
 138:	ef 92       	push	r14
 13a:	ff 92       	push	r15
 13c:	0f 93       	push	r16
 13e:	1f 93       	push	r17
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
 144:	7c 01       	movw	r14, r24
 146:	eb 01       	movw	r28, r22
 148:	8a 01       	movw	r16, r20
 14a:	11 98       	cbi	0x02, 1	; 2
 14c:	cb 01       	movw	r24, r22
 14e:	0e 94 75 00 	call	0xea	; 0xea <SPI_WriteAddress>
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	0e 94 83 00 	call	0x106	; 0x106 <SPI_WriteData>
 158:	11 9a       	sbi	0x02, 1	; 2
 15a:	80 e4       	ldi	r24, 0x40	; 64
 15c:	0e 94 69 00 	call	0xd2	; 0xd2 <setRAMStatus>
 160:	0e 94 5b 00 	call	0xb6	; 0xb6 <getRAMStatus>
 164:	11 98       	cbi	0x02, 1	; 2
 166:	ce 01       	movw	r24, r28
 168:	0e 94 75 00 	call	0xea	; 0xea <SPI_WriteAddress>
 16c:	e7 01       	movw	r28, r14
 16e:	0e 0d       	add	r16, r14
 170:	1f 1d       	adc	r17, r15
 172:	c0 17       	cp	r28, r16
 174:	d1 07       	cpc	r29, r17
 176:	21 f0       	breq	.+8      	; 0x180 <RAMWrite+0x48>
 178:	89 91       	ld	r24, Y+
 17a:	0e 94 83 00 	call	0x106	; 0x106 <SPI_WriteData>
 17e:	f9 cf       	rjmp	.-14     	; 0x172 <RAMWrite+0x3a>
 180:	11 9a       	sbi	0x02, 1	; 2
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	1f 91       	pop	r17
 18c:	0f 91       	pop	r16
 18e:	ff 90       	pop	r15
 190:	ef 90       	pop	r14
 192:	08 95       	ret

00000194 <RAMRead>:
 194:	0f 93       	push	r16
 196:	1f 93       	push	r17
 198:	cf 93       	push	r28
 19a:	df 93       	push	r29
 19c:	8c 01       	movw	r16, r24
 19e:	eb 01       	movw	r28, r22
 1a0:	80 e4       	ldi	r24, 0x40	; 64
 1a2:	0e 94 69 00 	call	0xd2	; 0xd2 <setRAMStatus>
 1a6:	11 98       	cbi	0x02, 1	; 2
 1a8:	c8 01       	movw	r24, r16
 1aa:	0e 94 88 00 	call	0x110	; 0x110 <SPI_ReadAddress>
 1ae:	06 e0       	ldi	r16, 0x06	; 6
 1b0:	11 e0       	ldi	r17, 0x01	; 1
 1b2:	ca 5f       	subi	r28, 0xFA	; 250
 1b4:	de 4f       	sbci	r29, 0xFE	; 254
 1b6:	0c 17       	cp	r16, r28
 1b8:	1d 07       	cpc	r17, r29
 1ba:	31 f0       	breq	.+12     	; 0x1c8 <RAMRead+0x34>
 1bc:	0e 94 96 00 	call	0x12c	; 0x12c <SPI_ReadData>
 1c0:	f8 01       	movw	r30, r16
 1c2:	81 93       	st	Z+, r24
 1c4:	8f 01       	movw	r16, r30
 1c6:	f7 cf       	rjmp	.-18     	; 0x1b6 <RAMRead+0x22>
 1c8:	11 9a       	sbi	0x02, 1	; 2
 1ca:	86 e0       	ldi	r24, 0x06	; 6
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	1f 91       	pop	r17
 1d4:	0f 91       	pop	r16
 1d6:	08 95       	ret

000001d8 <main>:
 1d8:	0e 94 55 00 	call	0xaa	; 0xaa <SPI_Init>
 1dc:	46 e0       	ldi	r20, 0x06	; 6
 1de:	50 e0       	ldi	r21, 0x00	; 0
 1e0:	61 e0       	ldi	r22, 0x01	; 1
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	0e 94 9c 00 	call	0x138	; 0x138 <RAMWrite>
 1ec:	83 ec       	ldi	r24, 0xC3	; 195
 1ee:	99 e0       	ldi	r25, 0x09	; 9
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <main+0x18>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <main+0x1e>
 1f6:	00 00       	nop
 1f8:	66 e0       	ldi	r22, 0x06	; 6
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 ca 00 	call	0x194	; 0x194 <RAMRead>
 204:	ff cf       	rjmp	.-2      	; 0x204 <main+0x2c>

00000206 <_exit>:
 206:	f8 94       	cli

00000208 <__stop_program>:
 208:	ff cf       	rjmp	.-2      	; 0x208 <__stop_program>
