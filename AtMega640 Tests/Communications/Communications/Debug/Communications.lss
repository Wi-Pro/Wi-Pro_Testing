
Communications.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000516  00800200  0000182a  000018be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000182a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000018d  00800716  00800716  00001dd4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001dd4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000330  00000000  00000000  00001e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003a24  00000000  00000000  00002160  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000fc6  00000000  00000000  00005b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001d91  00000000  00000000  00006b4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000bd8  00000000  00000000  000088dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000a04  00000000  00000000  000094b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002a58  00000000  00000000  00009eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002c8  00000000  00000000  0000c910  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8d c0       	rjmp	.+282    	; 0x120 <__bad_interrupt>
       6:	00 00       	nop
       8:	8b c0       	rjmp	.+278    	; 0x120 <__bad_interrupt>
       a:	00 00       	nop
       c:	89 c0       	rjmp	.+274    	; 0x120 <__bad_interrupt>
       e:	00 00       	nop
      10:	87 c0       	rjmp	.+270    	; 0x120 <__bad_interrupt>
      12:	00 00       	nop
      14:	85 c0       	rjmp	.+266    	; 0x120 <__bad_interrupt>
      16:	00 00       	nop
      18:	83 c0       	rjmp	.+262    	; 0x120 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	81 c0       	rjmp	.+258    	; 0x120 <__bad_interrupt>
      1e:	00 00       	nop
      20:	7f c0       	rjmp	.+254    	; 0x120 <__bad_interrupt>
      22:	00 00       	nop
      24:	7d c0       	rjmp	.+250    	; 0x120 <__bad_interrupt>
      26:	00 00       	nop
      28:	7b c0       	rjmp	.+246    	; 0x120 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	79 c0       	rjmp	.+242    	; 0x120 <__bad_interrupt>
      2e:	00 00       	nop
      30:	77 c0       	rjmp	.+238    	; 0x120 <__bad_interrupt>
      32:	00 00       	nop
      34:	75 c0       	rjmp	.+234    	; 0x120 <__bad_interrupt>
      36:	00 00       	nop
      38:	73 c0       	rjmp	.+230    	; 0x120 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	71 c0       	rjmp	.+226    	; 0x120 <__bad_interrupt>
      3e:	00 00       	nop
      40:	6f c0       	rjmp	.+222    	; 0x120 <__bad_interrupt>
      42:	00 00       	nop
      44:	6d c0       	rjmp	.+218    	; 0x120 <__bad_interrupt>
      46:	00 00       	nop
      48:	6b c0       	rjmp	.+214    	; 0x120 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	69 c0       	rjmp	.+210    	; 0x120 <__bad_interrupt>
      4e:	00 00       	nop
      50:	71 c1       	rjmp	.+738    	; 0x334 <__vector_20>
      52:	00 00       	nop
      54:	65 c0       	rjmp	.+202    	; 0x120 <__bad_interrupt>
      56:	00 00       	nop
      58:	63 c0       	rjmp	.+198    	; 0x120 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	61 c0       	rjmp	.+194    	; 0x120 <__bad_interrupt>
      5e:	00 00       	nop
      60:	5f c0       	rjmp	.+190    	; 0x120 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__vector_25>
      68:	5b c0       	rjmp	.+182    	; 0x120 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	59 c0       	rjmp	.+178    	; 0x120 <__bad_interrupt>
      6e:	00 00       	nop
      70:	57 c0       	rjmp	.+174    	; 0x120 <__bad_interrupt>
      72:	00 00       	nop
      74:	55 c0       	rjmp	.+170    	; 0x120 <__bad_interrupt>
      76:	00 00       	nop
      78:	53 c0       	rjmp	.+166    	; 0x120 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	51 c0       	rjmp	.+162    	; 0x120 <__bad_interrupt>
      7e:	00 00       	nop
      80:	4f c0       	rjmp	.+158    	; 0x120 <__bad_interrupt>
      82:	00 00       	nop
      84:	4d c0       	rjmp	.+154    	; 0x120 <__bad_interrupt>
      86:	00 00       	nop
      88:	4b c0       	rjmp	.+150    	; 0x120 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	49 c0       	rjmp	.+146    	; 0x120 <__bad_interrupt>
      8e:	00 00       	nop
      90:	47 c0       	rjmp	.+142    	; 0x120 <__bad_interrupt>
      92:	00 00       	nop
      94:	45 c0       	rjmp	.+138    	; 0x120 <__bad_interrupt>
      96:	00 00       	nop
      98:	43 c0       	rjmp	.+134    	; 0x120 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	41 c0       	rjmp	.+130    	; 0x120 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	3f c0       	rjmp	.+126    	; 0x120 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3d c0       	rjmp	.+122    	; 0x120 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3b c0       	rjmp	.+118    	; 0x120 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	39 c0       	rjmp	.+114    	; 0x120 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	37 c0       	rjmp	.+110    	; 0x120 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	35 c0       	rjmp	.+106    	; 0x120 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	33 c0       	rjmp	.+102    	; 0x120 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	31 c0       	rjmp	.+98     	; 0x120 <__bad_interrupt>
      be:	00 00       	nop
      c0:	2f c0       	rjmp	.+94     	; 0x120 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2d c0       	rjmp	.+90     	; 0x120 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2b c0       	rjmp	.+86     	; 0x120 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	29 c0       	rjmp	.+82     	; 0x120 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	27 c0       	rjmp	.+78     	; 0x120 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	25 c0       	rjmp	.+74     	; 0x120 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	23 c0       	rjmp	.+70     	; 0x120 <__bad_interrupt>
      da:	00 00       	nop
      dc:	21 c0       	rjmp	.+66     	; 0x120 <__bad_interrupt>
      de:	00 00       	nop
      e0:	1f c0       	rjmp	.+62     	; 0x120 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
      f0:	17 e0       	ldi	r17, 0x07	; 7
      f2:	a0 e0       	ldi	r26, 0x00	; 0
      f4:	b2 e0       	ldi	r27, 0x02	; 2
      f6:	ea e2       	ldi	r30, 0x2A	; 42
      f8:	f8 e1       	ldi	r31, 0x18	; 24
      fa:	00 e0       	ldi	r16, 0x00	; 0
      fc:	0b bf       	out	0x3b, r16	; 59
      fe:	02 c0       	rjmp	.+4      	; 0x104 <__do_copy_data+0x14>
     100:	07 90       	elpm	r0, Z+
     102:	0d 92       	st	X+, r0
     104:	a6 31       	cpi	r26, 0x16	; 22
     106:	b1 07       	cpc	r27, r17
     108:	d9 f7       	brne	.-10     	; 0x100 <__do_copy_data+0x10>

0000010a <__do_clear_bss>:
     10a:	28 e0       	ldi	r18, 0x08	; 8
     10c:	a6 e1       	ldi	r26, 0x16	; 22
     10e:	b7 e0       	ldi	r27, 0x07	; 7
     110:	01 c0       	rjmp	.+2      	; 0x114 <.do_clear_bss_start>

00000112 <.do_clear_bss_loop>:
     112:	1d 92       	st	X+, r1

00000114 <.do_clear_bss_start>:
     114:	a3 3a       	cpi	r26, 0xA3	; 163
     116:	b2 07       	cpc	r27, r18
     118:	e1 f7       	brne	.-8      	; 0x112 <.do_clear_bss_loop>
     11a:	3c d1       	rcall	.+632    	; 0x394 <main>
     11c:	0c 94 13 0c 	jmp	0x1826	; 0x1826 <_exit>

00000120 <__bad_interrupt>:
     120:	6f cf       	rjmp	.-290    	; 0x0 <__vectors>

00000122 <clearFlags>:
	RAMPrint(WIFI_QSTRING_ADDRESS, qLength);
	//RAMRead(WIFI_QSTRING_ADDRESS, qLength, buffer);
	SendData(WIFI_QSTRING_ADDRESS, qLength, 1);
	memset(filepath, 0x00, 100);
	printf("Sent!");
}
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
     126:	80 91 7a 07 	lds	r24, 0x077A
     12a:	88 23       	and	r24, r24
     12c:	91 f1       	breq	.+100    	; 0x192 <clearFlags+0x70>
     12e:	c6 e1       	ldi	r28, 0x16	; 22
     130:	d7 e0       	ldi	r29, 0x07	; 7
     132:	85 e0       	ldi	r24, 0x05	; 5
     134:	e6 e1       	ldi	r30, 0x16	; 22
     136:	f2 e0       	ldi	r31, 0x02	; 2
     138:	de 01       	movw	r26, r28
     13a:	01 90       	ld	r0, Z+
     13c:	0d 92       	st	X+, r0
     13e:	8a 95       	dec	r24
     140:	e1 f7       	brne	.-8      	; 0x13a <clearFlags+0x18>
     142:	de 01       	movw	r26, r28
     144:	0d 90       	ld	r0, X+
     146:	00 20       	and	r0, r0
     148:	e9 f7       	brne	.-6      	; 0x144 <clearFlags+0x22>
     14a:	11 97       	sbiw	r26, 0x01	; 1
     14c:	85 e1       	ldi	r24, 0x15	; 21
     14e:	eb e1       	ldi	r30, 0x1B	; 27
     150:	f2 e0       	ldi	r31, 0x02	; 2
     152:	01 90       	ld	r0, Z+
     154:	0d 92       	st	X+, r0
     156:	8a 95       	dec	r24
     158:	e1 f7       	brne	.-8      	; 0x152 <clearFlags+0x30>
     15a:	de 01       	movw	r26, r28
     15c:	0d 90       	ld	r0, X+
     15e:	00 20       	and	r0, r0
     160:	e9 f7       	brne	.-6      	; 0x15c <clearFlags+0x3a>
     162:	11 97       	sbiw	r26, 0x01	; 1
     164:	82 e1       	ldi	r24, 0x12	; 18
     166:	e0 e3       	ldi	r30, 0x30	; 48
     168:	f2 e0       	ldi	r31, 0x02	; 2
     16a:	01 90       	ld	r0, Z+
     16c:	0d 92       	st	X+, r0
     16e:	8a 95       	dec	r24
     170:	e1 f7       	brne	.-8      	; 0x16a <clearFlags+0x48>
     172:	09 90       	ld	r0, Y+
     174:	00 20       	and	r0, r0
     176:	e9 f7       	brne	.-6      	; 0x172 <clearFlags+0x50>
     178:	de 01       	movw	r26, r28
     17a:	11 97       	sbiw	r26, 0x01	; 1
     17c:	83 e1       	ldi	r24, 0x13	; 19
     17e:	e2 e4       	ldi	r30, 0x42	; 66
     180:	f2 e0       	ldi	r31, 0x02	; 2
     182:	01 90       	ld	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	8a 95       	dec	r24
     188:	e1 f7       	brne	.-8      	; 0x182 <clearFlags+0x60>
     18a:	86 e1       	ldi	r24, 0x16	; 22
     18c:	97 e0       	ldi	r25, 0x07	; 7
     18e:	7e d1       	rcall	.+764    	; 0x48c <updateFileEthernet>
     190:	35 c0       	rjmp	.+106    	; 0x1fc <clearFlags+0xda>
     192:	80 91 7b 07 	lds	r24, 0x077B
     196:	88 23       	and	r24, r24
     198:	89 f1       	breq	.+98     	; 0x1fc <clearFlags+0xda>
     19a:	c6 e1       	ldi	r28, 0x16	; 22
     19c:	d7 e0       	ldi	r29, 0x07	; 7
     19e:	89 e0       	ldi	r24, 0x09	; 9
     1a0:	e5 e5       	ldi	r30, 0x55	; 85
     1a2:	f2 e0       	ldi	r31, 0x02	; 2
     1a4:	de 01       	movw	r26, r28
     1a6:	01 90       	ld	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	8a 95       	dec	r24
     1ac:	e1 f7       	brne	.-8      	; 0x1a6 <clearFlags+0x84>
     1ae:	de 01       	movw	r26, r28
     1b0:	0d 90       	ld	r0, X+
     1b2:	00 20       	and	r0, r0
     1b4:	e9 f7       	brne	.-6      	; 0x1b0 <clearFlags+0x8e>
     1b6:	11 97       	sbiw	r26, 0x01	; 1
     1b8:	85 e1       	ldi	r24, 0x15	; 21
     1ba:	eb e1       	ldi	r30, 0x1B	; 27
     1bc:	f2 e0       	ldi	r31, 0x02	; 2
     1be:	01 90       	ld	r0, Z+
     1c0:	0d 92       	st	X+, r0
     1c2:	8a 95       	dec	r24
     1c4:	e1 f7       	brne	.-8      	; 0x1be <clearFlags+0x9c>
     1c6:	de 01       	movw	r26, r28
     1c8:	0d 90       	ld	r0, X+
     1ca:	00 20       	and	r0, r0
     1cc:	e9 f7       	brne	.-6      	; 0x1c8 <clearFlags+0xa6>
     1ce:	11 97       	sbiw	r26, 0x01	; 1
     1d0:	82 e1       	ldi	r24, 0x12	; 18
     1d2:	e0 e3       	ldi	r30, 0x30	; 48
     1d4:	f2 e0       	ldi	r31, 0x02	; 2
     1d6:	01 90       	ld	r0, Z+
     1d8:	0d 92       	st	X+, r0
     1da:	8a 95       	dec	r24
     1dc:	e1 f7       	brne	.-8      	; 0x1d6 <clearFlags+0xb4>
     1de:	09 90       	ld	r0, Y+
     1e0:	00 20       	and	r0, r0
     1e2:	e9 f7       	brne	.-6      	; 0x1de <clearFlags+0xbc>
     1e4:	de 01       	movw	r26, r28
     1e6:	11 97       	sbiw	r26, 0x01	; 1
     1e8:	83 e1       	ldi	r24, 0x13	; 19
     1ea:	e2 e4       	ldi	r30, 0x42	; 66
     1ec:	f2 e0       	ldi	r31, 0x02	; 2
     1ee:	01 90       	ld	r0, Z+
     1f0:	0d 92       	st	X+, r0
     1f2:	8a 95       	dec	r24
     1f4:	e1 f7       	brne	.-8      	; 0x1ee <clearFlags+0xcc>
     1f6:	86 e1       	ldi	r24, 0x16	; 22
     1f8:	97 e0       	ldi	r25, 0x07	; 7
     1fa:	7b d5       	rcall	.+2806   	; 0xcf2 <updateFileWifi>
     1fc:	84 e6       	ldi	r24, 0x64	; 100
     1fe:	e6 e1       	ldi	r30, 0x16	; 22
     200:	f7 e0       	ldi	r31, 0x07	; 7
     202:	df 01       	movw	r26, r30
     204:	1d 92       	st	X+, r1
     206:	8a 95       	dec	r24
     208:	e9 f7       	brne	.-6      	; 0x204 <clearFlags+0xe2>
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	df 91       	pop	r29
     210:	cf 91       	pop	r28
     212:	08 95       	ret

00000214 <getHexFile>:

int getHexFile()
{
     214:	0f 93       	push	r16
     216:	1f 93       	push	r17
	Flags[WIFI] = 1; 
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	80 93 7b 07 	sts	0x077B, r24
	if(Flags[WIFI])
	{
		strcpy(filepath, URL);
     21e:	85 e1       	ldi	r24, 0x15	; 21
     220:	eb e1       	ldi	r30, 0x1B	; 27
     222:	f2 e0       	ldi	r31, 0x02	; 2
     224:	a6 e1       	ldi	r26, 0x16	; 22
     226:	b7 e0       	ldi	r27, 0x07	; 7
     228:	01 90       	ld	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	8a 95       	dec	r24
     22e:	e1 f7       	brne	.-8      	; 0x228 <getHexFile+0x14>
		strcat(filepath, HEX_FILE);
     230:	a6 e1       	ldi	r26, 0x16	; 22
     232:	b7 e0       	ldi	r27, 0x07	; 7
     234:	0d 90       	ld	r0, X+
     236:	00 20       	and	r0, r0
     238:	e9 f7       	brne	.-6      	; 0x234 <getHexFile+0x20>
     23a:	11 97       	sbiw	r26, 0x01	; 1
     23c:	84 e2       	ldi	r24, 0x24	; 36
     23e:	ec e9       	ldi	r30, 0x9C	; 156
     240:	f2 e0       	ldi	r31, 0x02	; 2
     242:	01 90       	ld	r0, Z+
     244:	0d 92       	st	X+, r0
     246:	8a 95       	dec	r24
     248:	e1 f7       	brne	.-8      	; 0x242 <getHexFile+0x2e>
		//setTestPrint(1);
		printf("Compress Flag Set!");
     24a:	80 ec       	ldi	r24, 0xC0	; 192
     24c:	92 e0       	ldi	r25, 0x02	; 2
     24e:	9f 93       	push	r25
     250:	8f 93       	push	r24
     252:	0e 94 6e 09 	call	0x12dc	; 0x12dc <printf>
		setCompressFlag(1);
     256:	81 e0       	ldi	r24, 0x01	; 1
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	87 d5       	rcall	.+2830   	; 0xd6a <setCompressFlag>
		getFileWifi(filepath, 1, HEX_FILE_ADDRESS, 1);
     25c:	01 e0       	ldi	r16, 0x01	; 1
     25e:	10 e0       	ldi	r17, 0x00	; 0
     260:	20 e0       	ldi	r18, 0x00	; 0
     262:	30 e0       	ldi	r19, 0x00	; 0
     264:	a9 01       	movw	r20, r18
     266:	61 e0       	ldi	r22, 0x01	; 1
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	86 e1       	ldi	r24, 0x16	; 22
     26c:	97 e0       	ldi	r25, 0x07	; 7
     26e:	c7 d4       	rcall	.+2446   	; 0xbfe <getFileWifi>
		//setCompressFlag(0); 
		RAMPrint(HEX_FILE_ADDRESS, 1045);
     270:	45 e1       	ldi	r20, 0x15	; 21
     272:	54 e0       	ldi	r21, 0x04	; 4
     274:	60 e0       	ldi	r22, 0x00	; 0
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	cb 01       	movw	r24, r22
     27a:	30 d4       	rcall	.+2144   	; 0xadc <RAMPrint>
		//printf("Hex File Downloaded!\n");
	}
	
	return 1; 
     27c:	0f 90       	pop	r0
     27e:	0f 90       	pop	r0
}
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	1f 91       	pop	r17
     286:	0f 91       	pop	r16
     288:	08 95       	ret

0000028a <getFlagStatus>:

int getFlagStatus()
{
     28a:	0f 93       	push	r16
     28c:	1f 93       	push	r17
     28e:	cf 93       	push	r28
     290:	df 93       	push	r29
	//Testing 
	TIMSK1 &= ~(1 << TOIE1);
     292:	ef e6       	ldi	r30, 0x6F	; 111
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	80 81       	ld	r24, Z
     298:	8e 7f       	andi	r24, 0xFE	; 254
     29a:	80 83       	st	Z, r24
	Flags[ETHERNET] = 1; 
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	80 93 7a 07 	sts	0x077A, r24
	Flags[WIFI] = 0; 
     2a2:	10 92 7b 07 	sts	0x077B, r1
	
	if(Flags[ETHERNET]){
		getFileEthernet(FLAG_FILE, 1, STATUS_FLAG_ADDRESS, 3); 
     2a6:	03 e0       	ldi	r16, 0x03	; 3
     2a8:	10 e0       	ldi	r17, 0x00	; 0
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e3       	ldi	r19, 0x30	; 48
     2ae:	40 e0       	ldi	r20, 0x00	; 0
     2b0:	50 e0       	ldi	r21, 0x00	; 0
     2b2:	61 e0       	ldi	r22, 0x01	; 1
     2b4:	70 e0       	ldi	r23, 0x00	; 0
     2b6:	83 ed       	ldi	r24, 0xD3	; 211
     2b8:	92 e0       	ldi	r25, 0x02	; 2
     2ba:	80 d0       	rcall	.+256    	; 0x3bc <getFileEthernet>
		printf("Ram Print: ");
     2bc:	88 ef       	ldi	r24, 0xF8	; 248
     2be:	92 e0       	ldi	r25, 0x02	; 2
     2c0:	9f 93       	push	r25
     2c2:	8f 93       	push	r24
     2c4:	0e 94 6e 09 	call	0x12dc	; 0x12dc <printf>
		RAMPrint(STATUS_FLAG_ADDRESS-10, 20);
     2c8:	44 e1       	ldi	r20, 0x14	; 20
     2ca:	50 e0       	ldi	r21, 0x00	; 0
     2cc:	66 ef       	ldi	r22, 0xF6	; 246
     2ce:	7f e2       	ldi	r23, 0x2F	; 47
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	03 d4       	rcall	.+2054   	; 0xadc <RAMPrint>
		printf("\n");
     2d6:	8a e0       	ldi	r24, 0x0A	; 10
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	0e 94 7f 09 	call	0x12fe	; 0x12fe <putchar>
		//RAMRead(STATUS_FLAG_ADDRESS, 1, Flags[PROGRAM]); 
		//RAMRead(STATUS_FLAG_ADDRESS + 1, 1, Flags[PROGRAM + 1]); 
		//RAMRead(STATUS_FLAG_ADDRESS + 2, 1, Flags[PROGRAM + 2]); 
		
		Flags[PROGRAM] = (RAMReadByte(STATUS_FLAG_ADDRESS) & 0x0F);
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	90 e3       	ldi	r25, 0x30	; 48
     2e2:	58 d4       	rcall	.+2224   	; 0xb94 <RAMReadByte>
     2e4:	cc e7       	ldi	r28, 0x7C	; 124
     2e6:	d7 e0       	ldi	r29, 0x07	; 7
     2e8:	8f 70       	andi	r24, 0x0F	; 15
     2ea:	88 83       	st	Y, r24
		Flags[NETWORK_SCAN] = (RAMReadByte(STATUS_FLAG_ADDRESS + 1) & 0x0F);
     2ec:	81 e0       	ldi	r24, 0x01	; 1
     2ee:	90 e3       	ldi	r25, 0x30	; 48
     2f0:	51 d4       	rcall	.+2210   	; 0xb94 <RAMReadByte>
     2f2:	8f 70       	andi	r24, 0x0F	; 15
     2f4:	80 93 7d 07 	sts	0x077D, r24
		Flags[NETWORK_CONNECT] = (RAMReadByte(STATUS_FLAG_ADDRESS + 2) & 0x0F); 
     2f8:	82 e0       	ldi	r24, 0x02	; 2
     2fa:	90 e3       	ldi	r25, 0x30	; 48
     2fc:	4b d4       	rcall	.+2198   	; 0xb94 <RAMReadByte>
     2fe:	8f 70       	andi	r24, 0x0F	; 15
     300:	80 93 7e 07 	sts	0x077E, r24
		Flags[PROGRAM] = (RAMReadByte(STATUS_FLAG_ADDRESS) & 0x0F);
		Flags[NETWORK_SCAN] = (RAMReadByte(STATUS_FLAG_ADDRESS + 1) & 0x0F);
		Flags[NETWORK_CONNECT] = (RAMReadByte(STATUS_FLAG_ADDRESS + 2) & 0x0F);
		
	}
	memset(filepath, 0x00, 100); 
     304:	84 e6       	ldi	r24, 0x64	; 100
     306:	e6 e1       	ldi	r30, 0x16	; 22
     308:	f7 e0       	ldi	r31, 0x07	; 7
     30a:	df 01       	movw	r26, r30
     30c:	1d 92       	st	X+, r1
     30e:	8a 95       	dec	r24
     310:	e9 f7       	brne	.-6      	; 0x30c <getFlagStatus+0x82>
	//Perform actions based on flags 
	if(Flags[PROGRAM] == 0x01)
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	88 81       	ld	r24, Y
     318:	81 30       	cpi	r24, 0x01	; 1
     31a:	09 f4       	brne	.+2      	; 0x31e <getFlagStatus+0x94>
		//printf("Program!\n");
		//PORTD &= ~(1<<CTS);
		//wifiDriverInit(); 
		//PORTD |= (1<<CTS); 
		//_delay_ms(2000); 
		getHexFile(); 
     31c:	7b df       	rcall	.-266    	; 0x214 <getHexFile>
		//printf("Network Connect!\n");
		//networkConnect("Wi-Pro", "brightshoe902"); 
		//getFileEthernet()
	}
	//_delay_ms(500);
	clearFlags(); 
     31e:	01 df       	rcall	.-510    	; 0x122 <clearFlags>
	TIMSK1 |= (1 << TOIE1);
     320:	ef e6       	ldi	r30, 0x6F	; 111
     322:	f0 e0       	ldi	r31, 0x00	; 0
     324:	80 81       	ld	r24, Z
     326:	81 60       	ori	r24, 0x01	; 1
     328:	80 83       	st	Z, r24
}
     32a:	df 91       	pop	r29
     32c:	cf 91       	pop	r28
     32e:	1f 91       	pop	r17
     330:	0f 91       	pop	r16
     332:	08 95       	ret

00000334 <__vector_20>:



//Timer overflow vector for polling 
ISR(TIMER1_OVF_vect)
{
     334:	1f 92       	push	r1
     336:	0f 92       	push	r0
     338:	0f b6       	in	r0, 0x3f	; 63
     33a:	0f 92       	push	r0
     33c:	11 24       	eor	r1, r1
     33e:	0b b6       	in	r0, 0x3b	; 59
     340:	0f 92       	push	r0
     342:	2f 93       	push	r18
     344:	3f 93       	push	r19
     346:	4f 93       	push	r20
     348:	5f 93       	push	r21
     34a:	6f 93       	push	r22
     34c:	7f 93       	push	r23
     34e:	8f 93       	push	r24
     350:	9f 93       	push	r25
     352:	af 93       	push	r26
     354:	bf 93       	push	r27
     356:	ef 93       	push	r30
     358:	ff 93       	push	r31
	cli(); 
     35a:	f8 94       	cli
	printf("Flag Status\n");
     35c:	84 e0       	ldi	r24, 0x04	; 4
     35e:	93 e0       	ldi	r25, 0x03	; 3
     360:	d3 d7       	rcall	.+4006   	; 0x1308 <puts>
	getFlagStatus(); 
     362:	93 df       	rcall	.-218    	; 0x28a <getFlagStatus>
	TCNT1L = 0x00;
     364:	10 92 84 00 	sts	0x0084, r1
	TCNT1H = 0x00;
     368:	10 92 85 00 	sts	0x0085, r1
	sei();  
     36c:	78 94       	sei
}
     36e:	ff 91       	pop	r31
     370:	ef 91       	pop	r30
     372:	bf 91       	pop	r27
     374:	af 91       	pop	r26
     376:	9f 91       	pop	r25
     378:	8f 91       	pop	r24
     37a:	7f 91       	pop	r23
     37c:	6f 91       	pop	r22
     37e:	5f 91       	pop	r21
     380:	4f 91       	pop	r20
     382:	3f 91       	pop	r19
     384:	2f 91       	pop	r18
     386:	0f 90       	pop	r0
     388:	0b be       	out	0x3b, r0	; 59
     38a:	0f 90       	pop	r0
     38c:	0f be       	out	0x3f, r0	; 63
     38e:	0f 90       	pop	r0
     390:	1f 90       	pop	r1
     392:	18 95       	reti

00000394 <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     394:	2f ef       	ldi	r18, 0xFF	; 255
     396:	89 e6       	ldi	r24, 0x69	; 105
     398:	98 e1       	ldi	r25, 0x18	; 24
     39a:	21 50       	subi	r18, 0x01	; 1
     39c:	80 40       	sbci	r24, 0x00	; 0
     39e:	90 40       	sbci	r25, 0x00	; 0
     3a0:	e1 f7       	brne	.-8      	; 0x39a <main+0x6>
     3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <main+0x10>
     3a4:	00 00       	nop
int main(void)
{
	_delay_ms(1000);
	char buffer[100];
	char* message = "What the fuck is this shit";
	uart_init();
     3a6:	e9 d4       	rcall	.+2514   	; 0xd7a <uart_init>
	uart0_init(); 
     3a8:	40 d3       	rcall	.+1664   	; 0xa2a <uart0_init>
	SPI_Init();  
     3aa:	e7 d3       	rcall	.+1998   	; 0xb7a <SPI_Init>
	sei(); 
     3ac:	78 94       	sei
	//RAMRead(0, 30, buffer);
	
	//ethernetInit();
	//printf("ethernetInit Done");
	//pollingInit();
	wifiInit(); 
     3ae:	fa d3       	rcall	.+2036   	; 0xba4 <wifiInit>
	setMachineMode(); 
     3b0:	fb d3       	rcall	.+2038   	; 0xba8 <setMachineMode>
	networkScan(); 
     3b2:	15 d4       	rcall	.+2090   	; 0xbde <networkScan>
	//
//
	printf("Done!\n");
     3b4:	80 e1       	ldi	r24, 0x10	; 16
     3b6:	93 e0       	ldi	r25, 0x03	; 3
     3b8:	a7 d7       	rcall	.+3918   	; 0x1308 <puts>
     3ba:	ff cf       	rjmp	.-2      	; 0x3ba <main+0x26>

000003bc <getFileEthernet>:
     3bc:	8f 92       	push	r8
     3be:	9f 92       	push	r9
     3c0:	af 92       	push	r10
     3c2:	bf 92       	push	r11
     3c4:	cf 92       	push	r12
     3c6:	df 92       	push	r13
     3c8:	ef 92       	push	r14
     3ca:	ff 92       	push	r15
     3cc:	0f 93       	push	r16
     3ce:	1f 93       	push	r17
     3d0:	cf 93       	push	r28
     3d2:	df 93       	push	r29
     3d4:	4b 01       	movw	r8, r22
     3d6:	69 01       	movw	r12, r18
     3d8:	7a 01       	movw	r14, r20
     3da:	58 01       	movw	r10, r16
     3dc:	cf e7       	ldi	r28, 0x7F	; 127
     3de:	d7 e0       	ldi	r29, 0x07	; 7
     3e0:	47 e4       	ldi	r20, 0x47	; 71
     3e2:	55 e4       	ldi	r21, 0x45	; 69
     3e4:	64 e5       	ldi	r22, 0x54	; 84
     3e6:	70 e2       	ldi	r23, 0x20	; 32
     3e8:	48 83       	st	Y, r20
     3ea:	59 83       	std	Y+1, r21	; 0x01
     3ec:	6a 83       	std	Y+2, r22	; 0x02
     3ee:	7b 83       	std	Y+3, r23	; 0x03
     3f0:	de 01       	movw	r26, r28
     3f2:	0d 90       	ld	r0, X+
     3f4:	00 20       	and	r0, r0
     3f6:	e9 f7       	brne	.-6      	; 0x3f2 <getFileEthernet+0x36>
     3f8:	11 97       	sbiw	r26, 0x01	; 1
     3fa:	25 e1       	ldi	r18, 0x15	; 21
     3fc:	eb e1       	ldi	r30, 0x1B	; 27
     3fe:	f2 e0       	ldi	r31, 0x02	; 2
     400:	01 90       	ld	r0, Z+
     402:	0d 92       	st	X+, r0
     404:	2a 95       	dec	r18
     406:	e1 f7       	brne	.-8      	; 0x400 <getFileEthernet+0x44>
     408:	bc 01       	movw	r22, r24
     40a:	ce 01       	movw	r24, r28
     40c:	23 d7       	rcall	.+3654   	; 0x1254 <strcat>
     40e:	de 01       	movw	r26, r28
     410:	0d 90       	ld	r0, X+
     412:	00 20       	and	r0, r0
     414:	e9 f7       	brne	.-6      	; 0x410 <getFileEthernet+0x54>
     416:	11 97       	sbiw	r26, 0x01	; 1
     418:	82 e2       	ldi	r24, 0x22	; 34
     41a:	e6 e1       	ldi	r30, 0x16	; 22
     41c:	f3 e0       	ldi	r31, 0x03	; 3
     41e:	01 90       	ld	r0, Z+
     420:	0d 92       	st	X+, r0
     422:	8a 95       	dec	r24
     424:	e1 f7       	brne	.-8      	; 0x41e <getFileEthernet+0x62>
     426:	df 93       	push	r29
     428:	cf 93       	push	r28
     42a:	88 e3       	ldi	r24, 0x38	; 56
     42c:	93 e0       	ldi	r25, 0x03	; 3
     42e:	9f 93       	push	r25
     430:	8f 93       	push	r24
     432:	54 d7       	rcall	.+3752   	; 0x12dc <printf>
     434:	fe 01       	movw	r30, r28
     436:	01 90       	ld	r0, Z+
     438:	00 20       	and	r0, r0
     43a:	e9 f7       	brne	.-6      	; 0x436 <getFileEthernet+0x7a>
     43c:	31 97       	sbiw	r30, 0x01	; 1
     43e:	bf 01       	movw	r22, r30
     440:	6f 57       	subi	r22, 0x7F	; 127
     442:	77 40       	sbci	r23, 0x07	; 7
     444:	40 e0       	ldi	r20, 0x00	; 0
     446:	50 e0       	ldi	r21, 0x00	; 0
     448:	ce 01       	movw	r24, r28
     44a:	2f d1       	rcall	.+606    	; 0x6aa <SendData>
     44c:	84 01       	movw	r16, r8
     44e:	21 e0       	ldi	r18, 0x01	; 1
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	a5 01       	movw	r20, r10
     454:	a1 2c       	mov	r10, r1
     456:	b1 2c       	mov	r11, r1
     458:	b5 01       	movw	r22, r10
     45a:	c6 01       	movw	r24, r12
     45c:	28 d2       	rcall	.+1104   	; 0x8ae <ReceiveData>
     45e:	84 e6       	ldi	r24, 0x64	; 100
     460:	fe 01       	movw	r30, r28
     462:	11 92       	st	Z+, r1
     464:	8a 95       	dec	r24
     466:	e9 f7       	brne	.-6      	; 0x462 <getFileEthernet+0xa6>
     468:	0f 90       	pop	r0
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	0f 90       	pop	r0
     470:	c5 01       	movw	r24, r10
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	1f 91       	pop	r17
     478:	0f 91       	pop	r16
     47a:	ff 90       	pop	r15
     47c:	ef 90       	pop	r14
     47e:	df 90       	pop	r13
     480:	cf 90       	pop	r12
     482:	bf 90       	pop	r11
     484:	af 90       	pop	r10
     486:	9f 90       	pop	r9
     488:	8f 90       	pop	r8
     48a:	08 95       	ret

0000048c <updateFileEthernet>:
     48c:	cf 93       	push	r28
     48e:	df 93       	push	r29
     490:	bc 01       	movw	r22, r24
     492:	8f e7       	ldi	r24, 0x7F	; 127
     494:	97 e0       	ldi	r25, 0x07	; 7
     496:	e9 d6       	rcall	.+3538   	; 0x126a <strcpy>
     498:	cf e7       	ldi	r28, 0x7F	; 127
     49a:	d7 e0       	ldi	r29, 0x07	; 7
     49c:	de 01       	movw	r26, r28
     49e:	0d 90       	ld	r0, X+
     4a0:	00 20       	and	r0, r0
     4a2:	e9 f7       	brne	.-6      	; 0x49e <updateFileEthernet+0x12>
     4a4:	11 97       	sbiw	r26, 0x01	; 1
     4a6:	82 e2       	ldi	r24, 0x22	; 34
     4a8:	e6 e1       	ldi	r30, 0x16	; 22
     4aa:	f3 e0       	ldi	r31, 0x03	; 3
     4ac:	01 90       	ld	r0, Z+
     4ae:	0d 92       	st	X+, r0
     4b0:	8a 95       	dec	r24
     4b2:	e1 f7       	brne	.-8      	; 0x4ac <updateFileEthernet+0x20>
     4b4:	df 93       	push	r29
     4b6:	cf 93       	push	r28
     4b8:	83 e9       	ldi	r24, 0x93	; 147
     4ba:	92 e0       	ldi	r25, 0x02	; 2
     4bc:	9f 93       	push	r25
     4be:	8f 93       	push	r24
     4c0:	0d d7       	rcall	.+3610   	; 0x12dc <printf>
     4c2:	fe 01       	movw	r30, r28
     4c4:	01 90       	ld	r0, Z+
     4c6:	00 20       	and	r0, r0
     4c8:	e9 f7       	brne	.-6      	; 0x4c4 <updateFileEthernet+0x38>
     4ca:	31 97       	sbiw	r30, 0x01	; 1
     4cc:	bf 01       	movw	r22, r30
     4ce:	6f 57       	subi	r22, 0x7F	; 127
     4d0:	77 40       	sbci	r23, 0x07	; 7
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	ce 01       	movw	r24, r28
     4d8:	e8 d0       	rcall	.+464    	; 0x6aa <SendData>
     4da:	84 e6       	ldi	r24, 0x64	; 100
     4dc:	fe 01       	movw	r30, r28
     4de:	11 92       	st	Z+, r1
     4e0:	8a 95       	dec	r24
     4e2:	e9 f7       	brne	.-6      	; 0x4de <updateFileEthernet+0x52>
     4e4:	0f 90       	pop	r0
     4e6:	0f 90       	pop	r0
     4e8:	0f 90       	pop	r0
     4ea:	0f 90       	pop	r0
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	08 95       	ret

000004f2 <SPI_EthernetWrite>:
     4f2:	74 98       	cbi	0x0e, 4	; 14
     4f4:	20 ef       	ldi	r18, 0xF0	; 240
     4f6:	2e bd       	out	0x2e, r18	; 46
     4f8:	0d b4       	in	r0, 0x2d	; 45
     4fa:	07 fe       	sbrs	r0, 7
     4fc:	fd cf       	rjmp	.-6      	; 0x4f8 <SPI_EthernetWrite+0x6>
     4fe:	9e bd       	out	0x2e, r25	; 46
     500:	0d b4       	in	r0, 0x2d	; 45
     502:	07 fe       	sbrs	r0, 7
     504:	fd cf       	rjmp	.-6      	; 0x500 <SPI_EthernetWrite+0xe>
     506:	8e bd       	out	0x2e, r24	; 46
     508:	0d b4       	in	r0, 0x2d	; 45
     50a:	07 fe       	sbrs	r0, 7
     50c:	fd cf       	rjmp	.-6      	; 0x508 <SPI_EthernetWrite+0x16>
     50e:	6e bd       	out	0x2e, r22	; 46
     510:	0d b4       	in	r0, 0x2d	; 45
     512:	07 fe       	sbrs	r0, 7
     514:	fd cf       	rjmp	.-6      	; 0x510 <SPI_EthernetWrite+0x1e>
     516:	74 9a       	sbi	0x0e, 4	; 14
     518:	08 95       	ret

0000051a <SPI_EthernetRead>:
     51a:	74 98       	cbi	0x0e, 4	; 14
     51c:	2f e0       	ldi	r18, 0x0F	; 15
     51e:	2e bd       	out	0x2e, r18	; 46
     520:	0d b4       	in	r0, 0x2d	; 45
     522:	07 fe       	sbrs	r0, 7
     524:	fd cf       	rjmp	.-6      	; 0x520 <SPI_EthernetRead+0x6>
     526:	9e bd       	out	0x2e, r25	; 46
     528:	0d b4       	in	r0, 0x2d	; 45
     52a:	07 fe       	sbrs	r0, 7
     52c:	fd cf       	rjmp	.-6      	; 0x528 <SPI_EthernetRead+0xe>
     52e:	8e bd       	out	0x2e, r24	; 46
     530:	0d b4       	in	r0, 0x2d	; 45
     532:	07 fe       	sbrs	r0, 7
     534:	fd cf       	rjmp	.-6      	; 0x530 <SPI_EthernetRead+0x16>
     536:	1e bc       	out	0x2e, r1	; 46
     538:	0d b4       	in	r0, 0x2d	; 45
     53a:	07 fe       	sbrs	r0, 7
     53c:	fd cf       	rjmp	.-6      	; 0x538 <SPI_EthernetRead+0x1e>
     53e:	74 9a       	sbi	0x0e, 4	; 14
     540:	8e b5       	in	r24, 0x2e	; 46
     542:	08 95       	ret

00000544 <Server_Connect>:
     544:	bf 92       	push	r11
     546:	cf 92       	push	r12
     548:	df 92       	push	r13
     54a:	ef 92       	push	r14
     54c:	ff 92       	push	r15
     54e:	0f 93       	push	r16
     550:	1f 93       	push	r17
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	b8 2e       	mov	r11, r24
     558:	7b 01       	movw	r14, r22
     55a:	6a 01       	movw	r12, r20
     55c:	89 01       	movw	r16, r18
     55e:	ce eb       	ldi	r28, 0xBE	; 190
     560:	d4 e0       	ldi	r29, 0x04	; 4
     562:	83 e0       	ldi	r24, 0x03	; 3
     564:	94 e0       	ldi	r25, 0x04	; 4
     566:	d9 df       	rcall	.-78     	; 0x51a <SPI_EthernetRead>
     568:	1f 92       	push	r1
     56a:	8f 93       	push	r24
     56c:	df 93       	push	r29
     56e:	cf 93       	push	r28
     570:	b5 d6       	rcall	.+3434   	; 0x12dc <printf>
     572:	60 e1       	ldi	r22, 0x10	; 16
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	94 e0       	ldi	r25, 0x04	; 4
     578:	bc df       	rcall	.-136    	; 0x4f2 <SPI_EthernetWrite>
     57a:	6b 2d       	mov	r22, r11
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	94 e0       	ldi	r25, 0x04	; 4
     580:	b8 df       	rcall	.-144    	; 0x4f2 <SPI_EthernetWrite>
     582:	f8 01       	movw	r30, r16
     584:	60 81       	ld	r22, Z
     586:	84 e0       	ldi	r24, 0x04	; 4
     588:	94 e0       	ldi	r25, 0x04	; 4
     58a:	b3 df       	rcall	.-154    	; 0x4f2 <SPI_EthernetWrite>
     58c:	f8 01       	movw	r30, r16
     58e:	61 81       	ldd	r22, Z+1	; 0x01
     590:	85 e0       	ldi	r24, 0x05	; 5
     592:	94 e0       	ldi	r25, 0x04	; 4
     594:	ae df       	rcall	.-164    	; 0x4f2 <SPI_EthernetWrite>
     596:	61 e0       	ldi	r22, 0x01	; 1
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	94 e0       	ldi	r25, 0x04	; 4
     59c:	aa df       	rcall	.-172    	; 0x4f2 <SPI_EthernetWrite>
     59e:	83 e0       	ldi	r24, 0x03	; 3
     5a0:	94 e0       	ldi	r25, 0x04	; 4
     5a2:	bb df       	rcall	.-138    	; 0x51a <SPI_EthernetRead>
     5a4:	0f 90       	pop	r0
     5a6:	0f 90       	pop	r0
     5a8:	0f 90       	pop	r0
     5aa:	0f 90       	pop	r0
     5ac:	83 31       	cpi	r24, 0x13	; 19
     5ae:	c9 f6       	brne	.-78     	; 0x562 <Server_Connect+0x1e>
     5b0:	f7 01       	movw	r30, r14
     5b2:	60 81       	ld	r22, Z
     5b4:	8c e0       	ldi	r24, 0x0C	; 12
     5b6:	94 e0       	ldi	r25, 0x04	; 4
     5b8:	9c df       	rcall	.-200    	; 0x4f2 <SPI_EthernetWrite>
     5ba:	f7 01       	movw	r30, r14
     5bc:	61 81       	ldd	r22, Z+1	; 0x01
     5be:	8d e0       	ldi	r24, 0x0D	; 13
     5c0:	94 e0       	ldi	r25, 0x04	; 4
     5c2:	97 df       	rcall	.-210    	; 0x4f2 <SPI_EthernetWrite>
     5c4:	f7 01       	movw	r30, r14
     5c6:	62 81       	ldd	r22, Z+2	; 0x02
     5c8:	8e e0       	ldi	r24, 0x0E	; 14
     5ca:	94 e0       	ldi	r25, 0x04	; 4
     5cc:	92 df       	rcall	.-220    	; 0x4f2 <SPI_EthernetWrite>
     5ce:	f7 01       	movw	r30, r14
     5d0:	63 81       	ldd	r22, Z+3	; 0x03
     5d2:	8f e0       	ldi	r24, 0x0F	; 15
     5d4:	94 e0       	ldi	r25, 0x04	; 4
     5d6:	8d df       	rcall	.-230    	; 0x4f2 <SPI_EthernetWrite>
     5d8:	f6 01       	movw	r30, r12
     5da:	60 81       	ld	r22, Z
     5dc:	80 e1       	ldi	r24, 0x10	; 16
     5de:	94 e0       	ldi	r25, 0x04	; 4
     5e0:	88 df       	rcall	.-240    	; 0x4f2 <SPI_EthernetWrite>
     5e2:	f6 01       	movw	r30, r12
     5e4:	61 81       	ldd	r22, Z+1	; 0x01
     5e6:	81 e1       	ldi	r24, 0x11	; 17
     5e8:	94 e0       	ldi	r25, 0x04	; 4
     5ea:	83 df       	rcall	.-250    	; 0x4f2 <SPI_EthernetWrite>
     5ec:	64 e0       	ldi	r22, 0x04	; 4
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	94 e0       	ldi	r25, 0x04	; 4
     5f2:	7f df       	rcall	.-258    	; 0x4f2 <SPI_EthernetWrite>
     5f4:	c0 e0       	ldi	r28, 0x00	; 0
     5f6:	d0 e0       	ldi	r29, 0x00	; 0
     5f8:	00 e1       	ldi	r16, 0x10	; 16
     5fa:	17 e2       	ldi	r17, 0x27	; 39
     5fc:	32 c0       	rjmp	.+100    	; 0x662 <Server_Connect+0x11e>
     5fe:	87 e5       	ldi	r24, 0x57	; 87
     600:	92 e0       	ldi	r25, 0x02	; 2
     602:	01 97       	sbiw	r24, 0x01	; 1
     604:	f1 f7       	brne	.-4      	; 0x602 <Server_Connect+0xbe>
     606:	00 c0       	rjmp	.+0      	; 0x608 <Server_Connect+0xc4>
     608:	00 00       	nop
     60a:	21 96       	adiw	r28, 0x01	; 1
     60c:	9e 01       	movw	r18, r28
     60e:	32 95       	swap	r19
     610:	22 95       	swap	r18
     612:	2f 70       	andi	r18, 0x0F	; 15
     614:	23 27       	eor	r18, r19
     616:	3f 70       	andi	r19, 0x0F	; 15
     618:	23 27       	eor	r18, r19
     61a:	a7 e4       	ldi	r26, 0x47	; 71
     61c:	b3 e0       	ldi	r27, 0x03	; 3
     61e:	0b d6       	rcall	.+3094   	; 0x1236 <__umulhisi3>
     620:	96 95       	lsr	r25
     622:	87 95       	ror	r24
     624:	96 95       	lsr	r25
     626:	87 95       	ror	r24
     628:	96 95       	lsr	r25
     62a:	87 95       	ror	r24
     62c:	80 9f       	mul	r24, r16
     62e:	90 01       	movw	r18, r0
     630:	81 9f       	mul	r24, r17
     632:	30 0d       	add	r19, r0
     634:	90 9f       	mul	r25, r16
     636:	30 0d       	add	r19, r0
     638:	11 24       	eor	r1, r1
     63a:	c2 17       	cp	r28, r18
     63c:	d3 07       	cpc	r29, r19
     63e:	89 f4       	brne	.+34     	; 0x662 <Server_Connect+0x11e>
     640:	81 ed       	ldi	r24, 0xD1	; 209
     642:	94 e0       	ldi	r25, 0x04	; 4
     644:	61 d6       	rcall	.+3266   	; 0x1308 <puts>
     646:	c1 35       	cpi	r28, 0x51	; 81
     648:	93 ec       	ldi	r25, 0xC3	; 195
     64a:	d9 07       	cpc	r29, r25
     64c:	50 f0       	brcs	.+20     	; 0x662 <Server_Connect+0x11e>
     64e:	83 ef       	ldi	r24, 0xF3	; 243
     650:	94 e0       	ldi	r25, 0x04	; 4
     652:	5a d6       	rcall	.+3252   	; 0x1308 <puts>
     654:	60 e1       	ldi	r22, 0x10	; 16
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	94 e0       	ldi	r25, 0x04	; 4
     65a:	4b df       	rcall	.-362    	; 0x4f2 <SPI_EthernetWrite>
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	15 c0       	rjmp	.+42     	; 0x68c <Server_Connect+0x148>
     662:	83 e0       	ldi	r24, 0x03	; 3
     664:	94 e0       	ldi	r25, 0x04	; 4
     666:	59 df       	rcall	.-334    	; 0x51a <SPI_EthernetRead>
     668:	87 31       	cpi	r24, 0x17	; 23
     66a:	49 f6       	brne	.-110    	; 0x5fe <Server_Connect+0xba>
     66c:	83 e0       	ldi	r24, 0x03	; 3
     66e:	94 e0       	ldi	r25, 0x04	; 4
     670:	54 df       	rcall	.-344    	; 0x51a <SPI_EthernetRead>
     672:	87 31       	cpi	r24, 0x17	; 23
     674:	31 f4       	brne	.+12     	; 0x682 <Server_Connect+0x13e>
     676:	8b e0       	ldi	r24, 0x0B	; 11
     678:	95 e0       	ldi	r25, 0x05	; 5
     67a:	46 d6       	rcall	.+3212   	; 0x1308 <puts>
     67c:	81 e0       	ldi	r24, 0x01	; 1
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	05 c0       	rjmp	.+10     	; 0x68c <Server_Connect+0x148>
     682:	82 e2       	ldi	r24, 0x22	; 34
     684:	95 e0       	ldi	r25, 0x05	; 5
     686:	40 d6       	rcall	.+3200   	; 0x1308 <puts>
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	1f 91       	pop	r17
     692:	0f 91       	pop	r16
     694:	ff 90       	pop	r15
     696:	ef 90       	pop	r14
     698:	df 90       	pop	r13
     69a:	cf 90       	pop	r12
     69c:	bf 90       	pop	r11
     69e:	08 95       	ret

000006a0 <SocketCommand>:
     6a0:	68 2f       	mov	r22, r24
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	94 e0       	ldi	r25, 0x04	; 4
     6a6:	25 cf       	rjmp	.-438    	; 0x4f2 <SPI_EthernetWrite>
     6a8:	08 95       	ret

000006aa <SendData>:
     6aa:	4f 92       	push	r4
     6ac:	5f 92       	push	r5
     6ae:	6f 92       	push	r6
     6b0:	7f 92       	push	r7
     6b2:	8f 92       	push	r8
     6b4:	9f 92       	push	r9
     6b6:	af 92       	push	r10
     6b8:	bf 92       	push	r11
     6ba:	cf 92       	push	r12
     6bc:	df 92       	push	r13
     6be:	ef 92       	push	r14
     6c0:	ff 92       	push	r15
     6c2:	0f 93       	push	r16
     6c4:	1f 93       	push	r17
     6c6:	cf 93       	push	r28
     6c8:	df 93       	push	r29
     6ca:	7c 01       	movw	r14, r24
     6cc:	6b 01       	movw	r12, r22
     6ce:	3a 01       	movw	r6, r20
     6d0:	83 e0       	ldi	r24, 0x03	; 3
     6d2:	94 e0       	ldi	r25, 0x04	; 4
     6d4:	22 df       	rcall	.-444    	; 0x51a <SPI_EthernetRead>
     6d6:	1f 92       	push	r1
     6d8:	8f 93       	push	r24
     6da:	81 e4       	ldi	r24, 0x41	; 65
     6dc:	95 e0       	ldi	r25, 0x05	; 5
     6de:	9f 93       	push	r25
     6e0:	8f 93       	push	r24
     6e2:	fc d5       	rcall	.+3064   	; 0x12dc <printf>
     6e4:	83 e0       	ldi	r24, 0x03	; 3
     6e6:	94 e0       	ldi	r25, 0x04	; 4
     6e8:	18 df       	rcall	.-464    	; 0x51a <SPI_EthernetRead>
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	87 31       	cpi	r24, 0x17	; 23
     6f4:	51 f0       	breq	.+20     	; 0x70a <SendData+0x60>
     6f6:	20 e0       	ldi	r18, 0x00	; 0
     6f8:	32 e0       	ldi	r19, 0x02	; 2
     6fa:	42 e0       	ldi	r20, 0x02	; 2
     6fc:	52 e0       	ldi	r21, 0x02	; 2
     6fe:	64 e0       	ldi	r22, 0x04	; 4
     700:	72 e0       	ldi	r23, 0x02	; 2
     702:	81 e0       	ldi	r24, 0x01	; 1
     704:	1f df       	rcall	.-450    	; 0x544 <Server_Connect>
     706:	89 2b       	or	r24, r25
     708:	b1 f3       	breq	.-20     	; 0x6f6 <SendData+0x4c>
     70a:	80 e2       	ldi	r24, 0x20	; 32
     70c:	94 e0       	ldi	r25, 0x04	; 4
     70e:	05 df       	rcall	.-502    	; 0x51a <SPI_EthernetRead>
     710:	c8 2f       	mov	r28, r24
     712:	d0 e0       	ldi	r29, 0x00	; 0
     714:	dc 2f       	mov	r29, r28
     716:	cc 27       	eor	r28, r28
     718:	81 e2       	ldi	r24, 0x21	; 33
     71a:	94 e0       	ldi	r25, 0x04	; 4
     71c:	fe de       	rcall	.-516    	; 0x51a <SPI_EthernetRead>
     71e:	c8 0f       	add	r28, r24
     720:	d1 1d       	adc	r29, r1
     722:	cc 15       	cp	r28, r12
     724:	dd 05       	cpc	r29, r13
     726:	08 f4       	brcc	.+2      	; 0x72a <SendData+0x80>
     728:	8b c0       	rjmp	.+278    	; 0x840 <SendData+0x196>
     72a:	2b c0       	rjmp	.+86     	; 0x782 <SendData+0xd8>
     72c:	8f ec       	ldi	r24, 0xCF	; 207
     72e:	97 e0       	ldi	r25, 0x07	; 7
     730:	01 97       	sbiw	r24, 0x01	; 1
     732:	f1 f7       	brne	.-4      	; 0x730 <SendData+0x86>
     734:	00 c0       	rjmp	.+0      	; 0x736 <SendData+0x8c>
     736:	00 00       	nop
     738:	80 e2       	ldi	r24, 0x20	; 32
     73a:	94 e0       	ldi	r25, 0x04	; 4
     73c:	ee de       	rcall	.-548    	; 0x51a <SPI_EthernetRead>
     73e:	c8 2f       	mov	r28, r24
     740:	d0 e0       	ldi	r29, 0x00	; 0
     742:	dc 2f       	mov	r29, r28
     744:	cc 27       	eor	r28, r28
     746:	81 e2       	ldi	r24, 0x21	; 33
     748:	94 e0       	ldi	r25, 0x04	; 4
     74a:	e7 de       	rcall	.-562    	; 0x51a <SPI_EthernetRead>
     74c:	c8 0f       	add	r28, r24
     74e:	d1 1d       	adc	r29, r1
     750:	df 93       	push	r29
     752:	cf 93       	push	r28
     754:	9f 92       	push	r9
     756:	8f 92       	push	r8
     758:	c1 d5       	rcall	.+2946   	; 0x12dc <printf>
     75a:	01 50       	subi	r16, 0x01	; 1
     75c:	11 09       	sbc	r17, r1
     75e:	0f 90       	pop	r0
     760:	0f 90       	pop	r0
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	01 15       	cp	r16, r1
     768:	11 05       	cpc	r17, r1
     76a:	41 f4       	brne	.+16     	; 0x77c <SendData+0xd2>
     76c:	88 e0       	ldi	r24, 0x08	; 8
     76e:	98 df       	rcall	.-208    	; 0x6a0 <SocketCommand>
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	94 e0       	ldi	r25, 0x04	; 4
     774:	d2 de       	rcall	.-604    	; 0x51a <SPI_EthernetRead>
     776:	81 11       	cpse	r24, r1
     778:	fb cf       	rjmp	.-10     	; 0x770 <SendData+0xc6>
     77a:	5c c0       	rjmp	.+184    	; 0x834 <SendData+0x18a>
     77c:	cc 15       	cp	r28, r12
     77e:	dd 05       	cpc	r29, r13
     780:	a8 f2       	brcs	.-86     	; 0x72c <SendData+0x82>
     782:	84 e2       	ldi	r24, 0x24	; 36
     784:	94 e0       	ldi	r25, 0x04	; 4
     786:	c9 de       	rcall	.-622    	; 0x51a <SPI_EthernetRead>
     788:	48 2e       	mov	r4, r24
     78a:	85 e2       	ldi	r24, 0x25	; 37
     78c:	94 e0       	ldi	r25, 0x04	; 4
     78e:	c5 de       	rcall	.-630    	; 0x51a <SPI_EthernetRead>
     790:	51 2c       	mov	r5, r1
     792:	54 2c       	mov	r5, r4
     794:	44 24       	eor	r4, r4
     796:	48 0e       	add	r4, r24
     798:	51 1c       	adc	r5, r1
     79a:	82 e2       	ldi	r24, 0x22	; 34
     79c:	94 e0       	ldi	r25, 0x04	; 4
     79e:	bd de       	rcall	.-646    	; 0x51a <SPI_EthernetRead>
     7a0:	83 e2       	ldi	r24, 0x23	; 35
     7a2:	94 e0       	ldi	r25, 0x04	; 4
     7a4:	ba de       	rcall	.-652    	; 0x51a <SPI_EthernetRead>
     7a6:	89 e5       	ldi	r24, 0x59	; 89
     7a8:	95 e0       	ldi	r25, 0x05	; 5
     7aa:	ae d5       	rcall	.+2908   	; 0x1308 <puts>
     7ac:	c1 14       	cp	r12, r1
     7ae:	d1 04       	cpc	r13, r1
     7b0:	51 f1       	breq	.+84     	; 0x806 <SendData+0x15c>
     7b2:	47 01       	movw	r8, r14
     7b4:	8c 0c       	add	r8, r12
     7b6:	9d 1c       	adc	r9, r13
     7b8:	82 01       	movw	r16, r4
     7ba:	c0 e0       	ldi	r28, 0x00	; 0
     7bc:	d4 e0       	ldi	r29, 0x04	; 4
     7be:	a0 90 15 08 	lds	r10, 0x0815
     7c2:	b0 90 16 08 	lds	r11, 0x0816
     7c6:	a0 22       	and	r10, r16
     7c8:	b1 22       	and	r11, r17
     7ca:	80 91 17 08 	lds	r24, 0x0817
     7ce:	90 91 18 08 	lds	r25, 0x0818
     7d2:	a8 0e       	add	r10, r24
     7d4:	b9 1e       	adc	r11, r25
     7d6:	61 14       	cp	r6, r1
     7d8:	71 04       	cpc	r7, r1
     7da:	31 f0       	breq	.+12     	; 0x7e8 <SendData+0x13e>
     7dc:	ce 01       	movw	r24, r28
     7de:	da d1       	rcall	.+948    	; 0xb94 <RAMReadByte>
     7e0:	68 2f       	mov	r22, r24
     7e2:	c5 01       	movw	r24, r10
     7e4:	86 de       	rcall	.-756    	; 0x4f2 <SPI_EthernetWrite>
     7e6:	04 c0       	rjmp	.+8      	; 0x7f0 <SendData+0x146>
     7e8:	f7 01       	movw	r30, r14
     7ea:	60 81       	ld	r22, Z
     7ec:	c5 01       	movw	r24, r10
     7ee:	81 de       	rcall	.-766    	; 0x4f2 <SPI_EthernetWrite>
     7f0:	0f 5f       	subi	r16, 0xFF	; 255
     7f2:	1f 4f       	sbci	r17, 0xFF	; 255
     7f4:	ff ef       	ldi	r31, 0xFF	; 255
     7f6:	ef 1a       	sub	r14, r31
     7f8:	ff 0a       	sbc	r15, r31
     7fa:	21 96       	adiw	r28, 0x01	; 1
     7fc:	e8 14       	cp	r14, r8
     7fe:	f9 04       	cpc	r15, r9
     800:	f1 f6       	brne	.-68     	; 0x7be <SendData+0x114>
     802:	4c 0c       	add	r4, r12
     804:	5d 1c       	adc	r5, r13
     806:	60 e0       	ldi	r22, 0x00	; 0
     808:	c5 01       	movw	r24, r10
     80a:	01 96       	adiw	r24, 0x01	; 1
     80c:	72 de       	rcall	.-796    	; 0x4f2 <SPI_EthernetWrite>
     80e:	84 e2       	ldi	r24, 0x24	; 36
     810:	94 e0       	ldi	r25, 0x04	; 4
     812:	83 de       	rcall	.-762    	; 0x51a <SPI_EthernetRead>
     814:	6f ef       	ldi	r22, 0xFF	; 255
     816:	84 e2       	ldi	r24, 0x24	; 36
     818:	94 e0       	ldi	r25, 0x04	; 4
     81a:	6b de       	rcall	.-810    	; 0x4f2 <SPI_EthernetWrite>
     81c:	64 2d       	mov	r22, r4
     81e:	85 e2       	ldi	r24, 0x25	; 37
     820:	94 e0       	ldi	r25, 0x04	; 4
     822:	67 de       	rcall	.-818    	; 0x4f2 <SPI_EthernetWrite>
     824:	80 e2       	ldi	r24, 0x20	; 32
     826:	3c df       	rcall	.-392    	; 0x6a0 <SocketCommand>
     828:	81 e0       	ldi	r24, 0x01	; 1
     82a:	94 e0       	ldi	r25, 0x04	; 4
     82c:	76 de       	rcall	.-788    	; 0x51a <SPI_EthernetRead>
     82e:	81 11       	cpse	r24, r1
     830:	fb cf       	rjmp	.-10     	; 0x828 <SendData+0x17e>
     832:	03 c0       	rjmp	.+6      	; 0x83a <SendData+0x190>
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	29 c0       	rjmp	.+82     	; 0x88c <SendData+0x1e2>
     83a:	81 e0       	ldi	r24, 0x01	; 1
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	26 c0       	rjmp	.+76     	; 0x88c <SendData+0x1e2>
     840:	8f ec       	ldi	r24, 0xCF	; 207
     842:	97 e0       	ldi	r25, 0x07	; 7
     844:	01 97       	sbiw	r24, 0x01	; 1
     846:	f1 f7       	brne	.-4      	; 0x844 <SendData+0x19a>
     848:	00 c0       	rjmp	.+0      	; 0x84a <SendData+0x1a0>
     84a:	00 00       	nop
     84c:	80 e2       	ldi	r24, 0x20	; 32
     84e:	94 e0       	ldi	r25, 0x04	; 4
     850:	64 de       	rcall	.-824    	; 0x51a <SPI_EthernetRead>
     852:	c8 2f       	mov	r28, r24
     854:	d0 e0       	ldi	r29, 0x00	; 0
     856:	dc 2f       	mov	r29, r28
     858:	cc 27       	eor	r28, r28
     85a:	81 e2       	ldi	r24, 0x21	; 33
     85c:	94 e0       	ldi	r25, 0x04	; 4
     85e:	5d de       	rcall	.-838    	; 0x51a <SPI_EthernetRead>
     860:	c8 0f       	add	r28, r24
     862:	d1 1d       	adc	r29, r1
     864:	df 93       	push	r29
     866:	cf 93       	push	r28
     868:	8d e4       	ldi	r24, 0x4D	; 77
     86a:	95 e0       	ldi	r25, 0x05	; 5
     86c:	9f 93       	push	r25
     86e:	8f 93       	push	r24
     870:	35 d5       	rcall	.+2666   	; 0x12dc <printf>
     872:	0f 90       	pop	r0
     874:	0f 90       	pop	r0
     876:	0f 90       	pop	r0
     878:	0f 90       	pop	r0
     87a:	09 ee       	ldi	r16, 0xE9	; 233
     87c:	13 e0       	ldi	r17, 0x03	; 3
     87e:	0f 2e       	mov	r0, r31
     880:	fd e4       	ldi	r31, 0x4D	; 77
     882:	8f 2e       	mov	r8, r31
     884:	f5 e0       	ldi	r31, 0x05	; 5
     886:	9f 2e       	mov	r9, r31
     888:	f0 2d       	mov	r31, r0
     88a:	78 cf       	rjmp	.-272    	; 0x77c <SendData+0xd2>
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	1f 91       	pop	r17
     892:	0f 91       	pop	r16
     894:	ff 90       	pop	r15
     896:	ef 90       	pop	r14
     898:	df 90       	pop	r13
     89a:	cf 90       	pop	r12
     89c:	bf 90       	pop	r11
     89e:	af 90       	pop	r10
     8a0:	9f 90       	pop	r9
     8a2:	8f 90       	pop	r8
     8a4:	7f 90       	pop	r7
     8a6:	6f 90       	pop	r6
     8a8:	5f 90       	pop	r5
     8aa:	4f 90       	pop	r4
     8ac:	08 95       	ret

000008ae <ReceiveData>:
     8ae:	5f 92       	push	r5
     8b0:	6f 92       	push	r6
     8b2:	7f 92       	push	r7
     8b4:	8f 92       	push	r8
     8b6:	9f 92       	push	r9
     8b8:	af 92       	push	r10
     8ba:	bf 92       	push	r11
     8bc:	cf 92       	push	r12
     8be:	df 92       	push	r13
     8c0:	ef 92       	push	r14
     8c2:	ff 92       	push	r15
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	4c 01       	movw	r8, r24
     8ce:	5b 01       	movw	r10, r22
     8d0:	6a 01       	movw	r12, r20
     8d2:	79 01       	movw	r14, r18
     8d4:	ca ee       	ldi	r28, 0xEA	; 234
     8d6:	d3 e0       	ldi	r29, 0x03	; 3
     8d8:	83 e0       	ldi	r24, 0x03	; 3
     8da:	94 e0       	ldi	r25, 0x04	; 4
     8dc:	1e de       	rcall	.-964    	; 0x51a <SPI_EthernetRead>
     8de:	87 31       	cpi	r24, 0x17	; 23
     8e0:	09 f0       	breq	.+2      	; 0x8e4 <ReceiveData+0x36>
     8e2:	55 c0       	rjmp	.+170    	; 0x98e <ReceiveData+0xe0>
     8e4:	88 e2       	ldi	r24, 0x28	; 40
     8e6:	94 e0       	ldi	r25, 0x04	; 4
     8e8:	18 de       	rcall	.-976    	; 0x51a <SPI_EthernetRead>
     8ea:	c8 2f       	mov	r28, r24
     8ec:	89 e2       	ldi	r24, 0x29	; 41
     8ee:	94 e0       	ldi	r25, 0x04	; 4
     8f0:	14 de       	rcall	.-984    	; 0x51a <SPI_EthernetRead>
     8f2:	d0 e0       	ldi	r29, 0x00	; 0
     8f4:	dc 2f       	mov	r29, r28
     8f6:	cc 27       	eor	r28, r28
     8f8:	c8 0f       	add	r28, r24
     8fa:	d1 1d       	adc	r29, r1
     8fc:	c1 14       	cp	r12, r1
     8fe:	d1 04       	cpc	r13, r1
     900:	a9 f1       	breq	.+106    	; 0x96c <ReceiveData+0xbe>
     902:	51 2c       	mov	r5, r1
     904:	61 2c       	mov	r6, r1
     906:	71 2c       	mov	r7, r1
     908:	80 91 1b 08 	lds	r24, 0x081B
     90c:	90 91 1c 08 	lds	r25, 0x081C
     910:	8c 23       	and	r24, r28
     912:	9d 23       	and	r25, r29
     914:	20 91 19 08 	lds	r18, 0x0819
     918:	30 91 1a 08 	lds	r19, 0x081A
     91c:	82 0f       	add	r24, r18
     91e:	93 1f       	adc	r25, r19
     920:	fc dd       	rcall	.-1032   	; 0x51a <SPI_EthernetRead>
     922:	8a 30       	cpi	r24, 0x0A	; 10
     924:	41 f4       	brne	.+16     	; 0x936 <ReceiveData+0x88>
     926:	e1 14       	cp	r14, r1
     928:	f1 04       	cpc	r15, r1
     92a:	41 f0       	breq	.+16     	; 0x93c <ReceiveData+0x8e>
     92c:	53 94       	inc	r5
     92e:	89 e0       	ldi	r24, 0x09	; 9
     930:	85 15       	cp	r24, r5
     932:	b0 f0       	brcs	.+44     	; 0x960 <ReceiveData+0xb2>
     934:	17 c0       	rjmp	.+46     	; 0x964 <ReceiveData+0xb6>
     936:	e1 14       	cp	r14, r1
     938:	f1 04       	cpc	r15, r1
     93a:	a1 f4       	brne	.+40     	; 0x964 <ReceiveData+0xb6>
     93c:	01 15       	cp	r16, r1
     93e:	11 05       	cpc	r17, r1
     940:	31 f0       	breq	.+12     	; 0x94e <ReceiveData+0xa0>
     942:	b4 01       	movw	r22, r8
     944:	0f d1       	rcall	.+542    	; 0xb64 <RAMWriteByte>
     946:	9f ef       	ldi	r25, 0xFF	; 255
     948:	89 1a       	sub	r8, r25
     94a:	99 0a       	sbc	r9, r25
     94c:	03 c0       	rjmp	.+6      	; 0x954 <ReceiveData+0xa6>
     94e:	f5 01       	movw	r30, r10
     950:	81 93       	st	Z+, r24
     952:	5f 01       	movw	r10, r30
     954:	f1 e0       	ldi	r31, 0x01	; 1
     956:	cf 1a       	sub	r12, r31
     958:	d1 08       	sbc	r13, r1
     95a:	e6 2c       	mov	r14, r6
     95c:	f7 2c       	mov	r15, r7
     95e:	02 c0       	rjmp	.+4      	; 0x964 <ReceiveData+0xb6>
     960:	e6 2c       	mov	r14, r6
     962:	f7 2c       	mov	r15, r7
     964:	21 96       	adiw	r28, 0x01	; 1
     966:	c1 14       	cp	r12, r1
     968:	d1 04       	cpc	r13, r1
     96a:	71 f6       	brne	.-100    	; 0x908 <ReceiveData+0x5a>
     96c:	f5 01       	movw	r30, r10
     96e:	10 82       	st	Z, r1
     970:	6d 2f       	mov	r22, r29
     972:	88 e2       	ldi	r24, 0x28	; 40
     974:	94 e0       	ldi	r25, 0x04	; 4
     976:	bd dd       	rcall	.-1158   	; 0x4f2 <SPI_EthernetWrite>
     978:	6c 2f       	mov	r22, r28
     97a:	89 e2       	ldi	r24, 0x29	; 41
     97c:	94 e0       	ldi	r25, 0x04	; 4
     97e:	b9 dd       	rcall	.-1166   	; 0x4f2 <SPI_EthernetWrite>
     980:	80 e4       	ldi	r24, 0x40	; 64
     982:	8e de       	rcall	.-740    	; 0x6a0 <SocketCommand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     984:	fd e0       	ldi	r31, 0x0D	; 13
     986:	fa 95       	dec	r31
     988:	f1 f7       	brne	.-4      	; 0x986 <ReceiveData+0xd8>
     98a:	00 00       	nop
     98c:	1c c0       	rjmp	.+56     	; 0x9c6 <ReceiveData+0x118>
     98e:	21 97       	sbiw	r28, 0x01	; 1
     990:	20 97       	sbiw	r28, 0x00	; 0
     992:	91 f4       	brne	.+36     	; 0x9b8 <ReceiveData+0x10a>
     994:	85 e6       	ldi	r24, 0x65	; 101
     996:	95 e0       	ldi	r25, 0x05	; 5
     998:	b7 d4       	rcall	.+2414   	; 0x1308 <puts>
     99a:	83 e0       	ldi	r24, 0x03	; 3
     99c:	94 e0       	ldi	r25, 0x04	; 4
     99e:	bd dd       	rcall	.-1158   	; 0x51a <SPI_EthernetRead>
     9a0:	1f 92       	push	r1
     9a2:	8f 93       	push	r24
     9a4:	84 e8       	ldi	r24, 0x84	; 132
     9a6:	95 e0       	ldi	r25, 0x05	; 5
     9a8:	9f 93       	push	r25
     9aa:	8f 93       	push	r24
     9ac:	97 d4       	rcall	.+2350   	; 0x12dc <printf>
     9ae:	0f 90       	pop	r0
     9b0:	0f 90       	pop	r0
     9b2:	0f 90       	pop	r0
     9b4:	0f 90       	pop	r0
     9b6:	07 c0       	rjmp	.+14     	; 0x9c6 <ReceiveData+0x118>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9b8:	8f e1       	ldi	r24, 0x1F	; 31
     9ba:	9e e4       	ldi	r25, 0x4E	; 78
     9bc:	01 97       	sbiw	r24, 0x01	; 1
     9be:	f1 f7       	brne	.-4      	; 0x9bc <ReceiveData+0x10e>
     9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <ReceiveData+0x114>
     9c2:	00 00       	nop
     9c4:	89 cf       	rjmp	.-238    	; 0x8d8 <ReceiveData+0x2a>
     9c6:	81 e0       	ldi	r24, 0x01	; 1
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	df 91       	pop	r29
     9cc:	cf 91       	pop	r28
     9ce:	1f 91       	pop	r17
     9d0:	0f 91       	pop	r16
     9d2:	ff 90       	pop	r15
     9d4:	ef 90       	pop	r14
     9d6:	df 90       	pop	r13
     9d8:	cf 90       	pop	r12
     9da:	bf 90       	pop	r11
     9dc:	af 90       	pop	r10
     9de:	9f 90       	pop	r9
     9e0:	8f 90       	pop	r8
     9e2:	7f 90       	pop	r7
     9e4:	6f 90       	pop	r6
     9e6:	5f 90       	pop	r5
     9e8:	08 95       	ret

000009ea <uart_sendStream>:
     9ea:	cf 93       	push	r28
     9ec:	c8 2f       	mov	r28, r24
     9ee:	8a 30       	cpi	r24, 0x0A	; 10
     9f0:	11 f4       	brne	.+4      	; 0x9f6 <uart_sendStream+0xc>
     9f2:	8d e0       	ldi	r24, 0x0D	; 13
     9f4:	fa df       	rcall	.-12     	; 0x9ea <uart_sendStream>
     9f6:	e0 ed       	ldi	r30, 0xD0	; 208
     9f8:	f0 e0       	ldi	r31, 0x00	; 0
     9fa:	90 81       	ld	r25, Z
     9fc:	95 ff       	sbrs	r25, 5
     9fe:	fd cf       	rjmp	.-6      	; 0x9fa <uart_sendStream+0x10>
     a00:	c0 93 d6 00 	sts	0x00D6, r28
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	cf 91       	pop	r28
     a0a:	08 95       	ret

00000a0c <uart_receiveStream>:
     a0c:	cf 93       	push	r28
     a0e:	bc 01       	movw	r22, r24
     a10:	e0 ed       	ldi	r30, 0xD0	; 208
     a12:	f0 e0       	ldi	r31, 0x00	; 0
     a14:	80 81       	ld	r24, Z
     a16:	88 23       	and	r24, r24
     a18:	ec f7       	brge	.-6      	; 0xa14 <uart_receiveStream+0x8>
     a1a:	c0 91 d6 00 	lds	r28, 0x00D6
     a1e:	8c 2f       	mov	r24, r28
     a20:	e4 df       	rcall	.-56     	; 0x9ea <uart_sendStream>
     a22:	8c 2f       	mov	r24, r28
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	cf 91       	pop	r28
     a28:	08 95       	ret

00000a2a <uart0_init>:
     a2a:	10 92 d5 00 	sts	0x00D5, r1
     a2e:	83 e3       	ldi	r24, 0x33	; 51
     a30:	80 93 d4 00 	sts	0x00D4, r24
     a34:	88 e1       	ldi	r24, 0x18	; 24
     a36:	80 93 d1 00 	sts	0x00D1, r24
     a3a:	86 e0       	ldi	r24, 0x06	; 6
     a3c:	80 93 d2 00 	sts	0x00D2, r24
     a40:	88 e0       	ldi	r24, 0x08	; 8
     a42:	92 e0       	ldi	r25, 0x02	; 2
     a44:	90 93 9e 08 	sts	0x089E, r25
     a48:	80 93 9d 08 	sts	0x089D, r24
     a4c:	90 93 a0 08 	sts	0x08A0, r25
     a50:	80 93 9f 08 	sts	0x089F, r24
     a54:	08 95       	ret

00000a56 <setRAMStatus>:
     a56:	a3 98       	cbi	0x14, 3	; 20
     a58:	91 e0       	ldi	r25, 0x01	; 1
     a5a:	9e bd       	out	0x2e, r25	; 46
     a5c:	0d b4       	in	r0, 0x2d	; 45
     a5e:	07 fe       	sbrs	r0, 7
     a60:	fd cf       	rjmp	.-6      	; 0xa5c <setRAMStatus+0x6>
     a62:	8e bd       	out	0x2e, r24	; 46
     a64:	0d b4       	in	r0, 0x2d	; 45
     a66:	07 fe       	sbrs	r0, 7
     a68:	fd cf       	rjmp	.-6      	; 0xa64 <setRAMStatus+0xe>
     a6a:	a3 9a       	sbi	0x14, 3	; 20
     a6c:	08 95       	ret

00000a6e <SPI_WriteAddress>:
     a6e:	26 2f       	mov	r18, r22
     a70:	97 2f       	mov	r25, r23
     a72:	48 2f       	mov	r20, r24
     a74:	82 e0       	ldi	r24, 0x02	; 2
     a76:	8e bd       	out	0x2e, r24	; 46
     a78:	0d b4       	in	r0, 0x2d	; 45
     a7a:	07 fe       	sbrs	r0, 7
     a7c:	fd cf       	rjmp	.-6      	; 0xa78 <SPI_WriteAddress+0xa>
     a7e:	4e bd       	out	0x2e, r20	; 46
     a80:	0d b4       	in	r0, 0x2d	; 45
     a82:	07 fe       	sbrs	r0, 7
     a84:	fd cf       	rjmp	.-6      	; 0xa80 <SPI_WriteAddress+0x12>
     a86:	89 2f       	mov	r24, r25
     a88:	8e bd       	out	0x2e, r24	; 46
     a8a:	0d b4       	in	r0, 0x2d	; 45
     a8c:	07 fe       	sbrs	r0, 7
     a8e:	fd cf       	rjmp	.-6      	; 0xa8a <SPI_WriteAddress+0x1c>
     a90:	2e bd       	out	0x2e, r18	; 46
     a92:	0d b4       	in	r0, 0x2d	; 45
     a94:	07 fe       	sbrs	r0, 7
     a96:	fd cf       	rjmp	.-6      	; 0xa92 <SPI_WriteAddress+0x24>
     a98:	08 95       	ret

00000a9a <SPI_WriteData>:
     a9a:	8e bd       	out	0x2e, r24	; 46
     a9c:	0d b4       	in	r0, 0x2d	; 45
     a9e:	07 fe       	sbrs	r0, 7
     aa0:	fd cf       	rjmp	.-6      	; 0xa9c <SPI_WriteData+0x2>
     aa2:	08 95       	ret

00000aa4 <SPI_ReadAddress>:
     aa4:	26 2f       	mov	r18, r22
     aa6:	97 2f       	mov	r25, r23
     aa8:	48 2f       	mov	r20, r24
     aaa:	83 e0       	ldi	r24, 0x03	; 3
     aac:	8e bd       	out	0x2e, r24	; 46
     aae:	0d b4       	in	r0, 0x2d	; 45
     ab0:	07 fe       	sbrs	r0, 7
     ab2:	fd cf       	rjmp	.-6      	; 0xaae <SPI_ReadAddress+0xa>
     ab4:	4e bd       	out	0x2e, r20	; 46
     ab6:	0d b4       	in	r0, 0x2d	; 45
     ab8:	07 fe       	sbrs	r0, 7
     aba:	fd cf       	rjmp	.-6      	; 0xab6 <SPI_ReadAddress+0x12>
     abc:	89 2f       	mov	r24, r25
     abe:	8e bd       	out	0x2e, r24	; 46
     ac0:	0d b4       	in	r0, 0x2d	; 45
     ac2:	07 fe       	sbrs	r0, 7
     ac4:	fd cf       	rjmp	.-6      	; 0xac0 <SPI_ReadAddress+0x1c>
     ac6:	2e bd       	out	0x2e, r18	; 46
     ac8:	0d b4       	in	r0, 0x2d	; 45
     aca:	07 fe       	sbrs	r0, 7
     acc:	fd cf       	rjmp	.-6      	; 0xac8 <SPI_ReadAddress+0x24>
     ace:	08 95       	ret

00000ad0 <SPI_ReadData>:
     ad0:	1e bc       	out	0x2e, r1	; 46
     ad2:	0d b4       	in	r0, 0x2d	; 45
     ad4:	07 fe       	sbrs	r0, 7
     ad6:	fd cf       	rjmp	.-6      	; 0xad2 <SPI_ReadData+0x2>
     ad8:	8e b5       	in	r24, 0x2e	; 46
     ada:	08 95       	ret

00000adc <RAMPrint>:
     adc:	ef 92       	push	r14
     ade:	ff 92       	push	r15
     ae0:	0f 93       	push	r16
     ae2:	1f 93       	push	r17
     ae4:	cf 93       	push	r28
     ae6:	df 93       	push	r29
     ae8:	c6 2f       	mov	r28, r22
     aea:	d7 2f       	mov	r29, r23
     aec:	f8 2e       	mov	r15, r24
     aee:	e9 2e       	mov	r14, r25
     af0:	8a 01       	movw	r16, r20
     af2:	80 e4       	ldi	r24, 0x40	; 64
     af4:	b0 df       	rcall	.-160    	; 0xa56 <setRAMStatus>
     af6:	a3 98       	cbi	0x14, 3	; 20
     af8:	6c 2f       	mov	r22, r28
     afa:	7d 2f       	mov	r23, r29
     afc:	8f 2d       	mov	r24, r15
     afe:	9e 2d       	mov	r25, r14
     b00:	d1 df       	rcall	.-94     	; 0xaa4 <SPI_ReadAddress>
     b02:	ef 92       	push	r14
     b04:	ff 92       	push	r15
     b06:	df 93       	push	r29
     b08:	cf 93       	push	r28
     b0a:	86 e9       	ldi	r24, 0x96	; 150
     b0c:	95 e0       	ldi	r25, 0x05	; 5
     b0e:	9f 93       	push	r25
     b10:	8f 93       	push	r24
     b12:	e4 d3       	rcall	.+1992   	; 0x12dc <printf>
     b14:	0f 90       	pop	r0
     b16:	0f 90       	pop	r0
     b18:	0f 90       	pop	r0
     b1a:	0f 90       	pop	r0
     b1c:	0f 90       	pop	r0
     b1e:	0f 90       	pop	r0
     b20:	01 15       	cp	r16, r1
     b22:	11 05       	cpc	r17, r1
     b24:	51 f0       	breq	.+20     	; 0xb3a <RAMPrint+0x5e>
     b26:	c0 e0       	ldi	r28, 0x00	; 0
     b28:	d0 e0       	ldi	r29, 0x00	; 0
     b2a:	d2 df       	rcall	.-92     	; 0xad0 <SPI_ReadData>
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	e7 d3       	rcall	.+1998   	; 0x12fe <putchar>
     b30:	21 96       	adiw	r28, 0x01	; 1
     b32:	c0 17       	cp	r28, r16
     b34:	d1 07       	cpc	r29, r17
     b36:	c9 f7       	brne	.-14     	; 0xb2a <RAMPrint+0x4e>
     b38:	02 c0       	rjmp	.+4      	; 0xb3e <RAMPrint+0x62>
     b3a:	00 e0       	ldi	r16, 0x00	; 0
     b3c:	10 e0       	ldi	r17, 0x00	; 0
     b3e:	a3 9a       	sbi	0x14, 3	; 20
     b40:	1f 93       	push	r17
     b42:	0f 93       	push	r16
     b44:	87 ea       	ldi	r24, 0xA7	; 167
     b46:	95 e0       	ldi	r25, 0x05	; 5
     b48:	9f 93       	push	r25
     b4a:	8f 93       	push	r24
     b4c:	c7 d3       	rcall	.+1934   	; 0x12dc <printf>
     b4e:	0f 90       	pop	r0
     b50:	0f 90       	pop	r0
     b52:	0f 90       	pop	r0
     b54:	0f 90       	pop	r0
     b56:	df 91       	pop	r29
     b58:	cf 91       	pop	r28
     b5a:	1f 91       	pop	r17
     b5c:	0f 91       	pop	r16
     b5e:	ff 90       	pop	r15
     b60:	ef 90       	pop	r14
     b62:	08 95       	ret

00000b64 <RAMWriteByte>:
     b64:	cf 93       	push	r28
     b66:	c8 2f       	mov	r28, r24
     b68:	a3 98       	cbi	0x14, 3	; 20
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	7f df       	rcall	.-258    	; 0xa6e <SPI_WriteAddress>
     b70:	8c 2f       	mov	r24, r28
     b72:	93 df       	rcall	.-218    	; 0xa9a <SPI_WriteData>
     b74:	a3 9a       	sbi	0x14, 3	; 20
     b76:	cf 91       	pop	r28
     b78:	08 95       	ret

00000b7a <SPI_Init>:
     b7a:	84 b1       	in	r24, 0x04	; 4
     b7c:	87 68       	ori	r24, 0x87	; 135
     b7e:	84 b9       	out	0x04, r24	; 4
     b80:	23 98       	cbi	0x04, 3	; 4
     b82:	2f 9a       	sbi	0x05, 7	; 5
     b84:	9b 9a       	sbi	0x13, 3	; 19
     b86:	83 e5       	ldi	r24, 0x53	; 83
     b88:	8c bd       	out	0x2c, r24	; 44
     b8a:	60 e0       	ldi	r22, 0x00	; 0
     b8c:	70 e0       	ldi	r23, 0x00	; 0
     b8e:	82 e3       	ldi	r24, 0x32	; 50
     b90:	e9 cf       	rjmp	.-46     	; 0xb64 <RAMWriteByte>
     b92:	08 95       	ret

00000b94 <RAMReadByte>:
     b94:	a3 98       	cbi	0x14, 3	; 20
     b96:	bc 01       	movw	r22, r24
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	83 df       	rcall	.-250    	; 0xaa4 <SPI_ReadAddress>
     b9e:	98 df       	rcall	.-208    	; 0xad0 <SPI_ReadData>
     ba0:	a3 9a       	sbi	0x14, 3	; 20
     ba2:	08 95       	ret

00000ba4 <wifiInit>:
	
	//Overwrite the terminating byte with two new lines for the http request 
	RAMWrite(footer, WIFI_QSTRING_ADDRESS + j-1, strlen(footer));
	j+=strlen(footer)-1; 
	return j; 
}
     ba4:	b8 c0       	rjmp	.+368    	; 0xd16 <wifiDriverInit>
     ba6:	08 95       	ret

00000ba8 <setMachineMode>:
     ba8:	34 d1       	rcall	.+616    	; 0xe12 <disableReceiveINT>
     baa:	43 e5       	ldi	r20, 0x53	; 83
     bac:	52 e0       	ldi	r21, 0x02	; 2
     bae:	62 eb       	ldi	r22, 0xB2	; 178
     bb0:	75 e0       	ldi	r23, 0x05	; 5
     bb2:	82 e0       	ldi	r24, 0x02	; 2
     bb4:	e7 d1       	rcall	.+974    	; 0xf84 <sendCommand>
     bb6:	45 ec       	ldi	r20, 0xC5	; 197
     bb8:	55 e0       	ldi	r21, 0x05	; 5
     bba:	67 ec       	ldi	r22, 0xC7	; 199
     bbc:	75 e0       	ldi	r23, 0x05	; 5
     bbe:	82 e0       	ldi	r24, 0x02	; 2
     bc0:	e1 d1       	rcall	.+962    	; 0xf84 <sendCommand>
     bc2:	43 e5       	ldi	r20, 0x53	; 83
     bc4:	52 e0       	ldi	r21, 0x02	; 2
     bc6:	61 ee       	ldi	r22, 0xE1	; 225
     bc8:	75 e0       	ldi	r23, 0x05	; 5
     bca:	82 e0       	ldi	r24, 0x02	; 2
     bcc:	db d1       	rcall	.+950    	; 0xf84 <sendCommand>
     bce:	4b ef       	ldi	r20, 0xFB	; 251
     bd0:	55 e0       	ldi	r21, 0x05	; 5
     bd2:	6f ef       	ldi	r22, 0xFF	; 255
     bd4:	75 e0       	ldi	r23, 0x05	; 5
     bd6:	82 e0       	ldi	r24, 0x02	; 2
     bd8:	d5 d1       	rcall	.+938    	; 0xf84 <sendCommand>
     bda:	12 c1       	rjmp	.+548    	; 0xe00 <enableReceiveINT>
     bdc:	08 95       	ret

00000bde <networkScan>:
     bde:	60 e0       	ldi	r22, 0x00	; 0
     be0:	70 e0       	ldi	r23, 0x00	; 0
     be2:	cb 01       	movw	r24, r22
     be4:	c6 d1       	rcall	.+908    	; 0xf72 <updateRAMAddress>
     be6:	0c d1       	rcall	.+536    	; 0xe00 <enableReceiveINT>
     be8:	47 e3       	ldi	r20, 0x37	; 55
     bea:	53 e0       	ldi	r21, 0x03	; 3
     bec:	62 e1       	ldi	r22, 0x12	; 18
     bee:	76 e0       	ldi	r23, 0x06	; 6
     bf0:	8f ef       	ldi	r24, 0xFF	; 255
     bf2:	c8 d1       	rcall	.+912    	; 0xf84 <sendCommand>
     bf4:	5d 98       	cbi	0x0b, 5	; 11
     bf6:	15 d1       	rcall	.+554    	; 0xe22 <receiveStatus>
     bf8:	87 e3       	ldi	r24, 0x37	; 55
     bfa:	93 e0       	ldi	r25, 0x03	; 3
     bfc:	08 95       	ret

00000bfe <getFileWifi>:

char* getFileWifi(char* filepath, int externRAM, uint32_t RAMAddress, int multiReceive)
{ 
     bfe:	2f 92       	push	r2
     c00:	3f 92       	push	r3
     c02:	4f 92       	push	r4
     c04:	5f 92       	push	r5
     c06:	6f 92       	push	r6
     c08:	7f 92       	push	r7
     c0a:	8f 92       	push	r8
     c0c:	9f 92       	push	r9
     c0e:	af 92       	push	r10
     c10:	bf 92       	push	r11
     c12:	cf 92       	push	r12
     c14:	df 92       	push	r13
     c16:	ef 92       	push	r14
     c18:	ff 92       	push	r15
     c1a:	0f 93       	push	r16
     c1c:	1f 93       	push	r17
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
     c22:	ec 01       	movw	r28, r24
     c24:	6b 01       	movw	r12, r22
     c26:	49 01       	movw	r8, r18
     c28:	5a 01       	movw	r10, r20
	//printf("Filepath: %s\n", filepath);
	//enableReceiveINT();
	//setTestPrint(1); 
	enableReceiveINT();   
     c2a:	ea d0       	rcall	.+468    	; 0xe00 <enableReceiveINT>
	PORTD &= ~(1<<CTS);
     c2c:	5c 98       	cbi	0x0b, 4	; 11
	setReceiveCounter(0);
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	9e d0       	rcall	.+316    	; 0xd70 <setReceiveCounter>
	uint16_t i = 0; 
	char* receiveHeader; 
	//setCompressFlag(1);
	PORTD |= (1<<CTS);
     c34:	5c 9a       	sbi	0x0b, 4	; 11
	sendCommand(NOPREFIX, HTTP_GET, filepath);
     c36:	ae 01       	movw	r20, r28
     c38:	65 e5       	ldi	r22, 0x55	; 85
     c3a:	72 e0       	ldi	r23, 0x02	; 2
     c3c:	8f ef       	ldi	r24, 0xFF	; 255
     c3e:	a2 d1       	rcall	.+836    	; 0xf84 <sendCommand>
	receiveStatus();
     c40:	f0 d0       	rcall	.+480    	; 0xe22 <receiveStatus>
	//enableReceiveINT();
	//setTestPrint(1); 
	enableReceiveINT();   
	PORTD &= ~(1<<CTS);
	setReceiveCounter(0);
	uint16_t i = 0; 
     c42:	e1 2c       	mov	r14, r1
     c44:	f1 2c       	mov	r15, r1
			printf("RAM Address: %d\n", RAMAddress+i); 
		}
		sendCommand(NOPREFIX, STREAM_READ, "0 10000");
		receiveStatus();
		receiveHeader = getMessageHeader(); 
		printf("Tran Length: %d\n", receiveHeader); 
     c46:	0f 2e       	mov	r0, r31
     c48:	fe e5       	ldi	r31, 0x5E	; 94
     c4a:	2f 2e       	mov	r2, r31
     c4c:	f2 e0       	ldi	r31, 0x02	; 2
     c4e:	3f 2e       	mov	r3, r31
     c50:	f0 2d       	mov	r31, r0
	PORTD |= (1<<CTS);
	sendCommand(NOPREFIX, HTTP_GET, filepath);
	receiveStatus();
	do 
	{
		if(externRAM){
     c52:	c1 14       	cp	r12, r1
     c54:	d1 04       	cpc	r13, r1
     c56:	c1 f0       	breq	.+48     	; 0xc88 <getFileWifi+0x8a>
			updateRAMAddress(RAMAddress + i);
     c58:	24 01       	movw	r4, r8
     c5a:	35 01       	movw	r6, r10
     c5c:	4e 0c       	add	r4, r14
     c5e:	5f 1c       	adc	r5, r15
     c60:	61 1c       	adc	r6, r1
     c62:	71 1c       	adc	r7, r1
     c64:	c3 01       	movw	r24, r6
     c66:	b2 01       	movw	r22, r4
     c68:	84 d1       	rcall	.+776    	; 0xf72 <updateRAMAddress>
			printf("RAM Address: %d\n", RAMAddress+i); 
     c6a:	7f 92       	push	r7
     c6c:	6f 92       	push	r6
     c6e:	5f 92       	push	r5
     c70:	4f 92       	push	r4
     c72:	a9 e5       	ldi	r26, 0x59	; 89
     c74:	b6 e0       	ldi	r27, 0x06	; 6
     c76:	bf 93       	push	r27
     c78:	af 93       	push	r26
     c7a:	30 d3       	rcall	.+1632   	; 0x12dc <printf>
     c7c:	0f 90       	pop	r0
     c7e:	0f 90       	pop	r0
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	0f 90       	pop	r0
     c86:	0f 90       	pop	r0
		}
		sendCommand(NOPREFIX, STREAM_READ, "0 10000");
     c88:	4a e6       	ldi	r20, 0x6A	; 106
     c8a:	56 e0       	ldi	r21, 0x06	; 6
     c8c:	62 e7       	ldi	r22, 0x72	; 114
     c8e:	76 e0       	ldi	r23, 0x06	; 6
     c90:	8f ef       	ldi	r24, 0xFF	; 255
     c92:	78 d1       	rcall	.+752    	; 0xf84 <sendCommand>
		receiveStatus();
     c94:	c6 d0       	rcall	.+396    	; 0xe22 <receiveStatus>
		receiveHeader = getMessageHeader(); 
     c96:	6a d1       	rcall	.+724    	; 0xf6c <getMessageHeader>
     c98:	ec 01       	movw	r28, r24
		printf("Tran Length: %d\n", receiveHeader); 
     c9a:	df 93       	push	r29
     c9c:	cf 93       	push	r28
     c9e:	3f 92       	push	r3
     ca0:	2f 92       	push	r2
     ca2:	1c d3       	rcall	.+1592   	; 0x12dc <printf>
		if(receiveHeader[errorCode] == '1'){
     ca4:	0f 90       	pop	r0
     ca6:	0f 90       	pop	r0
     ca8:	0f 90       	pop	r0
     caa:	0f 90       	pop	r0
     cac:	89 81       	ldd	r24, Y+1	; 0x01
     cae:	81 33       	cpi	r24, 0x31	; 49
     cb0:	31 f0       	breq	.+12     	; 0xcbe <getFileWifi+0xc0>
			break; 
		}
		i += getTransmissionLength(); 
     cb2:	57 d1       	rcall	.+686    	; 0xf62 <getTransmissionLength>
     cb4:	e8 0e       	add	r14, r24
     cb6:	f9 1e       	adc	r15, r25
	} while (multiReceive);
     cb8:	01 15       	cp	r16, r1
     cba:	11 05       	cpc	r17, r1
     cbc:	51 f6       	brne	.-108    	; 0xc52 <getFileWifi+0x54>
	
	disableReceiveINT(); 
     cbe:	a9 d0       	rcall	.+338    	; 0xe12 <disableReceiveINT>
	//_delay_ms(3000);  
	sendCommand(NOPREFIX, STREAM_CLOSE, NOVAL);
     cc0:	47 e3       	ldi	r20, 0x37	; 55
     cc2:	53 e0       	ldi	r21, 0x03	; 3
     cc4:	6e e7       	ldi	r22, 0x7E	; 126
     cc6:	76 e0       	ldi	r23, 0x06	; 6
     cc8:	8f ef       	ldi	r24, 0xFF	; 255
     cca:	5c d1       	rcall	.+696    	; 0xf84 <sendCommand>
	//receiveStatus(); 
}
     ccc:	df 91       	pop	r29
     cce:	cf 91       	pop	r28
     cd0:	1f 91       	pop	r17
     cd2:	0f 91       	pop	r16
     cd4:	ff 90       	pop	r15
     cd6:	ef 90       	pop	r14
     cd8:	df 90       	pop	r13
     cda:	cf 90       	pop	r12
     cdc:	bf 90       	pop	r11
     cde:	af 90       	pop	r10
     ce0:	9f 90       	pop	r9
     ce2:	8f 90       	pop	r8
     ce4:	7f 90       	pop	r7
     ce6:	6f 90       	pop	r6
     ce8:	5f 90       	pop	r5
     cea:	4f 90       	pop	r4
     cec:	3f 90       	pop	r3
     cee:	2f 90       	pop	r2
     cf0:	08 95       	ret

00000cf2 <updateFileWifi>:

void updateFileWifi(char* filepath)
{
     cf2:	cf 93       	push	r28
     cf4:	df 93       	push	r29
     cf6:	ec 01       	movw	r28, r24
	disableReceiveINT(); 
     cf8:	8c d0       	rcall	.+280    	; 0xe12 <disableReceiveINT>
	sendCommand(NOPREFIX, filepath, NOVAL);
     cfa:	47 e3       	ldi	r20, 0x37	; 55
     cfc:	53 e0       	ldi	r21, 0x03	; 3
     cfe:	be 01       	movw	r22, r28
     d00:	8f ef       	ldi	r24, 0xFF	; 255
     d02:	40 d1       	rcall	.+640    	; 0xf84 <sendCommand>
	sendCommand(NOPREFIX, STREAM_CLOSE, NOVAL); 	
     d04:	47 e3       	ldi	r20, 0x37	; 55
     d06:	53 e0       	ldi	r21, 0x03	; 3
     d08:	6e e7       	ldi	r22, 0x7E	; 126
     d0a:	76 e0       	ldi	r23, 0x06	; 6
     d0c:	8f ef       	ldi	r24, 0xFF	; 255
     d0e:	3a d1       	rcall	.+628    	; 0xf84 <sendCommand>
}
     d10:	df 91       	pop	r29
     d12:	cf 91       	pop	r28
     d14:	08 95       	ret

00000d16 <wifiDriverInit>:
	//0 denotes a successful command 
	if(header[errorCode] != '0')
		return 1; 
	else 
		return 0; 
}
     d16:	10 92 37 08 	sts	0x0837, r1
     d1a:	10 92 36 08 	sts	0x0836, r1
     d1e:	10 92 2b 08 	sts	0x082B, r1
     d22:	10 92 2a 08 	sts	0x082A, r1
     d26:	10 92 28 08 	sts	0x0828, r1
     d2a:	10 92 2d 08 	sts	0x082D, r1
     d2e:	10 92 2c 08 	sts	0x082C, r1
     d32:	10 92 38 08 	sts	0x0838, r1
     d36:	10 92 31 08 	sts	0x0831, r1
     d3a:	10 92 30 08 	sts	0x0830, r1
     d3e:	10 92 32 08 	sts	0x0832, r1
     d42:	10 92 33 08 	sts	0x0833, r1
     d46:	10 92 34 08 	sts	0x0834, r1
     d4a:	10 92 35 08 	sts	0x0835, r1
     d4e:	89 e0       	ldi	r24, 0x09	; 9
     d50:	ef e1       	ldi	r30, 0x1F	; 31
     d52:	f8 e0       	ldi	r31, 0x08	; 8
     d54:	df 01       	movw	r26, r30
     d56:	1d 92       	st	X+, r1
     d58:	8a 95       	dec	r24
     d5a:	e9 f7       	brne	.-6      	; 0xd56 <wifiDriverInit+0x40>
     d5c:	10 92 1d 08 	sts	0x081D, r1
     d60:	10 92 2f 08 	sts	0x082F, r1
     d64:	10 92 2e 08 	sts	0x082E, r1
     d68:	08 95       	ret

00000d6a <setCompressFlag>:
     d6a:	80 93 2f 08 	sts	0x082F, r24
     d6e:	08 95       	ret

00000d70 <setReceiveCounter>:
     d70:	90 93 2d 08 	sts	0x082D, r25
     d74:	80 93 2c 08 	sts	0x082C, r24
     d78:	08 95       	ret

00000d7a <uart_init>:
     d7a:	10 92 c5 00 	sts	0x00C5, r1
     d7e:	87 e0       	ldi	r24, 0x07	; 7
     d80:	80 93 c4 00 	sts	0x00C4, r24
     d84:	e1 ec       	ldi	r30, 0xC1	; 193
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	88 e1       	ldi	r24, 0x18	; 24
     d8a:	80 83       	st	Z, r24
     d8c:	86 e0       	ldi	r24, 0x06	; 6
     d8e:	80 93 c2 00 	sts	0x00C2, r24
     d92:	80 81       	ld	r24, Z
     d94:	80 68       	ori	r24, 0x80	; 128
     d96:	80 83       	st	Z, r24
     d98:	08 95       	ret

00000d9a <uart_send>:
     d9a:	cf 93       	push	r28
     d9c:	df 93       	push	r29
     d9e:	10 92 38 08 	sts	0x0838, r1
     da2:	29 e0       	ldi	r18, 0x09	; 9
     da4:	ef e1       	ldi	r30, 0x1F	; 31
     da6:	f8 e0       	ldi	r31, 0x08	; 8
     da8:	df 01       	movw	r26, r30
     daa:	1d 92       	st	X+, r1
     dac:	2a 95       	dec	r18
     dae:	e9 f7       	brne	.-6      	; 0xdaa <uart_send+0x10>
     db0:	61 15       	cp	r22, r1
     db2:	71 05       	cpc	r23, r1
     db4:	a9 f0       	breq	.+42     	; 0xde0 <uart_send+0x46>
     db6:	20 e0       	ldi	r18, 0x00	; 0
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	50 e0       	ldi	r21, 0x00	; 0
     dbc:	e0 ec       	ldi	r30, 0xC0	; 192
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	a6 ec       	ldi	r26, 0xC6	; 198
     dc2:	b0 e0       	ldi	r27, 0x00	; 0
     dc4:	40 81       	ld	r20, Z
     dc6:	45 ff       	sbrs	r20, 5
     dc8:	fd cf       	rjmp	.-6      	; 0xdc4 <uart_send+0x2a>
     dca:	ec 01       	movw	r28, r24
     dcc:	c2 0f       	add	r28, r18
     dce:	d3 1f       	adc	r29, r19
     dd0:	28 81       	ld	r18, Y
     dd2:	2c 93       	st	X, r18
     dd4:	5f 5f       	subi	r21, 0xFF	; 255
     dd6:	25 2f       	mov	r18, r21
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	26 17       	cp	r18, r22
     ddc:	37 07       	cpc	r19, r23
     dde:	90 f3       	brcs	.-28     	; 0xdc4 <uart_send+0x2a>
     de0:	86 e9       	ldi	r24, 0x96	; 150
     de2:	92 e0       	ldi	r25, 0x02	; 2
     de4:	91 d2       	rcall	.+1314   	; 0x1308 <puts>
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	df 91       	pop	r29
     dec:	cf 91       	pop	r28
     dee:	08 95       	ret

00000df0 <uart_receiveChar>:
     df0:	e0 ec       	ldi	r30, 0xC0	; 192
     df2:	f0 e0       	ldi	r31, 0x00	; 0
     df4:	80 81       	ld	r24, Z
     df6:	88 23       	and	r24, r24
     df8:	ec f7       	brge	.-6      	; 0xdf4 <uart_receiveChar+0x4>
     dfa:	80 91 c6 00 	lds	r24, 0x00C6
     dfe:	08 95       	ret

00000e00 <enableReceiveINT>:
     e00:	e1 ec       	ldi	r30, 0xC1	; 193
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	80 81       	ld	r24, Z
     e06:	80 68       	ori	r24, 0x80	; 128
     e08:	80 83       	st	Z, r24
     e0a:	78 94       	sei
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	08 95       	ret

00000e12 <disableReceiveINT>:
     e12:	e1 ec       	ldi	r30, 0xC1	; 193
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	8f 77       	andi	r24, 0x7F	; 127
     e1a:	80 83       	st	Z, r24
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	08 95       	ret

00000e22 <receiveStatus>:
     e22:	80 91 38 08 	lds	r24, 0x0838
     e26:	81 11       	cpse	r24, r1
     e28:	08 c0       	rjmp	.+16     	; 0xe3a <receiveStatus+0x18>
     e2a:	81 e2       	ldi	r24, 0x21	; 33
     e2c:	8a 95       	dec	r24
     e2e:	f1 f7       	brne	.-4      	; 0xe2c <receiveStatus+0xa>
     e30:	00 00       	nop
     e32:	80 91 38 08 	lds	r24, 0x0838
     e36:	88 23       	and	r24, r24
     e38:	c1 f3       	breq	.-16     	; 0xe2a <receiveStatus+0x8>
     e3a:	81 e0       	ldi	r24, 0x01	; 1
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	08 95       	ret

00000e40 <buildTransmissionLength>:
     e40:	0f 93       	push	r16
     e42:	1f 93       	push	r17
     e44:	cf 93       	push	r28
     e46:	df 93       	push	r29
     e48:	80 91 2a 08 	lds	r24, 0x082A
     e4c:	90 91 2b 08 	lds	r25, 0x082B
     e50:	89 2b       	or	r24, r25
     e52:	e1 f0       	breq	.+56     	; 0xe8c <buildTransmissionLength+0x4c>
     e54:	c0 e0       	ldi	r28, 0x00	; 0
     e56:	d0 e0       	ldi	r29, 0x00	; 0
     e58:	0f e8       	ldi	r16, 0x8F	; 143
     e5a:	16 e0       	ldi	r17, 0x06	; 6
     e5c:	fe 01       	movw	r30, r28
     e5e:	e1 5e       	subi	r30, 0xE1	; 225
     e60:	f7 4f       	sbci	r31, 0xF7	; 247
     e62:	80 81       	ld	r24, Z
     e64:	ff 93       	push	r31
     e66:	ef 93       	push	r30
     e68:	1f 92       	push	r1
     e6a:	8f 93       	push	r24
     e6c:	1f 93       	push	r17
     e6e:	0f 93       	push	r16
     e70:	35 d2       	rcall	.+1130   	; 0x12dc <printf>
     e72:	21 96       	adiw	r28, 0x01	; 1
     e74:	0f 90       	pop	r0
     e76:	0f 90       	pop	r0
     e78:	0f 90       	pop	r0
     e7a:	0f 90       	pop	r0
     e7c:	0f 90       	pop	r0
     e7e:	0f 90       	pop	r0
     e80:	c9 30       	cpi	r28, 0x09	; 9
     e82:	d1 05       	cpc	r29, r1
     e84:	59 f7       	brne	.-42     	; 0xe5c <buildTransmissionLength+0x1c>
     e86:	8a e0       	ldi	r24, 0x0A	; 10
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	39 d2       	rcall	.+1138   	; 0x12fe <putchar>
     e8c:	10 92 31 08 	sts	0x0831, r1
     e90:	10 92 30 08 	sts	0x0830, r1
     e94:	20 91 25 08 	lds	r18, 0x0825
     e98:	80 91 30 08 	lds	r24, 0x0830
     e9c:	90 91 31 08 	lds	r25, 0x0831
     ea0:	2f 70       	andi	r18, 0x0F	; 15
     ea2:	82 0f       	add	r24, r18
     ea4:	91 1d       	adc	r25, r1
     ea6:	90 93 31 08 	sts	0x0831, r25
     eaa:	80 93 30 08 	sts	0x0830, r24
     eae:	80 91 24 08 	lds	r24, 0x0824
     eb2:	20 91 30 08 	lds	r18, 0x0830
     eb6:	30 91 31 08 	lds	r19, 0x0831
     eba:	8f 70       	andi	r24, 0x0F	; 15
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	ac 01       	movw	r20, r24
     ec0:	44 0f       	add	r20, r20
     ec2:	55 1f       	adc	r21, r21
     ec4:	88 0f       	add	r24, r24
     ec6:	99 1f       	adc	r25, r25
     ec8:	88 0f       	add	r24, r24
     eca:	99 1f       	adc	r25, r25
     ecc:	88 0f       	add	r24, r24
     ece:	99 1f       	adc	r25, r25
     ed0:	84 0f       	add	r24, r20
     ed2:	95 1f       	adc	r25, r21
     ed4:	82 0f       	add	r24, r18
     ed6:	93 1f       	adc	r25, r19
     ed8:	90 93 31 08 	sts	0x0831, r25
     edc:	80 93 30 08 	sts	0x0830, r24
     ee0:	20 91 23 08 	lds	r18, 0x0823
     ee4:	80 91 30 08 	lds	r24, 0x0830
     ee8:	90 91 31 08 	lds	r25, 0x0831
     eec:	2f 70       	andi	r18, 0x0F	; 15
     eee:	34 e6       	ldi	r19, 0x64	; 100
     ef0:	23 9f       	mul	r18, r19
     ef2:	80 0d       	add	r24, r0
     ef4:	91 1d       	adc	r25, r1
     ef6:	11 24       	eor	r1, r1
     ef8:	90 93 31 08 	sts	0x0831, r25
     efc:	80 93 30 08 	sts	0x0830, r24
     f00:	60 91 22 08 	lds	r22, 0x0822
     f04:	80 91 30 08 	lds	r24, 0x0830
     f08:	90 91 31 08 	lds	r25, 0x0831
     f0c:	6f 70       	andi	r22, 0x0F	; 15
     f0e:	48 ee       	ldi	r20, 0xE8	; 232
     f10:	53 e0       	ldi	r21, 0x03	; 3
     f12:	64 9f       	mul	r22, r20
     f14:	90 01       	movw	r18, r0
     f16:	65 9f       	mul	r22, r21
     f18:	30 0d       	add	r19, r0
     f1a:	11 24       	eor	r1, r1
     f1c:	82 0f       	add	r24, r18
     f1e:	93 1f       	adc	r25, r19
     f20:	90 93 31 08 	sts	0x0831, r25
     f24:	80 93 30 08 	sts	0x0830, r24
     f28:	60 91 21 08 	lds	r22, 0x0821
     f2c:	80 91 30 08 	lds	r24, 0x0830
     f30:	90 91 31 08 	lds	r25, 0x0831
     f34:	6f 70       	andi	r22, 0x0F	; 15
     f36:	40 e1       	ldi	r20, 0x10	; 16
     f38:	57 e2       	ldi	r21, 0x27	; 39
     f3a:	64 9f       	mul	r22, r20
     f3c:	90 01       	movw	r18, r0
     f3e:	65 9f       	mul	r22, r21
     f40:	30 0d       	add	r19, r0
     f42:	11 24       	eor	r1, r1
     f44:	82 0f       	add	r24, r18
     f46:	93 1f       	adc	r25, r19
     f48:	90 93 31 08 	sts	0x0831, r25
     f4c:	80 93 30 08 	sts	0x0830, r24
     f50:	80 91 30 08 	lds	r24, 0x0830
     f54:	90 91 31 08 	lds	r25, 0x0831
     f58:	df 91       	pop	r29
     f5a:	cf 91       	pop	r28
     f5c:	1f 91       	pop	r17
     f5e:	0f 91       	pop	r16
     f60:	08 95       	ret

00000f62 <getTransmissionLength>:
     f62:	80 91 30 08 	lds	r24, 0x0830
     f66:	90 91 31 08 	lds	r25, 0x0831
     f6a:	08 95       	ret

00000f6c <getMessageHeader>:
     f6c:	8f e1       	ldi	r24, 0x1F	; 31
     f6e:	98 e0       	ldi	r25, 0x08	; 8
     f70:	08 95       	ret

00000f72 <updateRAMAddress>:

void updateRAMAddress(uint32_t address)
{
	RAMAddress = address; 
     f72:	60 93 32 08 	sts	0x0832, r22
     f76:	70 93 33 08 	sts	0x0833, r23
     f7a:	80 93 34 08 	sts	0x0834, r24
     f7e:	90 93 35 08 	sts	0x0835, r25
     f82:	08 95       	ret

00000f84 <sendCommand>:
}

unsigned int sendCommand(int8_t prefix, char* command, char* value)
{
     f84:	0f 93       	push	r16
     f86:	1f 93       	push	r17
     f88:	cf 93       	push	r28
     f8a:	df 93       	push	r29
     f8c:	ea 01       	movw	r28, r20
	//char* fullCommand = (char *)malloc(MaxSendSize);
	switch(prefix)
     f8e:	81 30       	cpi	r24, 0x01	; 1
     f90:	31 f0       	breq	.+12     	; 0xf9e <sendCommand+0x1a>
     f92:	82 30       	cpi	r24, 0x02	; 2
     f94:	71 f0       	breq	.+28     	; 0xfb2 <sendCommand+0x2e>
     f96:	8f 3f       	cpi	r24, 0xFF	; 255
     f98:	09 f0       	breq	.+2      	; 0xf9c <sendCommand+0x18>
     f9a:	66 c0       	rjmp	.+204    	; 0x1068 <sendCommand+0xe4>
     f9c:	17 c0       	rjmp	.+46     	; 0xfcc <sendCommand+0x48>
	{
		case NOPREFIX: 
			break; 
		case GET:
			strcpy(fullCommand, "get "); 
     f9e:	85 e0       	ldi	r24, 0x05	; 5
     fa0:	eb ea       	ldi	r30, 0xAB	; 171
     fa2:	f6 e0       	ldi	r31, 0x06	; 6
     fa4:	a9 e3       	ldi	r26, 0x39	; 57
     fa6:	b8 e0       	ldi	r27, 0x08	; 8
     fa8:	01 90       	ld	r0, Z+
     faa:	0d 92       	st	X+, r0
     fac:	8a 95       	dec	r24
     fae:	e1 f7       	brne	.-8      	; 0xfa8 <sendCommand+0x24>
			//strcat(fullCommand, "get ");
			break; 
     fb0:	0d c0       	rjmp	.+26     	; 0xfcc <sendCommand+0x48>
		case SET: 
			strcat(fullCommand, "set ");
     fb2:	a9 e3       	ldi	r26, 0x39	; 57
     fb4:	b8 e0       	ldi	r27, 0x08	; 8
     fb6:	0d 90       	ld	r0, X+
     fb8:	00 20       	and	r0, r0
     fba:	e9 f7       	brne	.-6      	; 0xfb6 <sendCommand+0x32>
     fbc:	11 97       	sbiw	r26, 0x01	; 1
     fbe:	85 e0       	ldi	r24, 0x05	; 5
     fc0:	e0 eb       	ldi	r30, 0xB0	; 176
     fc2:	f6 e0       	ldi	r31, 0x06	; 6
     fc4:	01 90       	ld	r0, Z+
     fc6:	0d 92       	st	X+, r0
     fc8:	8a 95       	dec	r24
     fca:	e1 f7       	brne	.-8      	; 0xfc4 <sendCommand+0x40>
			return 0; 
			break; 
	}
	//printf("Command: %s Length: %d, Address: %p\n", fullCommand, strlen(fullCommand), fullCommand);
	//printf("Command: %s Length: %d, Address: %p\n", command, strlen(command),  command);
	strcat(fullCommand, command);
     fcc:	89 e3       	ldi	r24, 0x39	; 57
     fce:	98 e0       	ldi	r25, 0x08	; 8
     fd0:	41 d1       	rcall	.+642    	; 0x1254 <strcat>
	//printf("Full Command: %s", fullCommand);	
	if(value != NOVAL)
     fd2:	83 e0       	ldi	r24, 0x03	; 3
     fd4:	c7 33       	cpi	r28, 0x37	; 55
     fd6:	d8 07       	cpc	r29, r24
     fd8:	71 f0       	breq	.+28     	; 0xff6 <sendCommand+0x72>
	{
		strcat(fullCommand, " ");
     fda:	e9 e3       	ldi	r30, 0x39	; 57
     fdc:	f8 e0       	ldi	r31, 0x08	; 8
     fde:	01 90       	ld	r0, Z+
     fe0:	00 20       	and	r0, r0
     fe2:	e9 f7       	brne	.-6      	; 0xfde <sendCommand+0x5a>
     fe4:	31 97       	sbiw	r30, 0x01	; 1
     fe6:	80 e2       	ldi	r24, 0x20	; 32
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	91 83       	std	Z+1, r25	; 0x01
     fec:	80 83       	st	Z, r24
		strcat(fullCommand, value);
     fee:	be 01       	movw	r22, r28
     ff0:	89 e3       	ldi	r24, 0x39	; 57
     ff2:	98 e0       	ldi	r25, 0x08	; 8
     ff4:	2f d1       	rcall	.+606    	; 0x1254 <strcat>
	}
	
	//printf("fullCommand: %s\n", fullCommand);
	strcat(fullCommand, ENDCOMMAND);
     ff6:	c9 e3       	ldi	r28, 0x39	; 57
     ff8:	d8 e0       	ldi	r29, 0x08	; 8
     ffa:	fe 01       	movw	r30, r28
     ffc:	01 90       	ld	r0, Z+
     ffe:	00 20       	and	r0, r0
    1000:	e9 f7       	brne	.-6      	; 0xffc <sendCommand+0x78>
    1002:	31 97       	sbiw	r30, 0x01	; 1
    1004:	8d e0       	ldi	r24, 0x0D	; 13
    1006:	9a e0       	ldi	r25, 0x0A	; 10
    1008:	a0 e0       	ldi	r26, 0x00	; 0
    100a:	80 83       	st	Z, r24
    100c:	91 83       	std	Z+1, r25	; 0x01
    100e:	a2 83       	std	Z+2, r26	; 0x02
	uint16_t length = strlen(fullCommand);
    1010:	fe 01       	movw	r30, r28
    1012:	01 90       	ld	r0, Z+
    1014:	00 20       	and	r0, r0
    1016:	e9 f7       	brne	.-6      	; 0x1012 <sendCommand+0x8e>
    1018:	31 97       	sbiw	r30, 0x01	; 1
    101a:	8f 01       	movw	r16, r30
    101c:	09 53       	subi	r16, 0x39	; 57
    101e:	18 40       	sbci	r17, 0x08	; 8
	printf("Command: %s Length: %d, Address: %p\n", fullCommand, length, fullCommand);
    1020:	df 93       	push	r29
    1022:	cf 93       	push	r28
    1024:	1f 93       	push	r17
    1026:	0f 93       	push	r16
    1028:	df 93       	push	r29
    102a:	cf 93       	push	r28
    102c:	85 eb       	ldi	r24, 0xB5	; 181
    102e:	96 e0       	ldi	r25, 0x06	; 6
    1030:	9f 93       	push	r25
    1032:	8f 93       	push	r24
    1034:	53 d1       	rcall	.+678    	; 0x12dc <printf>
	uart_send(fullCommand, length);
    1036:	b8 01       	movw	r22, r16
    1038:	ce 01       	movw	r24, r28
    103a:	af de       	rcall	.-674    	; 0xd9a <uart_send>
	memset(fullCommand, 0x00, 100);
    103c:	84 e6       	ldi	r24, 0x64	; 100
    103e:	fe 01       	movw	r30, r28
    1040:	11 92       	st	Z+, r1
    1042:	8a 95       	dec	r24
    1044:	e9 f7       	brne	.-6      	; 0x1040 <sendCommand+0xbc>
	//PORTD |= (1<<RTS);
	printf("Freed!\n");
    1046:	8a ed       	ldi	r24, 0xDA	; 218
    1048:	96 e0       	ldi	r25, 0x06	; 6
    104a:	5e d1       	rcall	.+700    	; 0x1308 <puts>
	printf("Returning!\n");
    104c:	81 ee       	ldi	r24, 0xE1	; 225
    104e:	96 e0       	ldi	r25, 0x06	; 6
    1050:	5b d1       	rcall	.+694    	; 0x1308 <puts>
	return 1; 
    1052:	8d b7       	in	r24, 0x3d	; 61
    1054:	9e b7       	in	r25, 0x3e	; 62
    1056:	08 96       	adiw	r24, 0x08	; 8
    1058:	0f b6       	in	r0, 0x3f	; 63
    105a:	f8 94       	cli
    105c:	9e bf       	out	0x3e, r25	; 62
    105e:	0f be       	out	0x3f, r0	; 63
    1060:	8d bf       	out	0x3d, r24	; 61
    1062:	81 e0       	ldi	r24, 0x01	; 1
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	02 c0       	rjmp	.+4      	; 0x106c <sendCommand+0xe8>
			break; 
		case SET: 
			strcat(fullCommand, "set ");
			break; 
		default:
			return 0; 
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	90 e0       	ldi	r25, 0x00	; 0
	memset(fullCommand, 0x00, 100);
	//PORTD |= (1<<RTS);
	printf("Freed!\n");
	printf("Returning!\n");
	return 1; 
}
    106c:	df 91       	pop	r29
    106e:	cf 91       	pop	r28
    1070:	1f 91       	pop	r17
    1072:	0f 91       	pop	r16
    1074:	08 95       	ret

00001076 <__vector_25>:
	//PORTD |= (1<<CTS);
	//sei();
//}

ISR(USART0_RX_vect)
{
    1076:	1f 92       	push	r1
    1078:	0f 92       	push	r0
    107a:	0f b6       	in	r0, 0x3f	; 63
    107c:	0f 92       	push	r0
    107e:	11 24       	eor	r1, r1
    1080:	0b b6       	in	r0, 0x3b	; 59
    1082:	0f 92       	push	r0
    1084:	2f 93       	push	r18
    1086:	3f 93       	push	r19
    1088:	4f 93       	push	r20
    108a:	5f 93       	push	r21
    108c:	6f 93       	push	r22
    108e:	7f 93       	push	r23
    1090:	8f 93       	push	r24
    1092:	9f 93       	push	r25
    1094:	af 93       	push	r26
    1096:	bf 93       	push	r27
    1098:	cf 93       	push	r28
    109a:	df 93       	push	r29
    109c:	ef 93       	push	r30
    109e:	ff 93       	push	r31
	cli();
    10a0:	f8 94       	cli
	//if(testPrint)
		//printf("Interrupt!\n");
	if(!bufferStart)
    10a2:	80 91 36 08 	lds	r24, 0x0836
    10a6:	90 91 37 08 	lds	r25, 0x0837
    10aa:	89 2b       	or	r24, r25
    10ac:	e1 f4       	brne	.+56     	; 0x10e6 <__vector_25+0x70>
	{
		buff = uart_receiveChar();
    10ae:	a0 de       	rcall	.-704    	; 0xdf0 <uart_receiveChar>
    10b0:	80 93 28 08 	sts	0x0828, r24
		//Header always begins with letter 'R'
		if(buff == headerStartVal)
    10b4:	80 91 28 08 	lds	r24, 0x0828
    10b8:	82 35       	cpi	r24, 0x52	; 82
    10ba:	09 f0       	breq	.+2      	; 0x10be <__vector_25+0x48>
    10bc:	9d c0       	rjmp	.+314    	; 0x11f8 <__vector_25+0x182>
		{
			//PORTD &= ~(1<<RTS);
			//if(testPrint)
				//printf("Beginning Found @ %d\n", i); 
				
			i = 0;
    10be:	10 92 2d 08 	sts	0x082D, r1
    10c2:	10 92 2c 08 	sts	0x082C, r1
			headerBuffer[i] = buff; 
    10c6:	e0 91 2c 08 	lds	r30, 0x082C
    10ca:	f0 91 2d 08 	lds	r31, 0x082D
    10ce:	80 91 28 08 	lds	r24, 0x0828
    10d2:	e1 5e       	subi	r30, 0xE1	; 225
    10d4:	f7 4f       	sbci	r31, 0xF7	; 247
    10d6:	80 83       	st	Z, r24
			
				//if(testPrint)
					//printf("Header: %c @ address %p", headerBuffer[i], headerBuffer); 
					
			bufferStart = 1;
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	90 93 37 08 	sts	0x0837, r25
    10e0:	80 93 36 08 	sts	0x0836, r24
    10e4:	89 c0       	rjmp	.+274    	; 0x11f8 <__vector_25+0x182>
	
	else
	{
		//printf("Beginning of buffer.\n");
		//Grab Receive Header
		if(i < endHeader)
    10e6:	80 91 2c 08 	lds	r24, 0x082C
    10ea:	90 91 2d 08 	lds	r25, 0x082D
    10ee:	09 97       	sbiw	r24, 0x09	; 9
    10f0:	48 f4       	brcc	.+18     	; 0x1104 <__vector_25+0x8e>
		{
			//PORTD &= ~(1<<RTS);
			headerBuffer[i] = uart_receiveChar();
    10f2:	c0 91 2c 08 	lds	r28, 0x082C
    10f6:	d0 91 2d 08 	lds	r29, 0x082D
    10fa:	7a de       	rcall	.-780    	; 0xdf0 <uart_receiveChar>
    10fc:	c1 5e       	subi	r28, 0xE1	; 225
    10fe:	d7 4f       	sbci	r29, 0xF7	; 247
    1100:	88 83       	st	Y, r24
    1102:	7a c0       	rjmp	.+244    	; 0x11f8 <__vector_25+0x182>
				//printf("Header: %c @ address %p\n", headerBuffer[i], headerBuffer + i);
			//i++; 
			//RAMWriteByte(uart_receiveChar(), i);
			//PORTD |= (1<<RTS); 
		}
		else if(i == endHeader)
    1104:	80 91 2c 08 	lds	r24, 0x082C
    1108:	90 91 2d 08 	lds	r25, 0x082D
    110c:	09 97       	sbiw	r24, 0x09	; 9
    110e:	e1 f4       	brne	.+56     	; 0x1148 <__vector_25+0xd2>
		{
			transLength = buildTransmissionLength();
    1110:	97 de       	rcall	.-722    	; 0xe40 <buildTransmissionLength>
    1112:	90 93 31 08 	sts	0x0831, r25
    1116:	80 93 30 08 	sts	0x0830, r24
			//i++; 
			if(testPrint)
    111a:	80 91 2a 08 	lds	r24, 0x082A
    111e:	90 91 2b 08 	lds	r25, 0x082B
    1122:	89 2b       	or	r24, r25
    1124:	09 f4       	brne	.+2      	; 0x1128 <__vector_25+0xb2>
    1126:	68 c0       	rjmp	.+208    	; 0x11f8 <__vector_25+0x182>
				printf("Transmission Length: %d\n", transLength);
    1128:	80 91 30 08 	lds	r24, 0x0830
    112c:	90 91 31 08 	lds	r25, 0x0831
    1130:	9f 93       	push	r25
    1132:	8f 93       	push	r24
    1134:	8c ee       	ldi	r24, 0xEC	; 236
    1136:	96 e0       	ldi	r25, 0x06	; 6
    1138:	9f 93       	push	r25
    113a:	8f 93       	push	r24
    113c:	cf d0       	rcall	.+414    	; 0x12dc <printf>
    113e:	0f 90       	pop	r0
    1140:	0f 90       	pop	r0
    1142:	0f 90       	pop	r0
    1144:	0f 90       	pop	r0
    1146:	58 c0       	rjmp	.+176    	; 0x11f8 <__vector_25+0x182>
		}
		else
		{
			if(i < transLength + endHeader)
    1148:	20 91 30 08 	lds	r18, 0x0830
    114c:	30 91 31 08 	lds	r19, 0x0831
    1150:	80 91 2c 08 	lds	r24, 0x082C
    1154:	90 91 2d 08 	lds	r25, 0x082D
    1158:	27 5f       	subi	r18, 0xF7	; 247
    115a:	3f 4f       	sbci	r19, 0xFF	; 255
    115c:	82 17       	cp	r24, r18
    115e:	93 07       	cpc	r25, r19
    1160:	c0 f4       	brcc	.+48     	; 0x1192 <__vector_25+0x11c>
			{
				//printf("Translength: %d", transLength);
				buff = uart_receiveChar();
    1162:	46 de       	rcall	.-884    	; 0xdf0 <uart_receiveChar>
    1164:	80 93 28 08 	sts	0x0828, r24
						//secondNibble = 0; 
					//}
				//}
				//else
				//{
					RAMWriteByte(buff, RAMAddress + i - endHeader -1);	
    1168:	40 91 32 08 	lds	r20, 0x0832
    116c:	50 91 33 08 	lds	r21, 0x0833
    1170:	60 91 34 08 	lds	r22, 0x0834
    1174:	70 91 35 08 	lds	r23, 0x0835
    1178:	20 91 2c 08 	lds	r18, 0x082C
    117c:	30 91 2d 08 	lds	r19, 0x082D
    1180:	80 91 28 08 	lds	r24, 0x0828
    1184:	2a 50       	subi	r18, 0x0A	; 10
    1186:	31 09       	sbc	r19, r1
    1188:	b9 01       	movw	r22, r18
    118a:	64 0f       	add	r22, r20
    118c:	75 1f       	adc	r23, r21
    118e:	ea dc       	rcall	.-1580   	; 0xb64 <RAMWriteByte>
    1190:	33 c0       	rjmp	.+102    	; 0x11f8 <__vector_25+0x182>
			}

			else
			{
				//printf("End of String!\n");
				RAMWriteByte(0x00, RAMAddress + i - endHeader -1);
    1192:	80 91 32 08 	lds	r24, 0x0832
    1196:	90 91 33 08 	lds	r25, 0x0833
    119a:	a0 91 34 08 	lds	r26, 0x0834
    119e:	b0 91 35 08 	lds	r27, 0x0835
    11a2:	20 91 2c 08 	lds	r18, 0x082C
    11a6:	30 91 2d 08 	lds	r19, 0x082D
    11aa:	2a 50       	subi	r18, 0x0A	; 10
    11ac:	31 09       	sbc	r19, r1
    11ae:	b9 01       	movw	r22, r18
    11b0:	68 0f       	add	r22, r24
    11b2:	79 1f       	adc	r23, r25
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	d6 dc       	rcall	.-1620   	; 0xb64 <RAMWriteByte>
				//cli();
				i = 0;
    11b8:	10 92 2d 08 	sts	0x082D, r1
    11bc:	10 92 2c 08 	sts	0x082C, r1
				bufferStart = 0;
    11c0:	10 92 37 08 	sts	0x0837, r1
    11c4:	10 92 36 08 	sts	0x0836, r1
				compressFlag = 0; 
    11c8:	10 92 2f 08 	sts	0x082F, r1
				secondNibble = 0; 
    11cc:	10 92 2e 08 	sts	0x082E, r1
				compressBuff = 0x00; 
    11d0:	10 92 29 08 	sts	0x0829, r1
				//done receiving
				receiveWifiFlag = 1;
    11d4:	81 e0       	ldi	r24, 0x01	; 1
    11d6:	80 93 38 08 	sts	0x0838, r24
				printf("Transmission Length: %d\n", buildTransmissionLength());
    11da:	32 de       	rcall	.-924    	; 0xe40 <buildTransmissionLength>
    11dc:	9f 93       	push	r25
    11de:	8f 93       	push	r24
    11e0:	8c ee       	ldi	r24, 0xEC	; 236
    11e2:	96 e0       	ldi	r25, 0x06	; 6
    11e4:	9f 93       	push	r25
    11e6:	8f 93       	push	r24
    11e8:	79 d0       	rcall	.+242    	; 0x12dc <printf>
				printf("Done Receiving!\n");
    11ea:	85 e0       	ldi	r24, 0x05	; 5
    11ec:	97 e0       	ldi	r25, 0x07	; 7
    11ee:	8c d0       	rcall	.+280    	; 0x1308 <puts>
    11f0:	0f 90       	pop	r0
    11f2:	0f 90       	pop	r0
    11f4:	0f 90       	pop	r0
    11f6:	0f 90       	pop	r0
		}
		//printf("%d\n", i); 
		//i++; 
	}
	//if(bufferStart && !receiveWifiFlag)
	i++; 
    11f8:	80 91 2c 08 	lds	r24, 0x082C
    11fc:	90 91 2d 08 	lds	r25, 0x082D
    1200:	01 96       	adiw	r24, 0x01	; 1
    1202:	90 93 2d 08 	sts	0x082D, r25
    1206:	80 93 2c 08 	sts	0x082C, r24
		
	//PORTD |= (1<<CTS); 
	sei(); 
    120a:	78 94       	sei
}
    120c:	ff 91       	pop	r31
    120e:	ef 91       	pop	r30
    1210:	df 91       	pop	r29
    1212:	cf 91       	pop	r28
    1214:	bf 91       	pop	r27
    1216:	af 91       	pop	r26
    1218:	9f 91       	pop	r25
    121a:	8f 91       	pop	r24
    121c:	7f 91       	pop	r23
    121e:	6f 91       	pop	r22
    1220:	5f 91       	pop	r21
    1222:	4f 91       	pop	r20
    1224:	3f 91       	pop	r19
    1226:	2f 91       	pop	r18
    1228:	0f 90       	pop	r0
    122a:	0b be       	out	0x3b, r0	; 59
    122c:	0f 90       	pop	r0
    122e:	0f be       	out	0x3f, r0	; 63
    1230:	0f 90       	pop	r0
    1232:	1f 90       	pop	r1
    1234:	18 95       	reti

00001236 <__umulhisi3>:
    1236:	a2 9f       	mul	r26, r18
    1238:	b0 01       	movw	r22, r0
    123a:	b3 9f       	mul	r27, r19
    123c:	c0 01       	movw	r24, r0
    123e:	a3 9f       	mul	r26, r19
    1240:	70 0d       	add	r23, r0
    1242:	81 1d       	adc	r24, r1
    1244:	11 24       	eor	r1, r1
    1246:	91 1d       	adc	r25, r1
    1248:	b2 9f       	mul	r27, r18
    124a:	70 0d       	add	r23, r0
    124c:	81 1d       	adc	r24, r1
    124e:	11 24       	eor	r1, r1
    1250:	91 1d       	adc	r25, r1
    1252:	08 95       	ret

00001254 <strcat>:
    1254:	fb 01       	movw	r30, r22
    1256:	dc 01       	movw	r26, r24
    1258:	0d 90       	ld	r0, X+
    125a:	00 20       	and	r0, r0
    125c:	e9 f7       	brne	.-6      	; 0x1258 <strcat+0x4>
    125e:	11 97       	sbiw	r26, 0x01	; 1
    1260:	01 90       	ld	r0, Z+
    1262:	0d 92       	st	X+, r0
    1264:	00 20       	and	r0, r0
    1266:	e1 f7       	brne	.-8      	; 0x1260 <strcat+0xc>
    1268:	08 95       	ret

0000126a <strcpy>:
    126a:	fb 01       	movw	r30, r22
    126c:	dc 01       	movw	r26, r24
    126e:	01 90       	ld	r0, Z+
    1270:	0d 92       	st	X+, r0
    1272:	00 20       	and	r0, r0
    1274:	e1 f7       	brne	.-8      	; 0x126e <strcpy+0x4>
    1276:	08 95       	ret

00001278 <fputc>:
    1278:	0f 93       	push	r16
    127a:	1f 93       	push	r17
    127c:	cf 93       	push	r28
    127e:	df 93       	push	r29
    1280:	18 2f       	mov	r17, r24
    1282:	09 2f       	mov	r16, r25
    1284:	eb 01       	movw	r28, r22
    1286:	8b 81       	ldd	r24, Y+3	; 0x03
    1288:	81 fd       	sbrc	r24, 1
    128a:	03 c0       	rjmp	.+6      	; 0x1292 <fputc+0x1a>
    128c:	8f ef       	ldi	r24, 0xFF	; 255
    128e:	9f ef       	ldi	r25, 0xFF	; 255
    1290:	20 c0       	rjmp	.+64     	; 0x12d2 <fputc+0x5a>
    1292:	82 ff       	sbrs	r24, 2
    1294:	10 c0       	rjmp	.+32     	; 0x12b6 <fputc+0x3e>
    1296:	4e 81       	ldd	r20, Y+6	; 0x06
    1298:	5f 81       	ldd	r21, Y+7	; 0x07
    129a:	2c 81       	ldd	r18, Y+4	; 0x04
    129c:	3d 81       	ldd	r19, Y+5	; 0x05
    129e:	42 17       	cp	r20, r18
    12a0:	53 07       	cpc	r21, r19
    12a2:	7c f4       	brge	.+30     	; 0x12c2 <fputc+0x4a>
    12a4:	e8 81       	ld	r30, Y
    12a6:	f9 81       	ldd	r31, Y+1	; 0x01
    12a8:	9f 01       	movw	r18, r30
    12aa:	2f 5f       	subi	r18, 0xFF	; 255
    12ac:	3f 4f       	sbci	r19, 0xFF	; 255
    12ae:	39 83       	std	Y+1, r19	; 0x01
    12b0:	28 83       	st	Y, r18
    12b2:	10 83       	st	Z, r17
    12b4:	06 c0       	rjmp	.+12     	; 0x12c2 <fputc+0x4a>
    12b6:	e8 85       	ldd	r30, Y+8	; 0x08
    12b8:	f9 85       	ldd	r31, Y+9	; 0x09
    12ba:	81 2f       	mov	r24, r17
    12bc:	09 95       	icall
    12be:	89 2b       	or	r24, r25
    12c0:	29 f7       	brne	.-54     	; 0x128c <fputc+0x14>
    12c2:	2e 81       	ldd	r18, Y+6	; 0x06
    12c4:	3f 81       	ldd	r19, Y+7	; 0x07
    12c6:	2f 5f       	subi	r18, 0xFF	; 255
    12c8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ca:	3f 83       	std	Y+7, r19	; 0x07
    12cc:	2e 83       	std	Y+6, r18	; 0x06
    12ce:	81 2f       	mov	r24, r17
    12d0:	90 2f       	mov	r25, r16
    12d2:	df 91       	pop	r29
    12d4:	cf 91       	pop	r28
    12d6:	1f 91       	pop	r17
    12d8:	0f 91       	pop	r16
    12da:	08 95       	ret

000012dc <printf>:
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	cd b7       	in	r28, 0x3d	; 61
    12e2:	de b7       	in	r29, 0x3e	; 62
    12e4:	fe 01       	movw	r30, r28
    12e6:	35 96       	adiw	r30, 0x05	; 5
    12e8:	61 91       	ld	r22, Z+
    12ea:	71 91       	ld	r23, Z+
    12ec:	af 01       	movw	r20, r30
    12ee:	80 91 9f 08 	lds	r24, 0x089F
    12f2:	90 91 a0 08 	lds	r25, 0x08A0
    12f6:	35 d0       	rcall	.+106    	; 0x1362 <vfprintf>
    12f8:	df 91       	pop	r29
    12fa:	cf 91       	pop	r28
    12fc:	08 95       	ret

000012fe <putchar>:
    12fe:	60 91 9f 08 	lds	r22, 0x089F
    1302:	70 91 a0 08 	lds	r23, 0x08A0
    1306:	b8 cf       	rjmp	.-144    	; 0x1278 <fputc>

00001308 <puts>:
    1308:	0f 93       	push	r16
    130a:	1f 93       	push	r17
    130c:	cf 93       	push	r28
    130e:	df 93       	push	r29
    1310:	e0 91 9f 08 	lds	r30, 0x089F
    1314:	f0 91 a0 08 	lds	r31, 0x08A0
    1318:	23 81       	ldd	r18, Z+3	; 0x03
    131a:	21 ff       	sbrs	r18, 1
    131c:	1b c0       	rjmp	.+54     	; 0x1354 <puts+0x4c>
    131e:	ec 01       	movw	r28, r24
    1320:	00 e0       	ldi	r16, 0x00	; 0
    1322:	10 e0       	ldi	r17, 0x00	; 0
    1324:	89 91       	ld	r24, Y+
    1326:	60 91 9f 08 	lds	r22, 0x089F
    132a:	70 91 a0 08 	lds	r23, 0x08A0
    132e:	db 01       	movw	r26, r22
    1330:	18 96       	adiw	r26, 0x08	; 8
    1332:	ed 91       	ld	r30, X+
    1334:	fc 91       	ld	r31, X
    1336:	19 97       	sbiw	r26, 0x09	; 9
    1338:	88 23       	and	r24, r24
    133a:	31 f0       	breq	.+12     	; 0x1348 <puts+0x40>
    133c:	09 95       	icall
    133e:	89 2b       	or	r24, r25
    1340:	89 f3       	breq	.-30     	; 0x1324 <puts+0x1c>
    1342:	0f ef       	ldi	r16, 0xFF	; 255
    1344:	1f ef       	ldi	r17, 0xFF	; 255
    1346:	ee cf       	rjmp	.-36     	; 0x1324 <puts+0x1c>
    1348:	8a e0       	ldi	r24, 0x0A	; 10
    134a:	09 95       	icall
    134c:	89 2b       	or	r24, r25
    134e:	11 f4       	brne	.+4      	; 0x1354 <puts+0x4c>
    1350:	c8 01       	movw	r24, r16
    1352:	02 c0       	rjmp	.+4      	; 0x1358 <puts+0x50>
    1354:	8f ef       	ldi	r24, 0xFF	; 255
    1356:	9f ef       	ldi	r25, 0xFF	; 255
    1358:	df 91       	pop	r29
    135a:	cf 91       	pop	r28
    135c:	1f 91       	pop	r17
    135e:	0f 91       	pop	r16
    1360:	08 95       	ret

00001362 <vfprintf>:
    1362:	2f 92       	push	r2
    1364:	3f 92       	push	r3
    1366:	4f 92       	push	r4
    1368:	5f 92       	push	r5
    136a:	6f 92       	push	r6
    136c:	7f 92       	push	r7
    136e:	8f 92       	push	r8
    1370:	9f 92       	push	r9
    1372:	af 92       	push	r10
    1374:	bf 92       	push	r11
    1376:	cf 92       	push	r12
    1378:	df 92       	push	r13
    137a:	ef 92       	push	r14
    137c:	ff 92       	push	r15
    137e:	0f 93       	push	r16
    1380:	1f 93       	push	r17
    1382:	cf 93       	push	r28
    1384:	df 93       	push	r29
    1386:	cd b7       	in	r28, 0x3d	; 61
    1388:	de b7       	in	r29, 0x3e	; 62
    138a:	2c 97       	sbiw	r28, 0x0c	; 12
    138c:	0f b6       	in	r0, 0x3f	; 63
    138e:	f8 94       	cli
    1390:	de bf       	out	0x3e, r29	; 62
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	cd bf       	out	0x3d, r28	; 61
    1396:	7c 01       	movw	r14, r24
    1398:	6b 01       	movw	r12, r22
    139a:	8a 01       	movw	r16, r20
    139c:	fc 01       	movw	r30, r24
    139e:	17 82       	std	Z+7, r1	; 0x07
    13a0:	16 82       	std	Z+6, r1	; 0x06
    13a2:	83 81       	ldd	r24, Z+3	; 0x03
    13a4:	81 ff       	sbrs	r24, 1
    13a6:	b0 c1       	rjmp	.+864    	; 0x1708 <vfprintf+0x3a6>
    13a8:	ce 01       	movw	r24, r28
    13aa:	01 96       	adiw	r24, 0x01	; 1
    13ac:	4c 01       	movw	r8, r24
    13ae:	f7 01       	movw	r30, r14
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	f6 01       	movw	r30, r12
    13b4:	93 fd       	sbrc	r25, 3
    13b6:	85 91       	lpm	r24, Z+
    13b8:	93 ff       	sbrs	r25, 3
    13ba:	81 91       	ld	r24, Z+
    13bc:	6f 01       	movw	r12, r30
    13be:	88 23       	and	r24, r24
    13c0:	09 f4       	brne	.+2      	; 0x13c4 <vfprintf+0x62>
    13c2:	9e c1       	rjmp	.+828    	; 0x1700 <vfprintf+0x39e>
    13c4:	85 32       	cpi	r24, 0x25	; 37
    13c6:	39 f4       	brne	.+14     	; 0x13d6 <vfprintf+0x74>
    13c8:	93 fd       	sbrc	r25, 3
    13ca:	85 91       	lpm	r24, Z+
    13cc:	93 ff       	sbrs	r25, 3
    13ce:	81 91       	ld	r24, Z+
    13d0:	6f 01       	movw	r12, r30
    13d2:	85 32       	cpi	r24, 0x25	; 37
    13d4:	21 f4       	brne	.+8      	; 0x13de <vfprintf+0x7c>
    13d6:	b7 01       	movw	r22, r14
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	4e df       	rcall	.-356    	; 0x1278 <fputc>
    13dc:	e8 cf       	rjmp	.-48     	; 0x13ae <vfprintf+0x4c>
    13de:	51 2c       	mov	r5, r1
    13e0:	31 2c       	mov	r3, r1
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	20 32       	cpi	r18, 0x20	; 32
    13e6:	a0 f4       	brcc	.+40     	; 0x1410 <vfprintf+0xae>
    13e8:	8b 32       	cpi	r24, 0x2B	; 43
    13ea:	69 f0       	breq	.+26     	; 0x1406 <vfprintf+0xa4>
    13ec:	30 f4       	brcc	.+12     	; 0x13fa <vfprintf+0x98>
    13ee:	80 32       	cpi	r24, 0x20	; 32
    13f0:	59 f0       	breq	.+22     	; 0x1408 <vfprintf+0xa6>
    13f2:	83 32       	cpi	r24, 0x23	; 35
    13f4:	69 f4       	brne	.+26     	; 0x1410 <vfprintf+0xae>
    13f6:	20 61       	ori	r18, 0x10	; 16
    13f8:	2c c0       	rjmp	.+88     	; 0x1452 <vfprintf+0xf0>
    13fa:	8d 32       	cpi	r24, 0x2D	; 45
    13fc:	39 f0       	breq	.+14     	; 0x140c <vfprintf+0xaa>
    13fe:	80 33       	cpi	r24, 0x30	; 48
    1400:	39 f4       	brne	.+14     	; 0x1410 <vfprintf+0xae>
    1402:	21 60       	ori	r18, 0x01	; 1
    1404:	26 c0       	rjmp	.+76     	; 0x1452 <vfprintf+0xf0>
    1406:	22 60       	ori	r18, 0x02	; 2
    1408:	24 60       	ori	r18, 0x04	; 4
    140a:	23 c0       	rjmp	.+70     	; 0x1452 <vfprintf+0xf0>
    140c:	28 60       	ori	r18, 0x08	; 8
    140e:	21 c0       	rjmp	.+66     	; 0x1452 <vfprintf+0xf0>
    1410:	27 fd       	sbrc	r18, 7
    1412:	27 c0       	rjmp	.+78     	; 0x1462 <vfprintf+0x100>
    1414:	30 ed       	ldi	r19, 0xD0	; 208
    1416:	38 0f       	add	r19, r24
    1418:	3a 30       	cpi	r19, 0x0A	; 10
    141a:	78 f4       	brcc	.+30     	; 0x143a <vfprintf+0xd8>
    141c:	26 ff       	sbrs	r18, 6
    141e:	06 c0       	rjmp	.+12     	; 0x142c <vfprintf+0xca>
    1420:	fa e0       	ldi	r31, 0x0A	; 10
    1422:	5f 9e       	mul	r5, r31
    1424:	30 0d       	add	r19, r0
    1426:	11 24       	eor	r1, r1
    1428:	53 2e       	mov	r5, r19
    142a:	13 c0       	rjmp	.+38     	; 0x1452 <vfprintf+0xf0>
    142c:	8a e0       	ldi	r24, 0x0A	; 10
    142e:	38 9e       	mul	r3, r24
    1430:	30 0d       	add	r19, r0
    1432:	11 24       	eor	r1, r1
    1434:	33 2e       	mov	r3, r19
    1436:	20 62       	ori	r18, 0x20	; 32
    1438:	0c c0       	rjmp	.+24     	; 0x1452 <vfprintf+0xf0>
    143a:	8e 32       	cpi	r24, 0x2E	; 46
    143c:	21 f4       	brne	.+8      	; 0x1446 <vfprintf+0xe4>
    143e:	26 fd       	sbrc	r18, 6
    1440:	5f c1       	rjmp	.+702    	; 0x1700 <vfprintf+0x39e>
    1442:	20 64       	ori	r18, 0x40	; 64
    1444:	06 c0       	rjmp	.+12     	; 0x1452 <vfprintf+0xf0>
    1446:	8c 36       	cpi	r24, 0x6C	; 108
    1448:	11 f4       	brne	.+4      	; 0x144e <vfprintf+0xec>
    144a:	20 68       	ori	r18, 0x80	; 128
    144c:	02 c0       	rjmp	.+4      	; 0x1452 <vfprintf+0xf0>
    144e:	88 36       	cpi	r24, 0x68	; 104
    1450:	41 f4       	brne	.+16     	; 0x1462 <vfprintf+0x100>
    1452:	f6 01       	movw	r30, r12
    1454:	93 fd       	sbrc	r25, 3
    1456:	85 91       	lpm	r24, Z+
    1458:	93 ff       	sbrs	r25, 3
    145a:	81 91       	ld	r24, Z+
    145c:	6f 01       	movw	r12, r30
    145e:	81 11       	cpse	r24, r1
    1460:	c1 cf       	rjmp	.-126    	; 0x13e4 <vfprintf+0x82>
    1462:	98 2f       	mov	r25, r24
    1464:	9f 7d       	andi	r25, 0xDF	; 223
    1466:	95 54       	subi	r25, 0x45	; 69
    1468:	93 30       	cpi	r25, 0x03	; 3
    146a:	28 f4       	brcc	.+10     	; 0x1476 <vfprintf+0x114>
    146c:	0c 5f       	subi	r16, 0xFC	; 252
    146e:	1f 4f       	sbci	r17, 0xFF	; 255
    1470:	ff e3       	ldi	r31, 0x3F	; 63
    1472:	f9 83       	std	Y+1, r31	; 0x01
    1474:	0d c0       	rjmp	.+26     	; 0x1490 <vfprintf+0x12e>
    1476:	83 36       	cpi	r24, 0x63	; 99
    1478:	31 f0       	breq	.+12     	; 0x1486 <vfprintf+0x124>
    147a:	83 37       	cpi	r24, 0x73	; 115
    147c:	71 f0       	breq	.+28     	; 0x149a <vfprintf+0x138>
    147e:	83 35       	cpi	r24, 0x53	; 83
    1480:	09 f0       	breq	.+2      	; 0x1484 <vfprintf+0x122>
    1482:	57 c0       	rjmp	.+174    	; 0x1532 <vfprintf+0x1d0>
    1484:	21 c0       	rjmp	.+66     	; 0x14c8 <vfprintf+0x166>
    1486:	f8 01       	movw	r30, r16
    1488:	80 81       	ld	r24, Z
    148a:	89 83       	std	Y+1, r24	; 0x01
    148c:	0e 5f       	subi	r16, 0xFE	; 254
    148e:	1f 4f       	sbci	r17, 0xFF	; 255
    1490:	44 24       	eor	r4, r4
    1492:	43 94       	inc	r4
    1494:	51 2c       	mov	r5, r1
    1496:	54 01       	movw	r10, r8
    1498:	14 c0       	rjmp	.+40     	; 0x14c2 <vfprintf+0x160>
    149a:	38 01       	movw	r6, r16
    149c:	f2 e0       	ldi	r31, 0x02	; 2
    149e:	6f 0e       	add	r6, r31
    14a0:	71 1c       	adc	r7, r1
    14a2:	f8 01       	movw	r30, r16
    14a4:	a0 80       	ld	r10, Z
    14a6:	b1 80       	ldd	r11, Z+1	; 0x01
    14a8:	26 ff       	sbrs	r18, 6
    14aa:	03 c0       	rjmp	.+6      	; 0x14b2 <vfprintf+0x150>
    14ac:	65 2d       	mov	r22, r5
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	02 c0       	rjmp	.+4      	; 0x14b6 <vfprintf+0x154>
    14b2:	6f ef       	ldi	r22, 0xFF	; 255
    14b4:	7f ef       	ldi	r23, 0xFF	; 255
    14b6:	c5 01       	movw	r24, r10
    14b8:	2c 87       	std	Y+12, r18	; 0x0c
    14ba:	4c d1       	rcall	.+664    	; 0x1754 <strnlen>
    14bc:	2c 01       	movw	r4, r24
    14be:	83 01       	movw	r16, r6
    14c0:	2c 85       	ldd	r18, Y+12	; 0x0c
    14c2:	2f 77       	andi	r18, 0x7F	; 127
    14c4:	22 2e       	mov	r2, r18
    14c6:	16 c0       	rjmp	.+44     	; 0x14f4 <vfprintf+0x192>
    14c8:	38 01       	movw	r6, r16
    14ca:	f2 e0       	ldi	r31, 0x02	; 2
    14cc:	6f 0e       	add	r6, r31
    14ce:	71 1c       	adc	r7, r1
    14d0:	f8 01       	movw	r30, r16
    14d2:	a0 80       	ld	r10, Z
    14d4:	b1 80       	ldd	r11, Z+1	; 0x01
    14d6:	26 ff       	sbrs	r18, 6
    14d8:	03 c0       	rjmp	.+6      	; 0x14e0 <vfprintf+0x17e>
    14da:	65 2d       	mov	r22, r5
    14dc:	70 e0       	ldi	r23, 0x00	; 0
    14de:	02 c0       	rjmp	.+4      	; 0x14e4 <vfprintf+0x182>
    14e0:	6f ef       	ldi	r22, 0xFF	; 255
    14e2:	7f ef       	ldi	r23, 0xFF	; 255
    14e4:	c5 01       	movw	r24, r10
    14e6:	2c 87       	std	Y+12, r18	; 0x0c
    14e8:	2a d1       	rcall	.+596    	; 0x173e <strnlen_P>
    14ea:	2c 01       	movw	r4, r24
    14ec:	2c 85       	ldd	r18, Y+12	; 0x0c
    14ee:	20 68       	ori	r18, 0x80	; 128
    14f0:	22 2e       	mov	r2, r18
    14f2:	83 01       	movw	r16, r6
    14f4:	23 fc       	sbrc	r2, 3
    14f6:	19 c0       	rjmp	.+50     	; 0x152a <vfprintf+0x1c8>
    14f8:	83 2d       	mov	r24, r3
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	48 16       	cp	r4, r24
    14fe:	59 06       	cpc	r5, r25
    1500:	a0 f4       	brcc	.+40     	; 0x152a <vfprintf+0x1c8>
    1502:	b7 01       	movw	r22, r14
    1504:	80 e2       	ldi	r24, 0x20	; 32
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	b7 de       	rcall	.-658    	; 0x1278 <fputc>
    150a:	3a 94       	dec	r3
    150c:	f5 cf       	rjmp	.-22     	; 0x14f8 <vfprintf+0x196>
    150e:	f5 01       	movw	r30, r10
    1510:	27 fc       	sbrc	r2, 7
    1512:	85 91       	lpm	r24, Z+
    1514:	27 fe       	sbrs	r2, 7
    1516:	81 91       	ld	r24, Z+
    1518:	5f 01       	movw	r10, r30
    151a:	b7 01       	movw	r22, r14
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	ac de       	rcall	.-680    	; 0x1278 <fputc>
    1520:	31 10       	cpse	r3, r1
    1522:	3a 94       	dec	r3
    1524:	f1 e0       	ldi	r31, 0x01	; 1
    1526:	4f 1a       	sub	r4, r31
    1528:	51 08       	sbc	r5, r1
    152a:	41 14       	cp	r4, r1
    152c:	51 04       	cpc	r5, r1
    152e:	79 f7       	brne	.-34     	; 0x150e <vfprintf+0x1ac>
    1530:	de c0       	rjmp	.+444    	; 0x16ee <vfprintf+0x38c>
    1532:	84 36       	cpi	r24, 0x64	; 100
    1534:	11 f0       	breq	.+4      	; 0x153a <vfprintf+0x1d8>
    1536:	89 36       	cpi	r24, 0x69	; 105
    1538:	31 f5       	brne	.+76     	; 0x1586 <vfprintf+0x224>
    153a:	f8 01       	movw	r30, r16
    153c:	27 ff       	sbrs	r18, 7
    153e:	07 c0       	rjmp	.+14     	; 0x154e <vfprintf+0x1ec>
    1540:	60 81       	ld	r22, Z
    1542:	71 81       	ldd	r23, Z+1	; 0x01
    1544:	82 81       	ldd	r24, Z+2	; 0x02
    1546:	93 81       	ldd	r25, Z+3	; 0x03
    1548:	0c 5f       	subi	r16, 0xFC	; 252
    154a:	1f 4f       	sbci	r17, 0xFF	; 255
    154c:	08 c0       	rjmp	.+16     	; 0x155e <vfprintf+0x1fc>
    154e:	60 81       	ld	r22, Z
    1550:	71 81       	ldd	r23, Z+1	; 0x01
    1552:	88 27       	eor	r24, r24
    1554:	77 fd       	sbrc	r23, 7
    1556:	80 95       	com	r24
    1558:	98 2f       	mov	r25, r24
    155a:	0e 5f       	subi	r16, 0xFE	; 254
    155c:	1f 4f       	sbci	r17, 0xFF	; 255
    155e:	2f 76       	andi	r18, 0x6F	; 111
    1560:	b2 2e       	mov	r11, r18
    1562:	97 ff       	sbrs	r25, 7
    1564:	09 c0       	rjmp	.+18     	; 0x1578 <vfprintf+0x216>
    1566:	90 95       	com	r25
    1568:	80 95       	com	r24
    156a:	70 95       	com	r23
    156c:	61 95       	neg	r22
    156e:	7f 4f       	sbci	r23, 0xFF	; 255
    1570:	8f 4f       	sbci	r24, 0xFF	; 255
    1572:	9f 4f       	sbci	r25, 0xFF	; 255
    1574:	20 68       	ori	r18, 0x80	; 128
    1576:	b2 2e       	mov	r11, r18
    1578:	2a e0       	ldi	r18, 0x0A	; 10
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	a4 01       	movw	r20, r8
    157e:	f5 d0       	rcall	.+490    	; 0x176a <__ultoa_invert>
    1580:	a8 2e       	mov	r10, r24
    1582:	a8 18       	sub	r10, r8
    1584:	43 c0       	rjmp	.+134    	; 0x160c <vfprintf+0x2aa>
    1586:	85 37       	cpi	r24, 0x75	; 117
    1588:	29 f4       	brne	.+10     	; 0x1594 <vfprintf+0x232>
    158a:	2f 7e       	andi	r18, 0xEF	; 239
    158c:	b2 2e       	mov	r11, r18
    158e:	2a e0       	ldi	r18, 0x0A	; 10
    1590:	30 e0       	ldi	r19, 0x00	; 0
    1592:	25 c0       	rjmp	.+74     	; 0x15de <vfprintf+0x27c>
    1594:	f2 2f       	mov	r31, r18
    1596:	f9 7f       	andi	r31, 0xF9	; 249
    1598:	bf 2e       	mov	r11, r31
    159a:	8f 36       	cpi	r24, 0x6F	; 111
    159c:	c1 f0       	breq	.+48     	; 0x15ce <vfprintf+0x26c>
    159e:	18 f4       	brcc	.+6      	; 0x15a6 <vfprintf+0x244>
    15a0:	88 35       	cpi	r24, 0x58	; 88
    15a2:	79 f0       	breq	.+30     	; 0x15c2 <vfprintf+0x260>
    15a4:	ad c0       	rjmp	.+346    	; 0x1700 <vfprintf+0x39e>
    15a6:	80 37       	cpi	r24, 0x70	; 112
    15a8:	19 f0       	breq	.+6      	; 0x15b0 <vfprintf+0x24e>
    15aa:	88 37       	cpi	r24, 0x78	; 120
    15ac:	21 f0       	breq	.+8      	; 0x15b6 <vfprintf+0x254>
    15ae:	a8 c0       	rjmp	.+336    	; 0x1700 <vfprintf+0x39e>
    15b0:	2f 2f       	mov	r18, r31
    15b2:	20 61       	ori	r18, 0x10	; 16
    15b4:	b2 2e       	mov	r11, r18
    15b6:	b4 fe       	sbrs	r11, 4
    15b8:	0d c0       	rjmp	.+26     	; 0x15d4 <vfprintf+0x272>
    15ba:	8b 2d       	mov	r24, r11
    15bc:	84 60       	ori	r24, 0x04	; 4
    15be:	b8 2e       	mov	r11, r24
    15c0:	09 c0       	rjmp	.+18     	; 0x15d4 <vfprintf+0x272>
    15c2:	24 ff       	sbrs	r18, 4
    15c4:	0a c0       	rjmp	.+20     	; 0x15da <vfprintf+0x278>
    15c6:	9f 2f       	mov	r25, r31
    15c8:	96 60       	ori	r25, 0x06	; 6
    15ca:	b9 2e       	mov	r11, r25
    15cc:	06 c0       	rjmp	.+12     	; 0x15da <vfprintf+0x278>
    15ce:	28 e0       	ldi	r18, 0x08	; 8
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	05 c0       	rjmp	.+10     	; 0x15de <vfprintf+0x27c>
    15d4:	20 e1       	ldi	r18, 0x10	; 16
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	02 c0       	rjmp	.+4      	; 0x15de <vfprintf+0x27c>
    15da:	20 e1       	ldi	r18, 0x10	; 16
    15dc:	32 e0       	ldi	r19, 0x02	; 2
    15de:	f8 01       	movw	r30, r16
    15e0:	b7 fe       	sbrs	r11, 7
    15e2:	07 c0       	rjmp	.+14     	; 0x15f2 <vfprintf+0x290>
    15e4:	60 81       	ld	r22, Z
    15e6:	71 81       	ldd	r23, Z+1	; 0x01
    15e8:	82 81       	ldd	r24, Z+2	; 0x02
    15ea:	93 81       	ldd	r25, Z+3	; 0x03
    15ec:	0c 5f       	subi	r16, 0xFC	; 252
    15ee:	1f 4f       	sbci	r17, 0xFF	; 255
    15f0:	06 c0       	rjmp	.+12     	; 0x15fe <vfprintf+0x29c>
    15f2:	60 81       	ld	r22, Z
    15f4:	71 81       	ldd	r23, Z+1	; 0x01
    15f6:	80 e0       	ldi	r24, 0x00	; 0
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	0e 5f       	subi	r16, 0xFE	; 254
    15fc:	1f 4f       	sbci	r17, 0xFF	; 255
    15fe:	a4 01       	movw	r20, r8
    1600:	b4 d0       	rcall	.+360    	; 0x176a <__ultoa_invert>
    1602:	a8 2e       	mov	r10, r24
    1604:	a8 18       	sub	r10, r8
    1606:	fb 2d       	mov	r31, r11
    1608:	ff 77       	andi	r31, 0x7F	; 127
    160a:	bf 2e       	mov	r11, r31
    160c:	b6 fe       	sbrs	r11, 6
    160e:	0b c0       	rjmp	.+22     	; 0x1626 <vfprintf+0x2c4>
    1610:	2b 2d       	mov	r18, r11
    1612:	2e 7f       	andi	r18, 0xFE	; 254
    1614:	a5 14       	cp	r10, r5
    1616:	50 f4       	brcc	.+20     	; 0x162c <vfprintf+0x2ca>
    1618:	b4 fe       	sbrs	r11, 4
    161a:	0a c0       	rjmp	.+20     	; 0x1630 <vfprintf+0x2ce>
    161c:	b2 fc       	sbrc	r11, 2
    161e:	08 c0       	rjmp	.+16     	; 0x1630 <vfprintf+0x2ce>
    1620:	2b 2d       	mov	r18, r11
    1622:	2e 7e       	andi	r18, 0xEE	; 238
    1624:	05 c0       	rjmp	.+10     	; 0x1630 <vfprintf+0x2ce>
    1626:	7a 2c       	mov	r7, r10
    1628:	2b 2d       	mov	r18, r11
    162a:	03 c0       	rjmp	.+6      	; 0x1632 <vfprintf+0x2d0>
    162c:	7a 2c       	mov	r7, r10
    162e:	01 c0       	rjmp	.+2      	; 0x1632 <vfprintf+0x2d0>
    1630:	75 2c       	mov	r7, r5
    1632:	24 ff       	sbrs	r18, 4
    1634:	0d c0       	rjmp	.+26     	; 0x1650 <vfprintf+0x2ee>
    1636:	fe 01       	movw	r30, r28
    1638:	ea 0d       	add	r30, r10
    163a:	f1 1d       	adc	r31, r1
    163c:	80 81       	ld	r24, Z
    163e:	80 33       	cpi	r24, 0x30	; 48
    1640:	11 f4       	brne	.+4      	; 0x1646 <vfprintf+0x2e4>
    1642:	29 7e       	andi	r18, 0xE9	; 233
    1644:	09 c0       	rjmp	.+18     	; 0x1658 <vfprintf+0x2f6>
    1646:	22 ff       	sbrs	r18, 2
    1648:	06 c0       	rjmp	.+12     	; 0x1656 <vfprintf+0x2f4>
    164a:	73 94       	inc	r7
    164c:	73 94       	inc	r7
    164e:	04 c0       	rjmp	.+8      	; 0x1658 <vfprintf+0x2f6>
    1650:	82 2f       	mov	r24, r18
    1652:	86 78       	andi	r24, 0x86	; 134
    1654:	09 f0       	breq	.+2      	; 0x1658 <vfprintf+0x2f6>
    1656:	73 94       	inc	r7
    1658:	23 fd       	sbrc	r18, 3
    165a:	12 c0       	rjmp	.+36     	; 0x1680 <vfprintf+0x31e>
    165c:	20 ff       	sbrs	r18, 0
    165e:	06 c0       	rjmp	.+12     	; 0x166c <vfprintf+0x30a>
    1660:	5a 2c       	mov	r5, r10
    1662:	73 14       	cp	r7, r3
    1664:	18 f4       	brcc	.+6      	; 0x166c <vfprintf+0x30a>
    1666:	53 0c       	add	r5, r3
    1668:	57 18       	sub	r5, r7
    166a:	73 2c       	mov	r7, r3
    166c:	73 14       	cp	r7, r3
    166e:	60 f4       	brcc	.+24     	; 0x1688 <vfprintf+0x326>
    1670:	b7 01       	movw	r22, r14
    1672:	80 e2       	ldi	r24, 0x20	; 32
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	2c 87       	std	Y+12, r18	; 0x0c
    1678:	ff dd       	rcall	.-1026   	; 0x1278 <fputc>
    167a:	73 94       	inc	r7
    167c:	2c 85       	ldd	r18, Y+12	; 0x0c
    167e:	f6 cf       	rjmp	.-20     	; 0x166c <vfprintf+0x30a>
    1680:	73 14       	cp	r7, r3
    1682:	10 f4       	brcc	.+4      	; 0x1688 <vfprintf+0x326>
    1684:	37 18       	sub	r3, r7
    1686:	01 c0       	rjmp	.+2      	; 0x168a <vfprintf+0x328>
    1688:	31 2c       	mov	r3, r1
    168a:	24 ff       	sbrs	r18, 4
    168c:	11 c0       	rjmp	.+34     	; 0x16b0 <vfprintf+0x34e>
    168e:	b7 01       	movw	r22, r14
    1690:	80 e3       	ldi	r24, 0x30	; 48
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	2c 87       	std	Y+12, r18	; 0x0c
    1696:	f0 dd       	rcall	.-1056   	; 0x1278 <fputc>
    1698:	2c 85       	ldd	r18, Y+12	; 0x0c
    169a:	22 ff       	sbrs	r18, 2
    169c:	16 c0       	rjmp	.+44     	; 0x16ca <vfprintf+0x368>
    169e:	21 ff       	sbrs	r18, 1
    16a0:	03 c0       	rjmp	.+6      	; 0x16a8 <vfprintf+0x346>
    16a2:	88 e5       	ldi	r24, 0x58	; 88
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	02 c0       	rjmp	.+4      	; 0x16ac <vfprintf+0x34a>
    16a8:	88 e7       	ldi	r24, 0x78	; 120
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	b7 01       	movw	r22, r14
    16ae:	0c c0       	rjmp	.+24     	; 0x16c8 <vfprintf+0x366>
    16b0:	82 2f       	mov	r24, r18
    16b2:	86 78       	andi	r24, 0x86	; 134
    16b4:	51 f0       	breq	.+20     	; 0x16ca <vfprintf+0x368>
    16b6:	21 fd       	sbrc	r18, 1
    16b8:	02 c0       	rjmp	.+4      	; 0x16be <vfprintf+0x35c>
    16ba:	80 e2       	ldi	r24, 0x20	; 32
    16bc:	01 c0       	rjmp	.+2      	; 0x16c0 <vfprintf+0x35e>
    16be:	8b e2       	ldi	r24, 0x2B	; 43
    16c0:	27 fd       	sbrc	r18, 7
    16c2:	8d e2       	ldi	r24, 0x2D	; 45
    16c4:	b7 01       	movw	r22, r14
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	d7 dd       	rcall	.-1106   	; 0x1278 <fputc>
    16ca:	a5 14       	cp	r10, r5
    16cc:	30 f4       	brcc	.+12     	; 0x16da <vfprintf+0x378>
    16ce:	b7 01       	movw	r22, r14
    16d0:	80 e3       	ldi	r24, 0x30	; 48
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	d1 dd       	rcall	.-1118   	; 0x1278 <fputc>
    16d6:	5a 94       	dec	r5
    16d8:	f8 cf       	rjmp	.-16     	; 0x16ca <vfprintf+0x368>
    16da:	aa 94       	dec	r10
    16dc:	f4 01       	movw	r30, r8
    16de:	ea 0d       	add	r30, r10
    16e0:	f1 1d       	adc	r31, r1
    16e2:	80 81       	ld	r24, Z
    16e4:	b7 01       	movw	r22, r14
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	c7 dd       	rcall	.-1138   	; 0x1278 <fputc>
    16ea:	a1 10       	cpse	r10, r1
    16ec:	f6 cf       	rjmp	.-20     	; 0x16da <vfprintf+0x378>
    16ee:	33 20       	and	r3, r3
    16f0:	09 f4       	brne	.+2      	; 0x16f4 <vfprintf+0x392>
    16f2:	5d ce       	rjmp	.-838    	; 0x13ae <vfprintf+0x4c>
    16f4:	b7 01       	movw	r22, r14
    16f6:	80 e2       	ldi	r24, 0x20	; 32
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	be dd       	rcall	.-1156   	; 0x1278 <fputc>
    16fc:	3a 94       	dec	r3
    16fe:	f7 cf       	rjmp	.-18     	; 0x16ee <vfprintf+0x38c>
    1700:	f7 01       	movw	r30, r14
    1702:	86 81       	ldd	r24, Z+6	; 0x06
    1704:	97 81       	ldd	r25, Z+7	; 0x07
    1706:	02 c0       	rjmp	.+4      	; 0x170c <vfprintf+0x3aa>
    1708:	8f ef       	ldi	r24, 0xFF	; 255
    170a:	9f ef       	ldi	r25, 0xFF	; 255
    170c:	2c 96       	adiw	r28, 0x0c	; 12
    170e:	0f b6       	in	r0, 0x3f	; 63
    1710:	f8 94       	cli
    1712:	de bf       	out	0x3e, r29	; 62
    1714:	0f be       	out	0x3f, r0	; 63
    1716:	cd bf       	out	0x3d, r28	; 61
    1718:	df 91       	pop	r29
    171a:	cf 91       	pop	r28
    171c:	1f 91       	pop	r17
    171e:	0f 91       	pop	r16
    1720:	ff 90       	pop	r15
    1722:	ef 90       	pop	r14
    1724:	df 90       	pop	r13
    1726:	cf 90       	pop	r12
    1728:	bf 90       	pop	r11
    172a:	af 90       	pop	r10
    172c:	9f 90       	pop	r9
    172e:	8f 90       	pop	r8
    1730:	7f 90       	pop	r7
    1732:	6f 90       	pop	r6
    1734:	5f 90       	pop	r5
    1736:	4f 90       	pop	r4
    1738:	3f 90       	pop	r3
    173a:	2f 90       	pop	r2
    173c:	08 95       	ret

0000173e <strnlen_P>:
    173e:	fc 01       	movw	r30, r24
    1740:	05 90       	lpm	r0, Z+
    1742:	61 50       	subi	r22, 0x01	; 1
    1744:	70 40       	sbci	r23, 0x00	; 0
    1746:	01 10       	cpse	r0, r1
    1748:	d8 f7       	brcc	.-10     	; 0x1740 <strnlen_P+0x2>
    174a:	80 95       	com	r24
    174c:	90 95       	com	r25
    174e:	8e 0f       	add	r24, r30
    1750:	9f 1f       	adc	r25, r31
    1752:	08 95       	ret

00001754 <strnlen>:
    1754:	fc 01       	movw	r30, r24
    1756:	61 50       	subi	r22, 0x01	; 1
    1758:	70 40       	sbci	r23, 0x00	; 0
    175a:	01 90       	ld	r0, Z+
    175c:	01 10       	cpse	r0, r1
    175e:	d8 f7       	brcc	.-10     	; 0x1756 <strnlen+0x2>
    1760:	80 95       	com	r24
    1762:	90 95       	com	r25
    1764:	8e 0f       	add	r24, r30
    1766:	9f 1f       	adc	r25, r31
    1768:	08 95       	ret

0000176a <__ultoa_invert>:
    176a:	fa 01       	movw	r30, r20
    176c:	aa 27       	eor	r26, r26
    176e:	28 30       	cpi	r18, 0x08	; 8
    1770:	51 f1       	breq	.+84     	; 0x17c6 <__ultoa_invert+0x5c>
    1772:	20 31       	cpi	r18, 0x10	; 16
    1774:	81 f1       	breq	.+96     	; 0x17d6 <__ultoa_invert+0x6c>
    1776:	e8 94       	clt
    1778:	6f 93       	push	r22
    177a:	6e 7f       	andi	r22, 0xFE	; 254
    177c:	6e 5f       	subi	r22, 0xFE	; 254
    177e:	7f 4f       	sbci	r23, 0xFF	; 255
    1780:	8f 4f       	sbci	r24, 0xFF	; 255
    1782:	9f 4f       	sbci	r25, 0xFF	; 255
    1784:	af 4f       	sbci	r26, 0xFF	; 255
    1786:	b1 e0       	ldi	r27, 0x01	; 1
    1788:	3e d0       	rcall	.+124    	; 0x1806 <__ultoa_invert+0x9c>
    178a:	b4 e0       	ldi	r27, 0x04	; 4
    178c:	3c d0       	rcall	.+120    	; 0x1806 <__ultoa_invert+0x9c>
    178e:	67 0f       	add	r22, r23
    1790:	78 1f       	adc	r23, r24
    1792:	89 1f       	adc	r24, r25
    1794:	9a 1f       	adc	r25, r26
    1796:	a1 1d       	adc	r26, r1
    1798:	68 0f       	add	r22, r24
    179a:	79 1f       	adc	r23, r25
    179c:	8a 1f       	adc	r24, r26
    179e:	91 1d       	adc	r25, r1
    17a0:	a1 1d       	adc	r26, r1
    17a2:	6a 0f       	add	r22, r26
    17a4:	71 1d       	adc	r23, r1
    17a6:	81 1d       	adc	r24, r1
    17a8:	91 1d       	adc	r25, r1
    17aa:	a1 1d       	adc	r26, r1
    17ac:	20 d0       	rcall	.+64     	; 0x17ee <__ultoa_invert+0x84>
    17ae:	09 f4       	brne	.+2      	; 0x17b2 <__ultoa_invert+0x48>
    17b0:	68 94       	set
    17b2:	3f 91       	pop	r19
    17b4:	2a e0       	ldi	r18, 0x0A	; 10
    17b6:	26 9f       	mul	r18, r22
    17b8:	11 24       	eor	r1, r1
    17ba:	30 19       	sub	r19, r0
    17bc:	30 5d       	subi	r19, 0xD0	; 208
    17be:	31 93       	st	Z+, r19
    17c0:	de f6       	brtc	.-74     	; 0x1778 <__ultoa_invert+0xe>
    17c2:	cf 01       	movw	r24, r30
    17c4:	08 95       	ret
    17c6:	46 2f       	mov	r20, r22
    17c8:	47 70       	andi	r20, 0x07	; 7
    17ca:	40 5d       	subi	r20, 0xD0	; 208
    17cc:	41 93       	st	Z+, r20
    17ce:	b3 e0       	ldi	r27, 0x03	; 3
    17d0:	0f d0       	rcall	.+30     	; 0x17f0 <__ultoa_invert+0x86>
    17d2:	c9 f7       	brne	.-14     	; 0x17c6 <__ultoa_invert+0x5c>
    17d4:	f6 cf       	rjmp	.-20     	; 0x17c2 <__ultoa_invert+0x58>
    17d6:	46 2f       	mov	r20, r22
    17d8:	4f 70       	andi	r20, 0x0F	; 15
    17da:	40 5d       	subi	r20, 0xD0	; 208
    17dc:	4a 33       	cpi	r20, 0x3A	; 58
    17de:	18 f0       	brcs	.+6      	; 0x17e6 <__ultoa_invert+0x7c>
    17e0:	49 5d       	subi	r20, 0xD9	; 217
    17e2:	31 fd       	sbrc	r19, 1
    17e4:	40 52       	subi	r20, 0x20	; 32
    17e6:	41 93       	st	Z+, r20
    17e8:	02 d0       	rcall	.+4      	; 0x17ee <__ultoa_invert+0x84>
    17ea:	a9 f7       	brne	.-22     	; 0x17d6 <__ultoa_invert+0x6c>
    17ec:	ea cf       	rjmp	.-44     	; 0x17c2 <__ultoa_invert+0x58>
    17ee:	b4 e0       	ldi	r27, 0x04	; 4
    17f0:	a6 95       	lsr	r26
    17f2:	97 95       	ror	r25
    17f4:	87 95       	ror	r24
    17f6:	77 95       	ror	r23
    17f8:	67 95       	ror	r22
    17fa:	ba 95       	dec	r27
    17fc:	c9 f7       	brne	.-14     	; 0x17f0 <__ultoa_invert+0x86>
    17fe:	00 97       	sbiw	r24, 0x00	; 0
    1800:	61 05       	cpc	r22, r1
    1802:	71 05       	cpc	r23, r1
    1804:	08 95       	ret
    1806:	9b 01       	movw	r18, r22
    1808:	ac 01       	movw	r20, r24
    180a:	0a 2e       	mov	r0, r26
    180c:	06 94       	lsr	r0
    180e:	57 95       	ror	r21
    1810:	47 95       	ror	r20
    1812:	37 95       	ror	r19
    1814:	27 95       	ror	r18
    1816:	ba 95       	dec	r27
    1818:	c9 f7       	brne	.-14     	; 0x180c <__ultoa_invert+0xa2>
    181a:	62 0f       	add	r22, r18
    181c:	73 1f       	adc	r23, r19
    181e:	84 1f       	adc	r24, r20
    1820:	95 1f       	adc	r25, r21
    1822:	a0 1d       	adc	r26, r0
    1824:	08 95       	ret

00001826 <_exit>:
    1826:	f8 94       	cli

00001828 <__stop_program>:
    1828:	ff cf       	rjmp	.-2      	; 0x1828 <__stop_program>
