
WifiModule.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00800100  00000958  000009ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000958  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800166  00800166  00000a52  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a52  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000aae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006a0  00000000  00000000  00000b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000429  00000000  00000000  000011ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000365  00000000  00000000  00001617  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e4  00000000  00000000  0000197c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000270  00000000  00000000  00001b60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000513  00000000  00000000  00001dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  000022e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__vector_28>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e8 e5       	ldi	r30, 0x58	; 88
  90:	f9 e0       	ldi	r31, 0x09	; 9
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a6 36       	cpi	r26, 0x66	; 102
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a6 e6       	ldi	r26, 0x66	; 102
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	ac 36       	cpi	r26, 0x6C	; 108
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
  b2:	0c 94 aa 04 	jmp	0x954	; 0x954 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
#include <avr/interrupt.h>
#include "PrintDriver.h"
#include "WifiDriver.h"

int main(void)
{
  ba:	bf 92       	push	r11
  bc:	cf 92       	push	r12
  be:	df 92       	push	r13
  c0:	ef 92       	push	r14
  c2:	ff 92       	push	r15
  c4:	0f 93       	push	r16
  c6:	1f 93       	push	r17
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	00 d0       	rcall	.+0      	; 0xce <main+0x14>
  ce:	00 d0       	rcall	.+0      	; 0xd0 <main+0x16>
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
	//cli(); 
	uart_init();
  d4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <uart_init>
	uart0_init(); 
  d8:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <uart0_init>
	printf("Initializing Wi-Fi Driver...\n");
  dc:	8e e0       	ldi	r24, 0x0E	; 14
  de:	91 e0       	ldi	r25, 0x01	; 1
  e0:	0e 94 ce 01 	call	0x39c	; 0x39c <puts>
	//while(!(PIND & (1<<CTS)));
	//_delay_ms(1000);
	//uart_send("This is a really super long ridiculously useless test string\0");
	unsigned char data;
	unsigned char counter = 0; 
	unsigned char string[] = "Hi!";
  e4:	88 e4       	ldi	r24, 0x48	; 72
  e6:	99 e6       	ldi	r25, 0x69	; 105
  e8:	a1 e2       	ldi	r26, 0x21	; 33
  ea:	b0 e0       	ldi	r27, 0x00	; 0
  ec:	89 83       	std	Y+1, r24	; 0x01
  ee:	9a 83       	std	Y+2, r25	; 0x02
  f0:	ab 83       	std	Y+3, r26	; 0x03
  f2:	bc 83       	std	Y+4, r27	; 0x04
	printf("%s\n", string);
  f4:	ce 01       	movw	r24, r28
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	0e 94 ce 01 	call	0x39c	; 0x39c <puts>
	uart_send(string, 7);
  fc:	67 e0       	ldi	r22, 0x07	; 7
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	ce 01       	movw	r24, r28
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	0e 94 04 01 	call	0x208	; 0x208 <uart_send>
 108:	68 94       	set
 10a:	bb 24       	eor	r11, r11
 10c:	b3 f8       	bld	r11, 3
    while(counter <= 7)
    {
		//uart_sendChar(string[counter]);
		//printf("Polling..\n");
		//data = uart_receiveChar();
		while (!(UCSR1A & (1<<RXC1)));
 10e:	08 ec       	ldi	r16, 0xC8	; 200
 110:	10 e0       	ldi	r17, 0x00	; 0
		data = UDR1; 
 112:	0f 2e       	mov	r0, r31
 114:	fe ec       	ldi	r31, 0xCE	; 206
 116:	cf 2e       	mov	r12, r31
 118:	d1 2c       	mov	r13, r1
 11a:	f0 2d       	mov	r31, r0
		printf("%c\n", data);
 11c:	0f 2e       	mov	r0, r31
 11e:	fb e2       	ldi	r31, 0x2B	; 43
 120:	ef 2e       	mov	r14, r31
 122:	f1 e0       	ldi	r31, 0x01	; 1
 124:	ff 2e       	mov	r15, r31
 126:	f0 2d       	mov	r31, r0
    while(counter <= 7)
    {
		//uart_sendChar(string[counter]);
		//printf("Polling..\n");
		//data = uart_receiveChar();
		while (!(UCSR1A & (1<<RXC1)));
 128:	f8 01       	movw	r30, r16
 12a:	80 81       	ld	r24, Z
 12c:	88 23       	and	r24, r24
 12e:	e4 f7       	brge	.-8      	; 0x128 <main+0x6e>
		data = UDR1; 
 130:	f6 01       	movw	r30, r12
 132:	80 81       	ld	r24, Z
		printf("%c\n", data);
 134:	1f 92       	push	r1
 136:	8f 93       	push	r24
 138:	ff 92       	push	r15
 13a:	ef 92       	push	r14
 13c:	0e 94 b3 01 	call	0x366	; 0x366 <printf>
 140:	ba 94       	dec	r11
	unsigned char data;
	unsigned char counter = 0; 
	unsigned char string[] = "Hi!";
	printf("%s\n", string);
	uart_send(string, 7);
    while(counter <= 7)
 142:	0f 90       	pop	r0
 144:	0f 90       	pop	r0
 146:	0f 90       	pop	r0
 148:	0f 90       	pop	r0
 14a:	71 f7       	brne	.-36     	; 0x128 <main+0x6e>
		while (!(UCSR1A & (1<<RXC1)));
		data = UDR1; 
		printf("%c\n", data);
		counter++; 
	}
	printf("Done!\n");
 14c:	8f e2       	ldi	r24, 0x2F	; 47
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	0e 94 ce 01 	call	0x39c	; 0x39c <puts>
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0f 90       	pop	r0
 15a:	0f 90       	pop	r0
 15c:	0f 90       	pop	r0
 15e:	0f 90       	pop	r0
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	1f 91       	pop	r17
 166:	0f 91       	pop	r16
 168:	ff 90       	pop	r15
 16a:	ef 90       	pop	r14
 16c:	df 90       	pop	r13
 16e:	cf 90       	pop	r12
 170:	bf 90       	pop	r11
 172:	08 95       	ret

00000174 <uart_sendStream>:
	while (UCSR0A & (1<<RXC0)) dummy = UDR0;
}


int uart_sendStream(char ch,FILE *stream)
{
 174:	cf 93       	push	r28
 176:	c8 2f       	mov	r28, r24
	if (ch == '\n')
 178:	8a 30       	cpi	r24, 0x0A	; 10
 17a:	19 f4       	brne	.+6      	; 0x182 <uart_sendStream+0xe>
	uart_sendStream('\r', stream);
 17c:	8d e0       	ldi	r24, 0x0D	; 13
 17e:	0e 94 ba 00 	call	0x174	; 0x174 <uart_sendStream>
	while (!(UCSR0A & (1<<UDRE0)));
 182:	e0 ec       	ldi	r30, 0xC0	; 192
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	90 81       	ld	r25, Z
 188:	95 ff       	sbrs	r25, 5
 18a:	fd cf       	rjmp	.-6      	; 0x186 <uart_sendStream+0x12>
	UDR0=ch;
 18c:	c0 93 c6 00 	sts	0x00C6, r28
	return 0;
}
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <uart_receiveStream>:

int uart_receiveStream(FILE *stream)
{
 198:	cf 93       	push	r28
 19a:	bc 01       	movw	r22, r24
	unsigned char ch;
	while (!(UCSR0A & (1<<RXC0)));
 19c:	e0 ec       	ldi	r30, 0xC0	; 192
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	88 23       	and	r24, r24
 1a4:	ec f7       	brge	.-6      	; 0x1a0 <uart_receiveStream+0x8>
	ch=UDR0;
 1a6:	c0 91 c6 00 	lds	r28, 0x00C6

	/* Echo the Output Back to terminal */
	uart_sendStream(ch,stream);
 1aa:	8c 2f       	mov	r24, r28
 1ac:	0e 94 ba 00 	call	0x174	; 0x174 <uart_sendStream>

	return ch;
}
 1b0:	8c 2f       	mov	r24, r28
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <uart0_init>:

FILE uart_stream = FDEV_SETUP_STREAM(uart_sendStream, uart_receiveStream, _FDEV_SETUP_RW);

void uart0_init()
{
	UBRR0H = (((F_CPU/BAUD_RATE)/16)-1)>>8;	// set baud rate
 1b8:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (((F_CPU/BAUD_RATE)/16)-1);
 1bc:	8c e0       	ldi	r24, 0x0C	; 12
 1be:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0B = (1<<RXEN0)|(1<<TXEN0); 		// enable Rx & Tx
 1c2:	88 e1       	ldi	r24, 0x18	; 24
 1c4:	80 93 c1 00 	sts	0x00C1, r24
	UCSR0C=  (1<<UCSZ01)|(1<<UCSZ00);  	       // config USART; 8N1
 1c8:	86 e0       	ldi	r24, 0x06	; 6
 1ca:	80 93 c2 00 	sts	0x00C2, r24
	//DDRD |= (1<<PORTD1)|(1<<PORTD0);
	// Define Output/Input Stream
	stdout = stdin = &uart_stream;
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	91 e0       	ldi	r25, 0x01	; 1
 1d2:	90 93 67 01 	sts	0x0167, r25
 1d6:	80 93 66 01 	sts	0x0166, r24
 1da:	90 93 69 01 	sts	0x0169, r25
 1de:	80 93 68 01 	sts	0x0168, r24
 1e2:	08 95       	ret

000001e4 <uart_init>:
#include "PrintDriver.h"
#include "WifiDriver.h"

void uart_init()
{
	UBRR1H = (((F_CPU/BAUD_RATE)/16)-1)>>8;	// set baud rate
 1e4:	10 92 cd 00 	sts	0x00CD, r1
	UBRR1L = (((F_CPU/BAUD_RATE)/16)-1);
 1e8:	8c e0       	ldi	r24, 0x0C	; 12
 1ea:	80 93 cc 00 	sts	0x00CC, r24
	UCSR1B = (1<<RXEN1)|(1<<TXEN1); 		// enable Rx & Tx
 1ee:	e9 ec       	ldi	r30, 0xC9	; 201
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	88 e1       	ldi	r24, 0x18	; 24
 1f4:	80 83       	st	Z, r24
	UCSR1C=  (1<<UCSZ11)|(1<<UCSZ10);  	       // config USART; 8N1
 1f6:	86 e0       	ldi	r24, 0x06	; 6
 1f8:	80 93 ca 00 	sts	0x00CA, r24
	UCSR1B |= (1<<RXCIE1);	//Enable Receive Interrupt 
 1fc:	80 81       	ld	r24, Z
 1fe:	80 68       	ori	r24, 0x80	; 128
 200:	80 83       	st	Z, r24
	DDRD |=  (1<<PORTD3);	//rx as output
 202:	53 9a       	sbi	0x0a, 3	; 10
	DDRD &= ~(1<<PORTD2);
 204:	52 98       	cbi	0x0a, 2	; 10
 206:	08 95       	ret

00000208 <uart_send>:
}

int uart_send(unsigned char data[], unsigned int length)
{
 208:	cf 93       	push	r28
 20a:	df 93       	push	r29
	//printf("Uart Send Function: %c\n", data);
	uint8_t i = 0;
	while(i <= length){
 20c:	20 e0       	ldi	r18, 0x00	; 0
 20e:	30 e0       	ldi	r19, 0x00	; 0
}

int uart_send(unsigned char data[], unsigned int length)
{
	//printf("Uart Send Function: %c\n", data);
	uint8_t i = 0;
 210:	50 e0       	ldi	r21, 0x00	; 0
	while(i <= length){
		while(!(UCSR1A & (1<<UDRE1)));
 212:	e8 ec       	ldi	r30, 0xC8	; 200
 214:	f0 e0       	ldi	r31, 0x00	; 0
		UDR1 = data[i];
 216:	ae ec       	ldi	r26, 0xCE	; 206
 218:	b0 e0       	ldi	r27, 0x00	; 0
int uart_send(unsigned char data[], unsigned int length)
{
	//printf("Uart Send Function: %c\n", data);
	uint8_t i = 0;
	while(i <= length){
		while(!(UCSR1A & (1<<UDRE1)));
 21a:	40 81       	ld	r20, Z
 21c:	45 ff       	sbrs	r20, 5
 21e:	fd cf       	rjmp	.-6      	; 0x21a <uart_send+0x12>
		UDR1 = data[i];
 220:	ec 01       	movw	r28, r24
 222:	c2 0f       	add	r28, r18
 224:	d3 1f       	adc	r29, r19
 226:	28 81       	ld	r18, Y
 228:	2c 93       	st	X, r18
		i++;
 22a:	5f 5f       	subi	r21, 0xFF	; 255

int uart_send(unsigned char data[], unsigned int length)
{
	//printf("Uart Send Function: %c\n", data);
	uint8_t i = 0;
	while(i <= length){
 22c:	25 2f       	mov	r18, r21
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	62 17       	cp	r22, r18
 232:	73 07       	cpc	r23, r19
 234:	90 f7       	brcc	.-28     	; 0x21a <uart_send+0x12>
		i++;
	}
	//Enable Interrupt to receive response from Wi-Fi Module 
	//sei();
	return 0;
}
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret

00000240 <uart_receive>:
	while(!(UCSR1A & (1<<UDRE1)));
	UDR1 = data; 
}

unsigned char uart_receive(unsigned char *data, unsigned char size)
{
 240:	9f 92       	push	r9
 242:	af 92       	push	r10
 244:	bf 92       	push	r11
 246:	cf 92       	push	r12
 248:	df 92       	push	r13
 24a:	ef 92       	push	r14
 24c:	ff 92       	push	r15
 24e:	0f 93       	push	r16
 250:	1f 93       	push	r17
 252:	cf 93       	push	r28
 254:	df 93       	push	r29
 256:	5c 01       	movw	r10, r24
	uint16_t i = 0;
 
	while(1 < size - 1) {
 258:	86 2f       	mov	r24, r22
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	02 97       	sbiw	r24, 0x02	; 2
 260:	dc f0       	brlt	.+54     	; 0x298 <uart_receive+0x58>
 262:	75 01       	movw	r14, r10
	UDR1 = data; 
}

unsigned char uart_receive(unsigned char *data, unsigned char size)
{
	uint16_t i = 0;
 264:	00 e0       	ldi	r16, 0x00	; 0
 266:	10 e0       	ldi	r17, 0x00	; 0
 
	while(1 < size - 1) {
		unsigned char c;
		while (!(UCSR1A & (1<<RXC1)));
 268:	c8 ec       	ldi	r28, 0xC8	; 200
 26a:	d0 e0       	ldi	r29, 0x00	; 0
		c = UDR1;
 26c:	0f 2e       	mov	r0, r31
 26e:	fe ec       	ldi	r31, 0xCE	; 206
 270:	cf 2e       	mov	r12, r31
 272:	d1 2c       	mov	r13, r1
 274:	f0 2d       	mov	r31, r0
{
	uint16_t i = 0;
 
	while(1 < size - 1) {
		unsigned char c;
		while (!(UCSR1A & (1<<RXC1)));
 276:	88 81       	ld	r24, Y
 278:	88 23       	and	r24, r24
 27a:	ec f7       	brge	.-6      	; 0x276 <uart_receive+0x36>
		c = UDR1;
 27c:	f6 01       	movw	r30, r12
 27e:	90 80       	ld	r9, Z
		//printf("Moving Received Byte %d: %c\n", i, c);
		//_delay_ms(500);
		printf("%c",c);
 280:	89 2d       	mov	r24, r9
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	0e 94 c7 01 	call	0x38e	; 0x38e <putchar>
		if(c == '\0') break; 
 288:	99 20       	and	r9, r9
 28a:	41 f0       	breq	.+16     	; 0x29c <uart_receive+0x5c>
		data[i] = c; 
 28c:	f7 01       	movw	r30, r14
 28e:	91 92       	st	Z+, r9
 290:	7f 01       	movw	r14, r30
		i++; 
 292:	0f 5f       	subi	r16, 0xFF	; 255
 294:	1f 4f       	sbci	r17, 0xFF	; 255
 296:	ef cf       	rjmp	.-34     	; 0x276 <uart_receive+0x36>
	UDR1 = data; 
}

unsigned char uart_receive(unsigned char *data, unsigned char size)
{
	uint16_t i = 0;
 298:	00 e0       	ldi	r16, 0x00	; 0
 29a:	10 e0       	ldi	r17, 0x00	; 0
		if(c == '\0') break; 
		data[i] = c; 
		i++; 
	} 
	//Null terminating character 
	data[i] = 0;
 29c:	f5 01       	movw	r30, r10
 29e:	e0 0f       	add	r30, r16
 2a0:	f1 1f       	adc	r31, r17
 2a2:	10 82       	st	Z, r1
	printf("%s", data);
 2a4:	bf 92       	push	r11
 2a6:	af 92       	push	r10
 2a8:	85 e3       	ldi	r24, 0x35	; 53
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	9f 93       	push	r25
 2ae:	8f 93       	push	r24
 2b0:	0e 94 b3 01 	call	0x366	; 0x366 <printf>
	return i + 1;  
 2b4:	0f 90       	pop	r0
 2b6:	0f 90       	pop	r0
 2b8:	0f 90       	pop	r0
 2ba:	0f 90       	pop	r0
}
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	80 0f       	add	r24, r16
 2c0:	df 91       	pop	r29
 2c2:	cf 91       	pop	r28
 2c4:	1f 91       	pop	r17
 2c6:	0f 91       	pop	r16
 2c8:	ff 90       	pop	r15
 2ca:	ef 90       	pop	r14
 2cc:	df 90       	pop	r13
 2ce:	cf 90       	pop	r12
 2d0:	bf 90       	pop	r11
 2d2:	af 90       	pop	r10
 2d4:	9f 90       	pop	r9
 2d6:	08 95       	ret

000002d8 <__vector_28>:
	return UDR1; 
}


ISR(USART1_RX_vect)
{
 2d8:	1f 92       	push	r1
 2da:	0f 92       	push	r0
 2dc:	0f b6       	in	r0, 0x3f	; 63
 2de:	0f 92       	push	r0
 2e0:	11 24       	eor	r1, r1
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	2f 93       	push	r18
 2e8:	3f 93       	push	r19
 2ea:	4f 93       	push	r20
 2ec:	5f 93       	push	r21
 2ee:	6f 93       	push	r22
 2f0:	7f 93       	push	r23
 2f2:	8f 93       	push	r24
 2f4:	9f 93       	push	r25
 2f6:	af 93       	push	r26
 2f8:	bf 93       	push	r27
 2fa:	ef 93       	push	r30
 2fc:	ff 93       	push	r31
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	1f 92       	push	r1
 304:	cd b7       	in	r28, 0x3d	; 61
 306:	de b7       	in	r29, 0x3e	; 62
	cli(); 
 308:	f8 94       	cli
	printf("Starting RX0 Interrupt...\n");
 30a:	88 e3       	ldi	r24, 0x38	; 56
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	0e 94 ce 01 	call	0x39c	; 0x39c <puts>
	unsigned char receivedData[] = ""; 
 312:	19 82       	std	Y+1, r1	; 0x01
	uart_receive(receivedData, 100);
 314:	64 e6       	ldi	r22, 0x64	; 100
 316:	8e 01       	movw	r16, r28
 318:	0f 5f       	subi	r16, 0xFF	; 255
 31a:	1f 4f       	sbci	r17, 0xFF	; 255
 31c:	c8 01       	movw	r24, r16
 31e:	0e 94 20 01 	call	0x240	; 0x240 <uart_receive>
	printf("Received Data: %s\n", receivedData);
 322:	1f 93       	push	r17
 324:	0f 93       	push	r16
 326:	82 e5       	ldi	r24, 0x52	; 82
 328:	91 e0       	ldi	r25, 0x01	; 1
 32a:	9f 93       	push	r25
 32c:	8f 93       	push	r24
 32e:	0e 94 b3 01 	call	0x366	; 0x366 <printf>
	//uart_send(receivedData);
 332:	0f 90       	pop	r0
 334:	0f 90       	pop	r0
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	ff 91       	pop	r31
 342:	ef 91       	pop	r30
 344:	bf 91       	pop	r27
 346:	af 91       	pop	r26
 348:	9f 91       	pop	r25
 34a:	8f 91       	pop	r24
 34c:	7f 91       	pop	r23
 34e:	6f 91       	pop	r22
 350:	5f 91       	pop	r21
 352:	4f 91       	pop	r20
 354:	3f 91       	pop	r19
 356:	2f 91       	pop	r18
 358:	1f 91       	pop	r17
 35a:	0f 91       	pop	r16
 35c:	0f 90       	pop	r0
 35e:	0f be       	out	0x3f, r0	; 63
 360:	0f 90       	pop	r0
 362:	1f 90       	pop	r1
 364:	18 95       	reti

00000366 <printf>:
 366:	a0 e0       	ldi	r26, 0x00	; 0
 368:	b0 e0       	ldi	r27, 0x00	; 0
 36a:	e9 eb       	ldi	r30, 0xB9	; 185
 36c:	f1 e0       	ldi	r31, 0x01	; 1
 36e:	0c 94 83 04 	jmp	0x906	; 0x906 <__stack+0x7>
 372:	fe 01       	movw	r30, r28
 374:	35 96       	adiw	r30, 0x05	; 5
 376:	61 91       	ld	r22, Z+
 378:	71 91       	ld	r23, Z+
 37a:	af 01       	movw	r20, r30
 37c:	80 91 68 01 	lds	r24, 0x0168
 380:	90 91 69 01 	lds	r25, 0x0169
 384:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <vfprintf>
 388:	e2 e0       	ldi	r30, 0x02	; 2
 38a:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__epilogue_restores__+0x20>

0000038e <putchar>:
 38e:	60 91 68 01 	lds	r22, 0x0168
 392:	70 91 69 01 	lds	r23, 0x0169
 396:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 39a:	08 95       	ret

0000039c <puts>:
 39c:	0f 93       	push	r16
 39e:	1f 93       	push	r17
 3a0:	cf 93       	push	r28
 3a2:	df 93       	push	r29
 3a4:	e0 91 68 01 	lds	r30, 0x0168
 3a8:	f0 91 69 01 	lds	r31, 0x0169
 3ac:	23 81       	ldd	r18, Z+3	; 0x03
 3ae:	21 ff       	sbrs	r18, 1
 3b0:	1b c0       	rjmp	.+54     	; 0x3e8 <puts+0x4c>
 3b2:	ec 01       	movw	r28, r24
 3b4:	00 e0       	ldi	r16, 0x00	; 0
 3b6:	10 e0       	ldi	r17, 0x00	; 0
 3b8:	89 91       	ld	r24, Y+
 3ba:	60 91 68 01 	lds	r22, 0x0168
 3be:	70 91 69 01 	lds	r23, 0x0169
 3c2:	db 01       	movw	r26, r22
 3c4:	18 96       	adiw	r26, 0x08	; 8
 3c6:	ed 91       	ld	r30, X+
 3c8:	fc 91       	ld	r31, X
 3ca:	19 97       	sbiw	r26, 0x09	; 9
 3cc:	88 23       	and	r24, r24
 3ce:	31 f0       	breq	.+12     	; 0x3dc <puts+0x40>
 3d0:	09 95       	icall
 3d2:	89 2b       	or	r24, r25
 3d4:	89 f3       	breq	.-30     	; 0x3b8 <puts+0x1c>
 3d6:	0f ef       	ldi	r16, 0xFF	; 255
 3d8:	1f ef       	ldi	r17, 0xFF	; 255
 3da:	ee cf       	rjmp	.-36     	; 0x3b8 <puts+0x1c>
 3dc:	8a e0       	ldi	r24, 0x0A	; 10
 3de:	09 95       	icall
 3e0:	89 2b       	or	r24, r25
 3e2:	11 f4       	brne	.+4      	; 0x3e8 <puts+0x4c>
 3e4:	c8 01       	movw	r24, r16
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <puts+0x50>
 3e8:	8f ef       	ldi	r24, 0xFF	; 255
 3ea:	9f ef       	ldi	r25, 0xFF	; 255
 3ec:	df 91       	pop	r29
 3ee:	cf 91       	pop	r28
 3f0:	1f 91       	pop	r17
 3f2:	0f 91       	pop	r16
 3f4:	08 95       	ret

000003f6 <vfprintf>:
 3f6:	ac e0       	ldi	r26, 0x0C	; 12
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	e1 e0       	ldi	r30, 0x01	; 1
 3fc:	f2 e0       	ldi	r31, 0x02	; 2
 3fe:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__prologue_saves__>
 402:	7c 01       	movw	r14, r24
 404:	6b 01       	movw	r12, r22
 406:	8a 01       	movw	r16, r20
 408:	fc 01       	movw	r30, r24
 40a:	17 82       	std	Z+7, r1	; 0x07
 40c:	16 82       	std	Z+6, r1	; 0x06
 40e:	83 81       	ldd	r24, Z+3	; 0x03
 410:	81 ff       	sbrs	r24, 1
 412:	bd c1       	rjmp	.+890    	; 0x78e <vfprintf+0x398>
 414:	ce 01       	movw	r24, r28
 416:	01 96       	adiw	r24, 0x01	; 1
 418:	4c 01       	movw	r8, r24
 41a:	f7 01       	movw	r30, r14
 41c:	93 81       	ldd	r25, Z+3	; 0x03
 41e:	f6 01       	movw	r30, r12
 420:	93 fd       	sbrc	r25, 3
 422:	85 91       	lpm	r24, Z+
 424:	93 ff       	sbrs	r25, 3
 426:	81 91       	ld	r24, Z+
 428:	6f 01       	movw	r12, r30
 42a:	88 23       	and	r24, r24
 42c:	09 f4       	brne	.+2      	; 0x430 <vfprintf+0x3a>
 42e:	ab c1       	rjmp	.+854    	; 0x786 <vfprintf+0x390>
 430:	85 32       	cpi	r24, 0x25	; 37
 432:	39 f4       	brne	.+14     	; 0x442 <vfprintf+0x4c>
 434:	93 fd       	sbrc	r25, 3
 436:	85 91       	lpm	r24, Z+
 438:	93 ff       	sbrs	r25, 3
 43a:	81 91       	ld	r24, Z+
 43c:	6f 01       	movw	r12, r30
 43e:	85 32       	cpi	r24, 0x25	; 37
 440:	29 f4       	brne	.+10     	; 0x44c <vfprintf+0x56>
 442:	b7 01       	movw	r22, r14
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 44a:	e7 cf       	rjmp	.-50     	; 0x41a <vfprintf+0x24>
 44c:	51 2c       	mov	r5, r1
 44e:	31 2c       	mov	r3, r1
 450:	20 e0       	ldi	r18, 0x00	; 0
 452:	20 32       	cpi	r18, 0x20	; 32
 454:	a0 f4       	brcc	.+40     	; 0x47e <vfprintf+0x88>
 456:	8b 32       	cpi	r24, 0x2B	; 43
 458:	69 f0       	breq	.+26     	; 0x474 <vfprintf+0x7e>
 45a:	30 f4       	brcc	.+12     	; 0x468 <vfprintf+0x72>
 45c:	80 32       	cpi	r24, 0x20	; 32
 45e:	59 f0       	breq	.+22     	; 0x476 <vfprintf+0x80>
 460:	83 32       	cpi	r24, 0x23	; 35
 462:	69 f4       	brne	.+26     	; 0x47e <vfprintf+0x88>
 464:	20 61       	ori	r18, 0x10	; 16
 466:	2c c0       	rjmp	.+88     	; 0x4c0 <vfprintf+0xca>
 468:	8d 32       	cpi	r24, 0x2D	; 45
 46a:	39 f0       	breq	.+14     	; 0x47a <vfprintf+0x84>
 46c:	80 33       	cpi	r24, 0x30	; 48
 46e:	39 f4       	brne	.+14     	; 0x47e <vfprintf+0x88>
 470:	21 60       	ori	r18, 0x01	; 1
 472:	26 c0       	rjmp	.+76     	; 0x4c0 <vfprintf+0xca>
 474:	22 60       	ori	r18, 0x02	; 2
 476:	24 60       	ori	r18, 0x04	; 4
 478:	23 c0       	rjmp	.+70     	; 0x4c0 <vfprintf+0xca>
 47a:	28 60       	ori	r18, 0x08	; 8
 47c:	21 c0       	rjmp	.+66     	; 0x4c0 <vfprintf+0xca>
 47e:	27 fd       	sbrc	r18, 7
 480:	27 c0       	rjmp	.+78     	; 0x4d0 <vfprintf+0xda>
 482:	30 ed       	ldi	r19, 0xD0	; 208
 484:	38 0f       	add	r19, r24
 486:	3a 30       	cpi	r19, 0x0A	; 10
 488:	78 f4       	brcc	.+30     	; 0x4a8 <vfprintf+0xb2>
 48a:	26 ff       	sbrs	r18, 6
 48c:	06 c0       	rjmp	.+12     	; 0x49a <vfprintf+0xa4>
 48e:	fa e0       	ldi	r31, 0x0A	; 10
 490:	5f 9e       	mul	r5, r31
 492:	30 0d       	add	r19, r0
 494:	11 24       	eor	r1, r1
 496:	53 2e       	mov	r5, r19
 498:	13 c0       	rjmp	.+38     	; 0x4c0 <vfprintf+0xca>
 49a:	8a e0       	ldi	r24, 0x0A	; 10
 49c:	38 9e       	mul	r3, r24
 49e:	30 0d       	add	r19, r0
 4a0:	11 24       	eor	r1, r1
 4a2:	33 2e       	mov	r3, r19
 4a4:	20 62       	ori	r18, 0x20	; 32
 4a6:	0c c0       	rjmp	.+24     	; 0x4c0 <vfprintf+0xca>
 4a8:	8e 32       	cpi	r24, 0x2E	; 46
 4aa:	21 f4       	brne	.+8      	; 0x4b4 <vfprintf+0xbe>
 4ac:	26 fd       	sbrc	r18, 6
 4ae:	6b c1       	rjmp	.+726    	; 0x786 <vfprintf+0x390>
 4b0:	20 64       	ori	r18, 0x40	; 64
 4b2:	06 c0       	rjmp	.+12     	; 0x4c0 <vfprintf+0xca>
 4b4:	8c 36       	cpi	r24, 0x6C	; 108
 4b6:	11 f4       	brne	.+4      	; 0x4bc <vfprintf+0xc6>
 4b8:	20 68       	ori	r18, 0x80	; 128
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <vfprintf+0xca>
 4bc:	88 36       	cpi	r24, 0x68	; 104
 4be:	41 f4       	brne	.+16     	; 0x4d0 <vfprintf+0xda>
 4c0:	f6 01       	movw	r30, r12
 4c2:	93 fd       	sbrc	r25, 3
 4c4:	85 91       	lpm	r24, Z+
 4c6:	93 ff       	sbrs	r25, 3
 4c8:	81 91       	ld	r24, Z+
 4ca:	6f 01       	movw	r12, r30
 4cc:	81 11       	cpse	r24, r1
 4ce:	c1 cf       	rjmp	.-126    	; 0x452 <vfprintf+0x5c>
 4d0:	98 2f       	mov	r25, r24
 4d2:	9f 7d       	andi	r25, 0xDF	; 223
 4d4:	95 54       	subi	r25, 0x45	; 69
 4d6:	93 30       	cpi	r25, 0x03	; 3
 4d8:	28 f4       	brcc	.+10     	; 0x4e4 <vfprintf+0xee>
 4da:	0c 5f       	subi	r16, 0xFC	; 252
 4dc:	1f 4f       	sbci	r17, 0xFF	; 255
 4de:	ff e3       	ldi	r31, 0x3F	; 63
 4e0:	f9 83       	std	Y+1, r31	; 0x01
 4e2:	0d c0       	rjmp	.+26     	; 0x4fe <vfprintf+0x108>
 4e4:	83 36       	cpi	r24, 0x63	; 99
 4e6:	31 f0       	breq	.+12     	; 0x4f4 <vfprintf+0xfe>
 4e8:	83 37       	cpi	r24, 0x73	; 115
 4ea:	71 f0       	breq	.+28     	; 0x508 <vfprintf+0x112>
 4ec:	83 35       	cpi	r24, 0x53	; 83
 4ee:	09 f0       	breq	.+2      	; 0x4f2 <vfprintf+0xfc>
 4f0:	5b c0       	rjmp	.+182    	; 0x5a8 <vfprintf+0x1b2>
 4f2:	22 c0       	rjmp	.+68     	; 0x538 <vfprintf+0x142>
 4f4:	f8 01       	movw	r30, r16
 4f6:	80 81       	ld	r24, Z
 4f8:	89 83       	std	Y+1, r24	; 0x01
 4fa:	0e 5f       	subi	r16, 0xFE	; 254
 4fc:	1f 4f       	sbci	r17, 0xFF	; 255
 4fe:	44 24       	eor	r4, r4
 500:	43 94       	inc	r4
 502:	51 2c       	mov	r5, r1
 504:	54 01       	movw	r10, r8
 506:	15 c0       	rjmp	.+42     	; 0x532 <vfprintf+0x13c>
 508:	38 01       	movw	r6, r16
 50a:	f2 e0       	ldi	r31, 0x02	; 2
 50c:	6f 0e       	add	r6, r31
 50e:	71 1c       	adc	r7, r1
 510:	f8 01       	movw	r30, r16
 512:	a0 80       	ld	r10, Z
 514:	b1 80       	ldd	r11, Z+1	; 0x01
 516:	26 ff       	sbrs	r18, 6
 518:	03 c0       	rjmp	.+6      	; 0x520 <vfprintf+0x12a>
 51a:	65 2d       	mov	r22, r5
 51c:	70 e0       	ldi	r23, 0x00	; 0
 51e:	02 c0       	rjmp	.+4      	; 0x524 <vfprintf+0x12e>
 520:	6f ef       	ldi	r22, 0xFF	; 255
 522:	7f ef       	ldi	r23, 0xFF	; 255
 524:	c5 01       	movw	r24, r10
 526:	2c 87       	std	Y+12, r18	; 0x0c
 528:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <strnlen>
 52c:	2c 01       	movw	r4, r24
 52e:	83 01       	movw	r16, r6
 530:	2c 85       	ldd	r18, Y+12	; 0x0c
 532:	2f 77       	andi	r18, 0x7F	; 127
 534:	22 2e       	mov	r2, r18
 536:	17 c0       	rjmp	.+46     	; 0x566 <vfprintf+0x170>
 538:	38 01       	movw	r6, r16
 53a:	f2 e0       	ldi	r31, 0x02	; 2
 53c:	6f 0e       	add	r6, r31
 53e:	71 1c       	adc	r7, r1
 540:	f8 01       	movw	r30, r16
 542:	a0 80       	ld	r10, Z
 544:	b1 80       	ldd	r11, Z+1	; 0x01
 546:	26 ff       	sbrs	r18, 6
 548:	03 c0       	rjmp	.+6      	; 0x550 <vfprintf+0x15a>
 54a:	65 2d       	mov	r22, r5
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <vfprintf+0x15e>
 550:	6f ef       	ldi	r22, 0xFF	; 255
 552:	7f ef       	ldi	r23, 0xFF	; 255
 554:	c5 01       	movw	r24, r10
 556:	2c 87       	std	Y+12, r18	; 0x0c
 558:	0e 94 cd 03 	call	0x79a	; 0x79a <strnlen_P>
 55c:	2c 01       	movw	r4, r24
 55e:	2c 85       	ldd	r18, Y+12	; 0x0c
 560:	20 68       	ori	r18, 0x80	; 128
 562:	22 2e       	mov	r2, r18
 564:	83 01       	movw	r16, r6
 566:	23 fc       	sbrc	r2, 3
 568:	1b c0       	rjmp	.+54     	; 0x5a0 <vfprintf+0x1aa>
 56a:	83 2d       	mov	r24, r3
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	48 16       	cp	r4, r24
 570:	59 06       	cpc	r5, r25
 572:	b0 f4       	brcc	.+44     	; 0x5a0 <vfprintf+0x1aa>
 574:	b7 01       	movw	r22, r14
 576:	80 e2       	ldi	r24, 0x20	; 32
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 57e:	3a 94       	dec	r3
 580:	f4 cf       	rjmp	.-24     	; 0x56a <vfprintf+0x174>
 582:	f5 01       	movw	r30, r10
 584:	27 fc       	sbrc	r2, 7
 586:	85 91       	lpm	r24, Z+
 588:	27 fe       	sbrs	r2, 7
 58a:	81 91       	ld	r24, Z+
 58c:	5f 01       	movw	r10, r30
 58e:	b7 01       	movw	r22, r14
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 596:	31 10       	cpse	r3, r1
 598:	3a 94       	dec	r3
 59a:	f1 e0       	ldi	r31, 0x01	; 1
 59c:	4f 1a       	sub	r4, r31
 59e:	51 08       	sbc	r5, r1
 5a0:	41 14       	cp	r4, r1
 5a2:	51 04       	cpc	r5, r1
 5a4:	71 f7       	brne	.-36     	; 0x582 <vfprintf+0x18c>
 5a6:	e5 c0       	rjmp	.+458    	; 0x772 <vfprintf+0x37c>
 5a8:	84 36       	cpi	r24, 0x64	; 100
 5aa:	11 f0       	breq	.+4      	; 0x5b0 <vfprintf+0x1ba>
 5ac:	89 36       	cpi	r24, 0x69	; 105
 5ae:	39 f5       	brne	.+78     	; 0x5fe <vfprintf+0x208>
 5b0:	f8 01       	movw	r30, r16
 5b2:	27 ff       	sbrs	r18, 7
 5b4:	07 c0       	rjmp	.+14     	; 0x5c4 <vfprintf+0x1ce>
 5b6:	60 81       	ld	r22, Z
 5b8:	71 81       	ldd	r23, Z+1	; 0x01
 5ba:	82 81       	ldd	r24, Z+2	; 0x02
 5bc:	93 81       	ldd	r25, Z+3	; 0x03
 5be:	0c 5f       	subi	r16, 0xFC	; 252
 5c0:	1f 4f       	sbci	r17, 0xFF	; 255
 5c2:	08 c0       	rjmp	.+16     	; 0x5d4 <vfprintf+0x1de>
 5c4:	60 81       	ld	r22, Z
 5c6:	71 81       	ldd	r23, Z+1	; 0x01
 5c8:	88 27       	eor	r24, r24
 5ca:	77 fd       	sbrc	r23, 7
 5cc:	80 95       	com	r24
 5ce:	98 2f       	mov	r25, r24
 5d0:	0e 5f       	subi	r16, 0xFE	; 254
 5d2:	1f 4f       	sbci	r17, 0xFF	; 255
 5d4:	2f 76       	andi	r18, 0x6F	; 111
 5d6:	b2 2e       	mov	r11, r18
 5d8:	97 ff       	sbrs	r25, 7
 5da:	09 c0       	rjmp	.+18     	; 0x5ee <vfprintf+0x1f8>
 5dc:	90 95       	com	r25
 5de:	80 95       	com	r24
 5e0:	70 95       	com	r23
 5e2:	61 95       	neg	r22
 5e4:	7f 4f       	sbci	r23, 0xFF	; 255
 5e6:	8f 4f       	sbci	r24, 0xFF	; 255
 5e8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ea:	20 68       	ori	r18, 0x80	; 128
 5ec:	b2 2e       	mov	r11, r18
 5ee:	2a e0       	ldi	r18, 0x0A	; 10
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	a4 01       	movw	r20, r8
 5f4:	0e 94 15 04 	call	0x82a	; 0x82a <__ultoa_invert>
 5f8:	a8 2e       	mov	r10, r24
 5fa:	a8 18       	sub	r10, r8
 5fc:	44 c0       	rjmp	.+136    	; 0x686 <vfprintf+0x290>
 5fe:	85 37       	cpi	r24, 0x75	; 117
 600:	29 f4       	brne	.+10     	; 0x60c <vfprintf+0x216>
 602:	2f 7e       	andi	r18, 0xEF	; 239
 604:	b2 2e       	mov	r11, r18
 606:	2a e0       	ldi	r18, 0x0A	; 10
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	25 c0       	rjmp	.+74     	; 0x656 <vfprintf+0x260>
 60c:	f2 2f       	mov	r31, r18
 60e:	f9 7f       	andi	r31, 0xF9	; 249
 610:	bf 2e       	mov	r11, r31
 612:	8f 36       	cpi	r24, 0x6F	; 111
 614:	c1 f0       	breq	.+48     	; 0x646 <vfprintf+0x250>
 616:	18 f4       	brcc	.+6      	; 0x61e <vfprintf+0x228>
 618:	88 35       	cpi	r24, 0x58	; 88
 61a:	79 f0       	breq	.+30     	; 0x63a <vfprintf+0x244>
 61c:	b4 c0       	rjmp	.+360    	; 0x786 <vfprintf+0x390>
 61e:	80 37       	cpi	r24, 0x70	; 112
 620:	19 f0       	breq	.+6      	; 0x628 <vfprintf+0x232>
 622:	88 37       	cpi	r24, 0x78	; 120
 624:	21 f0       	breq	.+8      	; 0x62e <vfprintf+0x238>
 626:	af c0       	rjmp	.+350    	; 0x786 <vfprintf+0x390>
 628:	2f 2f       	mov	r18, r31
 62a:	20 61       	ori	r18, 0x10	; 16
 62c:	b2 2e       	mov	r11, r18
 62e:	b4 fe       	sbrs	r11, 4
 630:	0d c0       	rjmp	.+26     	; 0x64c <vfprintf+0x256>
 632:	8b 2d       	mov	r24, r11
 634:	84 60       	ori	r24, 0x04	; 4
 636:	b8 2e       	mov	r11, r24
 638:	09 c0       	rjmp	.+18     	; 0x64c <vfprintf+0x256>
 63a:	24 ff       	sbrs	r18, 4
 63c:	0a c0       	rjmp	.+20     	; 0x652 <vfprintf+0x25c>
 63e:	9f 2f       	mov	r25, r31
 640:	96 60       	ori	r25, 0x06	; 6
 642:	b9 2e       	mov	r11, r25
 644:	06 c0       	rjmp	.+12     	; 0x652 <vfprintf+0x25c>
 646:	28 e0       	ldi	r18, 0x08	; 8
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	05 c0       	rjmp	.+10     	; 0x656 <vfprintf+0x260>
 64c:	20 e1       	ldi	r18, 0x10	; 16
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	02 c0       	rjmp	.+4      	; 0x656 <vfprintf+0x260>
 652:	20 e1       	ldi	r18, 0x10	; 16
 654:	32 e0       	ldi	r19, 0x02	; 2
 656:	f8 01       	movw	r30, r16
 658:	b7 fe       	sbrs	r11, 7
 65a:	07 c0       	rjmp	.+14     	; 0x66a <vfprintf+0x274>
 65c:	60 81       	ld	r22, Z
 65e:	71 81       	ldd	r23, Z+1	; 0x01
 660:	82 81       	ldd	r24, Z+2	; 0x02
 662:	93 81       	ldd	r25, Z+3	; 0x03
 664:	0c 5f       	subi	r16, 0xFC	; 252
 666:	1f 4f       	sbci	r17, 0xFF	; 255
 668:	06 c0       	rjmp	.+12     	; 0x676 <vfprintf+0x280>
 66a:	60 81       	ld	r22, Z
 66c:	71 81       	ldd	r23, Z+1	; 0x01
 66e:	80 e0       	ldi	r24, 0x00	; 0
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0e 5f       	subi	r16, 0xFE	; 254
 674:	1f 4f       	sbci	r17, 0xFF	; 255
 676:	a4 01       	movw	r20, r8
 678:	0e 94 15 04 	call	0x82a	; 0x82a <__ultoa_invert>
 67c:	a8 2e       	mov	r10, r24
 67e:	a8 18       	sub	r10, r8
 680:	fb 2d       	mov	r31, r11
 682:	ff 77       	andi	r31, 0x7F	; 127
 684:	bf 2e       	mov	r11, r31
 686:	b6 fe       	sbrs	r11, 6
 688:	0b c0       	rjmp	.+22     	; 0x6a0 <vfprintf+0x2aa>
 68a:	2b 2d       	mov	r18, r11
 68c:	2e 7f       	andi	r18, 0xFE	; 254
 68e:	a5 14       	cp	r10, r5
 690:	50 f4       	brcc	.+20     	; 0x6a6 <vfprintf+0x2b0>
 692:	b4 fe       	sbrs	r11, 4
 694:	0a c0       	rjmp	.+20     	; 0x6aa <vfprintf+0x2b4>
 696:	b2 fc       	sbrc	r11, 2
 698:	08 c0       	rjmp	.+16     	; 0x6aa <vfprintf+0x2b4>
 69a:	2b 2d       	mov	r18, r11
 69c:	2e 7e       	andi	r18, 0xEE	; 238
 69e:	05 c0       	rjmp	.+10     	; 0x6aa <vfprintf+0x2b4>
 6a0:	7a 2c       	mov	r7, r10
 6a2:	2b 2d       	mov	r18, r11
 6a4:	03 c0       	rjmp	.+6      	; 0x6ac <vfprintf+0x2b6>
 6a6:	7a 2c       	mov	r7, r10
 6a8:	01 c0       	rjmp	.+2      	; 0x6ac <vfprintf+0x2b6>
 6aa:	75 2c       	mov	r7, r5
 6ac:	24 ff       	sbrs	r18, 4
 6ae:	0d c0       	rjmp	.+26     	; 0x6ca <vfprintf+0x2d4>
 6b0:	fe 01       	movw	r30, r28
 6b2:	ea 0d       	add	r30, r10
 6b4:	f1 1d       	adc	r31, r1
 6b6:	80 81       	ld	r24, Z
 6b8:	80 33       	cpi	r24, 0x30	; 48
 6ba:	11 f4       	brne	.+4      	; 0x6c0 <vfprintf+0x2ca>
 6bc:	29 7e       	andi	r18, 0xE9	; 233
 6be:	09 c0       	rjmp	.+18     	; 0x6d2 <vfprintf+0x2dc>
 6c0:	22 ff       	sbrs	r18, 2
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <vfprintf+0x2da>
 6c4:	73 94       	inc	r7
 6c6:	73 94       	inc	r7
 6c8:	04 c0       	rjmp	.+8      	; 0x6d2 <vfprintf+0x2dc>
 6ca:	82 2f       	mov	r24, r18
 6cc:	86 78       	andi	r24, 0x86	; 134
 6ce:	09 f0       	breq	.+2      	; 0x6d2 <vfprintf+0x2dc>
 6d0:	73 94       	inc	r7
 6d2:	23 fd       	sbrc	r18, 3
 6d4:	13 c0       	rjmp	.+38     	; 0x6fc <vfprintf+0x306>
 6d6:	20 ff       	sbrs	r18, 0
 6d8:	06 c0       	rjmp	.+12     	; 0x6e6 <vfprintf+0x2f0>
 6da:	5a 2c       	mov	r5, r10
 6dc:	73 14       	cp	r7, r3
 6de:	18 f4       	brcc	.+6      	; 0x6e6 <vfprintf+0x2f0>
 6e0:	53 0c       	add	r5, r3
 6e2:	57 18       	sub	r5, r7
 6e4:	73 2c       	mov	r7, r3
 6e6:	73 14       	cp	r7, r3
 6e8:	68 f4       	brcc	.+26     	; 0x704 <vfprintf+0x30e>
 6ea:	b7 01       	movw	r22, r14
 6ec:	80 e2       	ldi	r24, 0x20	; 32
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	2c 87       	std	Y+12, r18	; 0x0c
 6f2:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 6f6:	73 94       	inc	r7
 6f8:	2c 85       	ldd	r18, Y+12	; 0x0c
 6fa:	f5 cf       	rjmp	.-22     	; 0x6e6 <vfprintf+0x2f0>
 6fc:	73 14       	cp	r7, r3
 6fe:	10 f4       	brcc	.+4      	; 0x704 <vfprintf+0x30e>
 700:	37 18       	sub	r3, r7
 702:	01 c0       	rjmp	.+2      	; 0x706 <vfprintf+0x310>
 704:	31 2c       	mov	r3, r1
 706:	24 ff       	sbrs	r18, 4
 708:	12 c0       	rjmp	.+36     	; 0x72e <vfprintf+0x338>
 70a:	b7 01       	movw	r22, r14
 70c:	80 e3       	ldi	r24, 0x30	; 48
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	2c 87       	std	Y+12, r18	; 0x0c
 712:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 716:	2c 85       	ldd	r18, Y+12	; 0x0c
 718:	22 ff       	sbrs	r18, 2
 71a:	17 c0       	rjmp	.+46     	; 0x74a <vfprintf+0x354>
 71c:	21 ff       	sbrs	r18, 1
 71e:	03 c0       	rjmp	.+6      	; 0x726 <vfprintf+0x330>
 720:	88 e5       	ldi	r24, 0x58	; 88
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <vfprintf+0x334>
 726:	88 e7       	ldi	r24, 0x78	; 120
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	b7 01       	movw	r22, r14
 72c:	0c c0       	rjmp	.+24     	; 0x746 <vfprintf+0x350>
 72e:	82 2f       	mov	r24, r18
 730:	86 78       	andi	r24, 0x86	; 134
 732:	59 f0       	breq	.+22     	; 0x74a <vfprintf+0x354>
 734:	21 fd       	sbrc	r18, 1
 736:	02 c0       	rjmp	.+4      	; 0x73c <vfprintf+0x346>
 738:	80 e2       	ldi	r24, 0x20	; 32
 73a:	01 c0       	rjmp	.+2      	; 0x73e <vfprintf+0x348>
 73c:	8b e2       	ldi	r24, 0x2B	; 43
 73e:	27 fd       	sbrc	r18, 7
 740:	8d e2       	ldi	r24, 0x2D	; 45
 742:	b7 01       	movw	r22, r14
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 74a:	a5 14       	cp	r10, r5
 74c:	38 f4       	brcc	.+14     	; 0x75c <vfprintf+0x366>
 74e:	b7 01       	movw	r22, r14
 750:	80 e3       	ldi	r24, 0x30	; 48
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 758:	5a 94       	dec	r5
 75a:	f7 cf       	rjmp	.-18     	; 0x74a <vfprintf+0x354>
 75c:	aa 94       	dec	r10
 75e:	f4 01       	movw	r30, r8
 760:	ea 0d       	add	r30, r10
 762:	f1 1d       	adc	r31, r1
 764:	80 81       	ld	r24, Z
 766:	b7 01       	movw	r22, r14
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 76e:	a1 10       	cpse	r10, r1
 770:	f5 cf       	rjmp	.-22     	; 0x75c <vfprintf+0x366>
 772:	33 20       	and	r3, r3
 774:	09 f4       	brne	.+2      	; 0x778 <vfprintf+0x382>
 776:	51 ce       	rjmp	.-862    	; 0x41a <vfprintf+0x24>
 778:	b7 01       	movw	r22, r14
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 782:	3a 94       	dec	r3
 784:	f6 cf       	rjmp	.-20     	; 0x772 <vfprintf+0x37c>
 786:	f7 01       	movw	r30, r14
 788:	86 81       	ldd	r24, Z+6	; 0x06
 78a:	97 81       	ldd	r25, Z+7	; 0x07
 78c:	02 c0       	rjmp	.+4      	; 0x792 <vfprintf+0x39c>
 78e:	8f ef       	ldi	r24, 0xFF	; 255
 790:	9f ef       	ldi	r25, 0xFF	; 255
 792:	2c 96       	adiw	r28, 0x0c	; 12
 794:	e2 e1       	ldi	r30, 0x12	; 18
 796:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__epilogue_restores__>

0000079a <strnlen_P>:
 79a:	fc 01       	movw	r30, r24
 79c:	05 90       	lpm	r0, Z+
 79e:	61 50       	subi	r22, 0x01	; 1
 7a0:	70 40       	sbci	r23, 0x00	; 0
 7a2:	01 10       	cpse	r0, r1
 7a4:	d8 f7       	brcc	.-10     	; 0x79c <strnlen_P+0x2>
 7a6:	80 95       	com	r24
 7a8:	90 95       	com	r25
 7aa:	8e 0f       	add	r24, r30
 7ac:	9f 1f       	adc	r25, r31
 7ae:	08 95       	ret

000007b0 <strnlen>:
 7b0:	fc 01       	movw	r30, r24
 7b2:	61 50       	subi	r22, 0x01	; 1
 7b4:	70 40       	sbci	r23, 0x00	; 0
 7b6:	01 90       	ld	r0, Z+
 7b8:	01 10       	cpse	r0, r1
 7ba:	d8 f7       	brcc	.-10     	; 0x7b2 <strnlen+0x2>
 7bc:	80 95       	com	r24
 7be:	90 95       	com	r25
 7c0:	8e 0f       	add	r24, r30
 7c2:	9f 1f       	adc	r25, r31
 7c4:	08 95       	ret

000007c6 <fputc>:
 7c6:	0f 93       	push	r16
 7c8:	1f 93       	push	r17
 7ca:	cf 93       	push	r28
 7cc:	df 93       	push	r29
 7ce:	18 2f       	mov	r17, r24
 7d0:	09 2f       	mov	r16, r25
 7d2:	eb 01       	movw	r28, r22
 7d4:	8b 81       	ldd	r24, Y+3	; 0x03
 7d6:	81 fd       	sbrc	r24, 1
 7d8:	03 c0       	rjmp	.+6      	; 0x7e0 <fputc+0x1a>
 7da:	8f ef       	ldi	r24, 0xFF	; 255
 7dc:	9f ef       	ldi	r25, 0xFF	; 255
 7de:	20 c0       	rjmp	.+64     	; 0x820 <fputc+0x5a>
 7e0:	82 ff       	sbrs	r24, 2
 7e2:	10 c0       	rjmp	.+32     	; 0x804 <fputc+0x3e>
 7e4:	4e 81       	ldd	r20, Y+6	; 0x06
 7e6:	5f 81       	ldd	r21, Y+7	; 0x07
 7e8:	2c 81       	ldd	r18, Y+4	; 0x04
 7ea:	3d 81       	ldd	r19, Y+5	; 0x05
 7ec:	42 17       	cp	r20, r18
 7ee:	53 07       	cpc	r21, r19
 7f0:	7c f4       	brge	.+30     	; 0x810 <fputc+0x4a>
 7f2:	e8 81       	ld	r30, Y
 7f4:	f9 81       	ldd	r31, Y+1	; 0x01
 7f6:	9f 01       	movw	r18, r30
 7f8:	2f 5f       	subi	r18, 0xFF	; 255
 7fa:	3f 4f       	sbci	r19, 0xFF	; 255
 7fc:	39 83       	std	Y+1, r19	; 0x01
 7fe:	28 83       	st	Y, r18
 800:	10 83       	st	Z, r17
 802:	06 c0       	rjmp	.+12     	; 0x810 <fputc+0x4a>
 804:	e8 85       	ldd	r30, Y+8	; 0x08
 806:	f9 85       	ldd	r31, Y+9	; 0x09
 808:	81 2f       	mov	r24, r17
 80a:	09 95       	icall
 80c:	89 2b       	or	r24, r25
 80e:	29 f7       	brne	.-54     	; 0x7da <fputc+0x14>
 810:	2e 81       	ldd	r18, Y+6	; 0x06
 812:	3f 81       	ldd	r19, Y+7	; 0x07
 814:	2f 5f       	subi	r18, 0xFF	; 255
 816:	3f 4f       	sbci	r19, 0xFF	; 255
 818:	3f 83       	std	Y+7, r19	; 0x07
 81a:	2e 83       	std	Y+6, r18	; 0x06
 81c:	81 2f       	mov	r24, r17
 81e:	90 2f       	mov	r25, r16
 820:	df 91       	pop	r29
 822:	cf 91       	pop	r28
 824:	1f 91       	pop	r17
 826:	0f 91       	pop	r16
 828:	08 95       	ret

0000082a <__ultoa_invert>:
 82a:	fa 01       	movw	r30, r20
 82c:	aa 27       	eor	r26, r26
 82e:	28 30       	cpi	r18, 0x08	; 8
 830:	51 f1       	breq	.+84     	; 0x886 <__ultoa_invert+0x5c>
 832:	20 31       	cpi	r18, 0x10	; 16
 834:	81 f1       	breq	.+96     	; 0x896 <__ultoa_invert+0x6c>
 836:	e8 94       	clt
 838:	6f 93       	push	r22
 83a:	6e 7f       	andi	r22, 0xFE	; 254
 83c:	6e 5f       	subi	r22, 0xFE	; 254
 83e:	7f 4f       	sbci	r23, 0xFF	; 255
 840:	8f 4f       	sbci	r24, 0xFF	; 255
 842:	9f 4f       	sbci	r25, 0xFF	; 255
 844:	af 4f       	sbci	r26, 0xFF	; 255
 846:	b1 e0       	ldi	r27, 0x01	; 1
 848:	3e d0       	rcall	.+124    	; 0x8c6 <__ultoa_invert+0x9c>
 84a:	b4 e0       	ldi	r27, 0x04	; 4
 84c:	3c d0       	rcall	.+120    	; 0x8c6 <__ultoa_invert+0x9c>
 84e:	67 0f       	add	r22, r23
 850:	78 1f       	adc	r23, r24
 852:	89 1f       	adc	r24, r25
 854:	9a 1f       	adc	r25, r26
 856:	a1 1d       	adc	r26, r1
 858:	68 0f       	add	r22, r24
 85a:	79 1f       	adc	r23, r25
 85c:	8a 1f       	adc	r24, r26
 85e:	91 1d       	adc	r25, r1
 860:	a1 1d       	adc	r26, r1
 862:	6a 0f       	add	r22, r26
 864:	71 1d       	adc	r23, r1
 866:	81 1d       	adc	r24, r1
 868:	91 1d       	adc	r25, r1
 86a:	a1 1d       	adc	r26, r1
 86c:	20 d0       	rcall	.+64     	; 0x8ae <__ultoa_invert+0x84>
 86e:	09 f4       	brne	.+2      	; 0x872 <__ultoa_invert+0x48>
 870:	68 94       	set
 872:	3f 91       	pop	r19
 874:	2a e0       	ldi	r18, 0x0A	; 10
 876:	26 9f       	mul	r18, r22
 878:	11 24       	eor	r1, r1
 87a:	30 19       	sub	r19, r0
 87c:	30 5d       	subi	r19, 0xD0	; 208
 87e:	31 93       	st	Z+, r19
 880:	de f6       	brtc	.-74     	; 0x838 <__ultoa_invert+0xe>
 882:	cf 01       	movw	r24, r30
 884:	08 95       	ret
 886:	46 2f       	mov	r20, r22
 888:	47 70       	andi	r20, 0x07	; 7
 88a:	40 5d       	subi	r20, 0xD0	; 208
 88c:	41 93       	st	Z+, r20
 88e:	b3 e0       	ldi	r27, 0x03	; 3
 890:	0f d0       	rcall	.+30     	; 0x8b0 <__ultoa_invert+0x86>
 892:	c9 f7       	brne	.-14     	; 0x886 <__ultoa_invert+0x5c>
 894:	f6 cf       	rjmp	.-20     	; 0x882 <__ultoa_invert+0x58>
 896:	46 2f       	mov	r20, r22
 898:	4f 70       	andi	r20, 0x0F	; 15
 89a:	40 5d       	subi	r20, 0xD0	; 208
 89c:	4a 33       	cpi	r20, 0x3A	; 58
 89e:	18 f0       	brcs	.+6      	; 0x8a6 <__ultoa_invert+0x7c>
 8a0:	49 5d       	subi	r20, 0xD9	; 217
 8a2:	31 fd       	sbrc	r19, 1
 8a4:	40 52       	subi	r20, 0x20	; 32
 8a6:	41 93       	st	Z+, r20
 8a8:	02 d0       	rcall	.+4      	; 0x8ae <__ultoa_invert+0x84>
 8aa:	a9 f7       	brne	.-22     	; 0x896 <__ultoa_invert+0x6c>
 8ac:	ea cf       	rjmp	.-44     	; 0x882 <__ultoa_invert+0x58>
 8ae:	b4 e0       	ldi	r27, 0x04	; 4
 8b0:	a6 95       	lsr	r26
 8b2:	97 95       	ror	r25
 8b4:	87 95       	ror	r24
 8b6:	77 95       	ror	r23
 8b8:	67 95       	ror	r22
 8ba:	ba 95       	dec	r27
 8bc:	c9 f7       	brne	.-14     	; 0x8b0 <__ultoa_invert+0x86>
 8be:	00 97       	sbiw	r24, 0x00	; 0
 8c0:	61 05       	cpc	r22, r1
 8c2:	71 05       	cpc	r23, r1
 8c4:	08 95       	ret
 8c6:	9b 01       	movw	r18, r22
 8c8:	ac 01       	movw	r20, r24
 8ca:	0a 2e       	mov	r0, r26
 8cc:	06 94       	lsr	r0
 8ce:	57 95       	ror	r21
 8d0:	47 95       	ror	r20
 8d2:	37 95       	ror	r19
 8d4:	27 95       	ror	r18
 8d6:	ba 95       	dec	r27
 8d8:	c9 f7       	brne	.-14     	; 0x8cc <__ultoa_invert+0xa2>
 8da:	62 0f       	add	r22, r18
 8dc:	73 1f       	adc	r23, r19
 8de:	84 1f       	adc	r24, r20
 8e0:	95 1f       	adc	r25, r21
 8e2:	a0 1d       	adc	r26, r0
 8e4:	08 95       	ret

000008e6 <__prologue_saves__>:
 8e6:	2f 92       	push	r2
 8e8:	3f 92       	push	r3
 8ea:	4f 92       	push	r4
 8ec:	5f 92       	push	r5
 8ee:	6f 92       	push	r6
 8f0:	7f 92       	push	r7
 8f2:	8f 92       	push	r8
 8f4:	9f 92       	push	r9
 8f6:	af 92       	push	r10
 8f8:	bf 92       	push	r11
 8fa:	cf 92       	push	r12
 8fc:	df 92       	push	r13
 8fe:	ef 92       	push	r14
 900:	ff 92       	push	r15
 902:	0f 93       	push	r16
 904:	1f 93       	push	r17
 906:	cf 93       	push	r28
 908:	df 93       	push	r29
 90a:	cd b7       	in	r28, 0x3d	; 61
 90c:	de b7       	in	r29, 0x3e	; 62
 90e:	ca 1b       	sub	r28, r26
 910:	db 0b       	sbc	r29, r27
 912:	0f b6       	in	r0, 0x3f	; 63
 914:	f8 94       	cli
 916:	de bf       	out	0x3e, r29	; 62
 918:	0f be       	out	0x3f, r0	; 63
 91a:	cd bf       	out	0x3d, r28	; 61
 91c:	09 94       	ijmp

0000091e <__epilogue_restores__>:
 91e:	2a 88       	ldd	r2, Y+18	; 0x12
 920:	39 88       	ldd	r3, Y+17	; 0x11
 922:	48 88       	ldd	r4, Y+16	; 0x10
 924:	5f 84       	ldd	r5, Y+15	; 0x0f
 926:	6e 84       	ldd	r6, Y+14	; 0x0e
 928:	7d 84       	ldd	r7, Y+13	; 0x0d
 92a:	8c 84       	ldd	r8, Y+12	; 0x0c
 92c:	9b 84       	ldd	r9, Y+11	; 0x0b
 92e:	aa 84       	ldd	r10, Y+10	; 0x0a
 930:	b9 84       	ldd	r11, Y+9	; 0x09
 932:	c8 84       	ldd	r12, Y+8	; 0x08
 934:	df 80       	ldd	r13, Y+7	; 0x07
 936:	ee 80       	ldd	r14, Y+6	; 0x06
 938:	fd 80       	ldd	r15, Y+5	; 0x05
 93a:	0c 81       	ldd	r16, Y+4	; 0x04
 93c:	1b 81       	ldd	r17, Y+3	; 0x03
 93e:	aa 81       	ldd	r26, Y+2	; 0x02
 940:	b9 81       	ldd	r27, Y+1	; 0x01
 942:	ce 0f       	add	r28, r30
 944:	d1 1d       	adc	r29, r1
 946:	0f b6       	in	r0, 0x3f	; 63
 948:	f8 94       	cli
 94a:	de bf       	out	0x3e, r29	; 62
 94c:	0f be       	out	0x3f, r0	; 63
 94e:	cd bf       	out	0x3d, r28	; 61
 950:	ed 01       	movw	r28, r26
 952:	08 95       	ret

00000954 <_exit>:
 954:	f8 94       	cli

00000956 <__stop_program>:
 956:	ff cf       	rjmp	.-2      	; 0x956 <__stop_program>
