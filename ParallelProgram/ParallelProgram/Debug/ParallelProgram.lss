
ParallelProgram.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000128  0000019c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000128  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000001c0  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000029de  00000000  00000000  000003b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000720  00000000  00000000  00002d96  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000d2f  00000000  00000000  000034b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000003cc  00000000  00000000  000041e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000004ec  00000000  00000000  000045b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000008ca  00000000  00000000  00004aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000148  00000000  00000000  0000536a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
#include "FPGA.h"

void SPI_FPGA_Init(void)
{
	// Set MOSI ,SCK, and SS as output, others as input
	SPI_DDR |= ((1<<MOSI)|(1<<SCK)|(1<<SS));
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	SPI_DDR &= ~(1<<MISO);
	// CS pin is not active
	FPGA_CS_DDR |= (1<<FPGA_SPI_CS);
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	FPGA_CS_PORT |= (1<<FPGA_SPI_CS);
	// Enable SPI, Master Mode 0, set the clock rate fck/128
	SPCR = ((1<<SPE)|(1<<MSTR)|(1<<SPR1));
   c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	SPSR &= ~(1<<SPI2X);
  10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	SPI_FPGA_Write(0x00);
  18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	ControlPort &= ~(1<<XTAL1);
	
	ControlPort &= ~(1<<XA1_BS2 | 1<<XA0 | 1<<BS1_PAGEL | 1<<WR);
	
	WR_PORT &= ~(1<<FPGAWR);
	SPI_FPGA_Write(0x01);
  20:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	DATAOut = 0x00;
  28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	ControlPort = 0x00;
	
	SR_Cntrl_PORT &= ~(1<<SReset); //Clearing Max395s and Shift Registers
  2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(25);
	SR_Cntrl_PORT |= (1<<SReset);
  3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(25);
	SR_Cntrl_PORT &= ~(1<<SROE);
  4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  54:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  58:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(25);
	SR_Cntrl_PORT &= ~(1<<SRCS); //Applying VCC and GND
  5c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	
	//Why is this being repeated multiple times?
	
	
	SPI_Switching_Circuitry_Write(0x00); //Pull Downs
  60:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  64:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  68:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  6c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  70:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  74:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  78:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  7c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  80:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  84:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  88:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  8c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  90:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  94:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  98:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  9c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  a0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  a4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	
	SPI_Switching_Circuitry_Write(0x00); //GND
  a8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  ac:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  b0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  b4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  b8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  bc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  c0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x08);
  c4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  c8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  cc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  d0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  d4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  d8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
  dc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  e0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
	_delay_us(10);
	
	SPI_Switching_Circuitry_Write(0x00); //Pull Ups
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	12 e0       	ldi	r17, 0x02	; 2
  f2:	a0 e0       	ldi	r26, 0x00	; 0
  f4:	b2 e0       	ldi	r27, 0x02	; 2
  f6:	e8 e2       	ldi	r30, 0x28	; 40
  f8:	f1 e0       	ldi	r31, 0x01	; 1
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
  fa:	02 c0       	rjmp	.+4      	; 0x100 <__do_copy_data+0x10>
  fc:	05 90       	lpm	r0, Z+
  fe:	0d 92       	st	X+, r0
 100:	a0 30       	cpi	r26, 0x00	; 0
 102:	b1 07       	cpc	r27, r17
 104:	d9 f7       	brne	.-10     	; 0xfc <__do_copy_data+0xc>

00000106 <__do_clear_bss>:
 106:	22 e0       	ldi	r18, 0x02	; 2
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
 108:	a0 e0       	ldi	r26, 0x00	; 0
 10a:	b2 e0       	ldi	r27, 0x02	; 2
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	a0 30       	cpi	r26, 0x00	; 0
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
 116:	0e 94 91 00 	call	0x122	; 0x122 <main>
 11a:	0c 94 92 00 	jmp	0x124	; 0x124 <_exit>

0000011e <__bad_interrupt>:
 11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <main>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <main>

00000124 <_exit>:
	_delay_us(10);
	SPI_Switching_Circuitry_Write(0x00);
 124:	f8 94       	cli

00000126 <__stop_program>:
 126:	ff cf       	rjmp	.-2      	; 0x126 <__stop_program>
