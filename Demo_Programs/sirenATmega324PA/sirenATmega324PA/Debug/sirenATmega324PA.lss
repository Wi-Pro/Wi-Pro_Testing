
sirenATmega324PA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000486  000004fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000486  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004fa  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000030  00000000  00000000  0000052a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000a80  00000000  00000000  0000055a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000158  00000000  00000000  00000fda  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001ac  00000000  00000000  00001132  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000050  00000000  00000000  000012e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001c5  00000000  00000000  00001330  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001ac  00000000  00000000  000014f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  000016a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
   c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  10:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  14:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  18:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  1c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  20:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  24:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  28:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  2c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  30:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  34:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  38:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  3c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  40:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  44:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  48:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  4c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  50:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  54:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  58:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  5c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  60:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  64:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  68:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  6c:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  70:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  74:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>
  78:	0c 94 48 00 	jmp	0x90	; 0x90 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61
  88:	0e 94 89 00 	call	0x112	; 0x112 <main>
  8c:	0c 94 41 02 	jmp	0x482	; 0x482 <_exit>

00000090 <__bad_interrupt>:
  90:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000094 <initialization>:
		while(1);
	}
}

void initialization(void){
	DDRD |= (1<<5);//make PD6 an output
  94:	55 9a       	sbi	0x0a, 5	; 10
  96:	08 95       	ret

00000098 <note>:
}

void note(int frequency, int seconds){ //f = 255 hz: t = 1/255 = 3.2ms/2 = 1.96 ms
  98:	cf 93       	push	r28
  9a:	df 93       	push	r29
  9c:	ec 01       	movw	r28, r24
	int i, j;
	int cycles;
	int time;
	DDRD |= (1<<5);//makes PD5 an output
  9e:	55 9a       	sbi	0x0a, 5	; 10
	time = 50000/frequency;//each count is half note
  a0:	9c 01       	movw	r18, r24
  a2:	44 27       	eor	r20, r20
  a4:	37 fd       	sbrc	r19, 7
  a6:	40 95       	com	r20
  a8:	54 2f       	mov	r21, r20
  aa:	60 e5       	ldi	r22, 0x50	; 80
  ac:	73 ec       	ldi	r23, 0xC3	; 195
  ae:	80 e0       	ldi	r24, 0x00	; 0
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 00 02 	call	0x400	; 0x400 <__divmodsi4>
	time = time/2;
  b6:	c9 01       	movw	r24, r18
  b8:	99 23       	and	r25, r25
  ba:	0c f4       	brge	.+2      	; 0xbe <note+0x26>
  bc:	01 96       	adiw	r24, 0x01	; 1
  be:	9c 01       	movw	r18, r24
  c0:	35 95       	asr	r19
  c2:	27 95       	ror	r18
	//cycles = (seconds*1000000)/frequency; //calculates required cycles
	for(j = 0; j < frequency; j++){
  c4:	1c 16       	cp	r1, r28
  c6:	1d 06       	cpc	r1, r29
  c8:	0c f5       	brge	.+66     	; 0x10c <note+0x74>
  ca:	40 e0       	ldi	r20, 0x00	; 0
  cc:	50 e0       	ldi	r21, 0x00	; 0
		PORTD |= (1 << 5);
		for(i = 0; i < time; i++){
  ce:	70 e0       	ldi	r23, 0x00	; 0
  d0:	60 e0       	ldi	r22, 0x00	; 0
	DDRD |= (1<<5);//makes PD5 an output
	time = 50000/frequency;//each count is half note
	time = time/2;
	//cycles = (seconds*1000000)/frequency; //calculates required cycles
	for(j = 0; j < frequency; j++){
		PORTD |= (1 << 5);
  d2:	5d 9a       	sbi	0x0b, 5	; 11
		for(i = 0; i < time; i++){
  d4:	12 16       	cp	r1, r18
  d6:	13 06       	cpc	r1, r19
  d8:	9c f4       	brge	.+38     	; 0x100 <note+0x68>
  da:	87 2f       	mov	r24, r23
  dc:	96 2f       	mov	r25, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	00 00       	nop
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	82 17       	cp	r24, r18
  e4:	93 07       	cpc	r25, r19
  e6:	d9 f7       	brne	.-10     	; 0xde <note+0x46>
  e8:	0d c0       	rjmp	.+26     	; 0x104 <note+0x6c>
  ea:	00 00       	nop
			_delay_us(1);
		}
		PORTD &= ~(1 << 5);
		for(i = 0; i < time; i++){
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	82 17       	cp	r24, r18
  f0:	93 07       	cpc	r25, r19
  f2:	d9 f7       	brne	.-10     	; 0xea <note+0x52>
	int time;
	DDRD |= (1<<5);//makes PD5 an output
	time = 50000/frequency;//each count is half note
	time = time/2;
	//cycles = (seconds*1000000)/frequency; //calculates required cycles
	for(j = 0; j < frequency; j++){
  f4:	4f 5f       	subi	r20, 0xFF	; 255
  f6:	5f 4f       	sbci	r21, 0xFF	; 255
  f8:	4c 17       	cp	r20, r28
  fa:	5d 07       	cpc	r21, r29
  fc:	51 f7       	brne	.-44     	; 0xd2 <note+0x3a>
  fe:	06 c0       	rjmp	.+12     	; 0x10c <note+0x74>
		PORTD |= (1 << 5);
		for(i = 0; i < time; i++){
			_delay_us(1);
		}
		PORTD &= ~(1 << 5);
 100:	5d 98       	cbi	0x0b, 5	; 11
 102:	f8 cf       	rjmp	.-16     	; 0xf4 <note+0x5c>
 104:	5d 98       	cbi	0x0b, 5	; 11
		for(i = 0; i < time; i++){
 106:	87 2f       	mov	r24, r23
 108:	96 2f       	mov	r25, r22
 10a:	ef cf       	rjmp	.-34     	; 0xea <note+0x52>
			_delay_us(1);
		}
	}
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <main>:
D4,G3,E4,E4,F4,G4,G4,F4,E4,D4,C4,C4,D4,E4,D4,C4,C4};
*/

int main(void)
{
	initialization();
 112:	0e 94 4a 00 	call	0x94	; 0x94 <initialization>
	while(1)
	{
		//E4,E4,F4,G4,G4,F4,E4,D4,C4,C4,D4,E4,E4
		note(E4, 2);
 116:	62 e0       	ldi	r22, 0x02	; 2
 118:	70 e0       	ldi	r23, 0x00	; 0
 11a:	8a e4       	ldi	r24, 0x4A	; 74
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 122:	62 e0       	ldi	r22, 0x02	; 2
 124:	70 e0       	ldi	r23, 0x00	; 0
 126:	8a e4       	ldi	r24, 0x4A	; 74
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 2);
 12e:	62 e0       	ldi	r22, 0x02	; 2
 130:	70 e0       	ldi	r23, 0x00	; 0
 132:	8d e5       	ldi	r24, 0x5D	; 93
 134:	91 e0       	ldi	r25, 0x01	; 1
 136:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(G4, 2);
 13a:	62 e0       	ldi	r22, 0x02	; 2
 13c:	70 e0       	ldi	r23, 0x00	; 0
 13e:	88 e8       	ldi	r24, 0x88	; 136
 140:	91 e0       	ldi	r25, 0x01	; 1
 142:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(G4, 2);
 146:	62 e0       	ldi	r22, 0x02	; 2
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	88 e8       	ldi	r24, 0x88	; 136
 14c:	91 e0       	ldi	r25, 0x01	; 1
 14e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 2);
 152:	62 e0       	ldi	r22, 0x02	; 2
 154:	70 e0       	ldi	r23, 0x00	; 0
 156:	8d e5       	ldi	r24, 0x5D	; 93
 158:	91 e0       	ldi	r25, 0x01	; 1
 15a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 15e:	62 e0       	ldi	r22, 0x02	; 2
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	8a e4       	ldi	r24, 0x4A	; 74
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 16a:	62 e0       	ldi	r22, 0x02	; 2
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	86 e2       	ldi	r24, 0x26	; 38
 170:	91 e0       	ldi	r25, 0x01	; 1
 172:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 176:	62 e0       	ldi	r22, 0x02	; 2
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	86 e0       	ldi	r24, 0x06	; 6
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 182:	62 e0       	ldi	r22, 0x02	; 2
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	86 e0       	ldi	r24, 0x06	; 6
 188:	91 e0       	ldi	r25, 0x01	; 1
 18a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 18e:	62 e0       	ldi	r22, 0x02	; 2
 190:	70 e0       	ldi	r23, 0x00	; 0
 192:	86 e2       	ldi	r24, 0x26	; 38
 194:	91 e0       	ldi	r25, 0x01	; 1
 196:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 19a:	62 e0       	ldi	r22, 0x02	; 2
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	8a e4       	ldi	r24, 0x4A	; 74
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 4);
 1a6:	64 e0       	ldi	r22, 0x04	; 4
 1a8:	70 e0       	ldi	r23, 0x00	; 0
 1aa:	8a e4       	ldi	r24, 0x4A	; 74
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		//D4,D4,E4,E4,F4,G4,G4,F4,E4,D4,C4,C4,D4,E4,D4,C4
		note(D4, 1);
 1b2:	61 e0       	ldi	r22, 0x01	; 1
 1b4:	70 e0       	ldi	r23, 0x00	; 0
 1b6:	86 e2       	ldi	r24, 0x26	; 38
 1b8:	91 e0       	ldi	r25, 0x01	; 1
 1ba:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 4);
 1be:	64 e0       	ldi	r22, 0x04	; 4
 1c0:	70 e0       	ldi	r23, 0x00	; 0
 1c2:	86 e2       	ldi	r24, 0x26	; 38
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 1ca:	62 e0       	ldi	r22, 0x02	; 2
 1cc:	70 e0       	ldi	r23, 0x00	; 0
 1ce:	8a e4       	ldi	r24, 0x4A	; 74
 1d0:	91 e0       	ldi	r25, 0x01	; 1
 1d2:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 1d6:	62 e0       	ldi	r22, 0x02	; 2
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	8a e4       	ldi	r24, 0x4A	; 74
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 2);
 1e2:	62 e0       	ldi	r22, 0x02	; 2
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	8d e5       	ldi	r24, 0x5D	; 93
 1e8:	91 e0       	ldi	r25, 0x01	; 1
 1ea:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(G4, 2);
 1ee:	62 e0       	ldi	r22, 0x02	; 2
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	88 e8       	ldi	r24, 0x88	; 136
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(G4, 2);
 1fa:	62 e0       	ldi	r22, 0x02	; 2
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	88 e8       	ldi	r24, 0x88	; 136
 200:	91 e0       	ldi	r25, 0x01	; 1
 202:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 2);
 206:	62 e0       	ldi	r22, 0x02	; 2
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	8d e5       	ldi	r24, 0x5D	; 93
 20c:	91 e0       	ldi	r25, 0x01	; 1
 20e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 212:	62 e0       	ldi	r22, 0x02	; 2
 214:	70 e0       	ldi	r23, 0x00	; 0
 216:	8a e4       	ldi	r24, 0x4A	; 74
 218:	91 e0       	ldi	r25, 0x01	; 1
 21a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 21e:	62 e0       	ldi	r22, 0x02	; 2
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	86 e2       	ldi	r24, 0x26	; 38
 224:	91 e0       	ldi	r25, 0x01	; 1
 226:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 22a:	62 e0       	ldi	r22, 0x02	; 2
 22c:	70 e0       	ldi	r23, 0x00	; 0
 22e:	86 e0       	ldi	r24, 0x06	; 6
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 236:	62 e0       	ldi	r22, 0x02	; 2
 238:	70 e0       	ldi	r23, 0x00	; 0
 23a:	86 e0       	ldi	r24, 0x06	; 6
 23c:	91 e0       	ldi	r25, 0x01	; 1
 23e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 242:	62 e0       	ldi	r22, 0x02	; 2
 244:	70 e0       	ldi	r23, 0x00	; 0
 246:	86 e2       	ldi	r24, 0x26	; 38
 248:	91 e0       	ldi	r25, 0x01	; 1
 24a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 24e:	62 e0       	ldi	r22, 0x02	; 2
 250:	70 e0       	ldi	r23, 0x00	; 0
 252:	8a e4       	ldi	r24, 0x4A	; 74
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 4);
 25a:	64 e0       	ldi	r22, 0x04	; 4
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	86 e2       	ldi	r24, 0x26	; 38
 260:	91 e0       	ldi	r25, 0x01	; 1
 262:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 1);
 266:	61 e0       	ldi	r22, 0x01	; 1
 268:	70 e0       	ldi	r23, 0x00	; 0
 26a:	86 e0       	ldi	r24, 0x06	; 6
 26c:	91 e0       	ldi	r25, 0x01	; 1
 26e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		//C4,D4,D4,E4,C4,D4,E4,F4,E4,C4,D4,E4,F4,E4,D4,C4
		note(C4, 4);
 272:	64 e0       	ldi	r22, 0x04	; 4
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	86 e0       	ldi	r24, 0x06	; 6
 278:	91 e0       	ldi	r25, 0x01	; 1
 27a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 27e:	62 e0       	ldi	r22, 0x02	; 2
 280:	70 e0       	ldi	r23, 0x00	; 0
 282:	86 e2       	ldi	r24, 0x26	; 38
 284:	91 e0       	ldi	r25, 0x01	; 1
 286:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 28a:	62 e0       	ldi	r22, 0x02	; 2
 28c:	70 e0       	ldi	r23, 0x00	; 0
 28e:	86 e2       	ldi	r24, 0x26	; 38
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 296:	62 e0       	ldi	r22, 0x02	; 2
 298:	70 e0       	ldi	r23, 0x00	; 0
 29a:	8a e4       	ldi	r24, 0x4A	; 74
 29c:	91 e0       	ldi	r25, 0x01	; 1
 29e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 2a2:	62 e0       	ldi	r22, 0x02	; 2
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	86 e0       	ldi	r24, 0x06	; 6
 2a8:	91 e0       	ldi	r25, 0x01	; 1
 2aa:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 2ae:	62 e0       	ldi	r22, 0x02	; 2
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	86 e2       	ldi	r24, 0x26	; 38
 2b4:	91 e0       	ldi	r25, 0x01	; 1
 2b6:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 1);
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	8a e4       	ldi	r24, 0x4A	; 74
 2c0:	91 e0       	ldi	r25, 0x01	; 1
 2c2:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 1);
 2c6:	61 e0       	ldi	r22, 0x01	; 1
 2c8:	70 e0       	ldi	r23, 0x00	; 0
 2ca:	8d e5       	ldi	r24, 0x5D	; 93
 2cc:	91 e0       	ldi	r25, 0x01	; 1
 2ce:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 1);
 2d2:	61 e0       	ldi	r22, 0x01	; 1
 2d4:	70 e0       	ldi	r23, 0x00	; 0
 2d6:	8a e4       	ldi	r24, 0x4A	; 74
 2d8:	91 e0       	ldi	r25, 0x01	; 1
 2da:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 2de:	62 e0       	ldi	r22, 0x02	; 2
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	86 e0       	ldi	r24, 0x06	; 6
 2e4:	91 e0       	ldi	r25, 0x01	; 1
 2e6:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 2ea:	62 e0       	ldi	r22, 0x02	; 2
 2ec:	70 e0       	ldi	r23, 0x00	; 0
 2ee:	86 e2       	ldi	r24, 0x26	; 38
 2f0:	91 e0       	ldi	r25, 0x01	; 1
 2f2:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 1);
 2f6:	61 e0       	ldi	r22, 0x01	; 1
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	8a e4       	ldi	r24, 0x4A	; 74
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 1);
 302:	61 e0       	ldi	r22, 0x01	; 1
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	8d e5       	ldi	r24, 0x5D	; 93
 308:	91 e0       	ldi	r25, 0x01	; 1
 30a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 1);
 30e:	61 e0       	ldi	r22, 0x01	; 1
 310:	70 e0       	ldi	r23, 0x00	; 0
 312:	8a e4       	ldi	r24, 0x4A	; 74
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 31a:	62 e0       	ldi	r22, 0x02	; 2
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	86 e2       	ldi	r24, 0x26	; 38
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 326:	62 e0       	ldi	r22, 0x02	; 2
 328:	70 e0       	ldi	r23, 0x00	; 0
 32a:	86 e0       	ldi	r24, 0x06	; 6
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		//D4,G3,E4,E4,F4,G4,G4,F4,E4,D4,C4,C4,D4,E4,D4,C4,C4
		note(D4, 2);
 332:	62 e0       	ldi	r22, 0x02	; 2
 334:	70 e0       	ldi	r23, 0x00	; 0
 336:	86 e2       	ldi	r24, 0x26	; 38
 338:	91 e0       	ldi	r25, 0x01	; 1
 33a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(G3, 4);
 33e:	64 e0       	ldi	r22, 0x04	; 4
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	84 ec       	ldi	r24, 0xC4	; 196
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 34a:	62 e0       	ldi	r22, 0x02	; 2
 34c:	70 e0       	ldi	r23, 0x00	; 0
 34e:	8a e4       	ldi	r24, 0x4A	; 74
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 356:	62 e0       	ldi	r22, 0x02	; 2
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	8a e4       	ldi	r24, 0x4A	; 74
 35c:	91 e0       	ldi	r25, 0x01	; 1
 35e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 2);
 362:	62 e0       	ldi	r22, 0x02	; 2
 364:	70 e0       	ldi	r23, 0x00	; 0
 366:	8d e5       	ldi	r24, 0x5D	; 93
 368:	91 e0       	ldi	r25, 0x01	; 1
 36a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(G4, 2);
 36e:	62 e0       	ldi	r22, 0x02	; 2
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	88 e8       	ldi	r24, 0x88	; 136
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(G4, 2);
 37a:	62 e0       	ldi	r22, 0x02	; 2
 37c:	70 e0       	ldi	r23, 0x00	; 0
 37e:	88 e8       	ldi	r24, 0x88	; 136
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(F4, 2);
 386:	62 e0       	ldi	r22, 0x02	; 2
 388:	70 e0       	ldi	r23, 0x00	; 0
 38a:	8d e5       	ldi	r24, 0x5D	; 93
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 392:	62 e0       	ldi	r22, 0x02	; 2
 394:	70 e0       	ldi	r23, 0x00	; 0
 396:	8a e4       	ldi	r24, 0x4A	; 74
 398:	91 e0       	ldi	r25, 0x01	; 1
 39a:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 39e:	62 e0       	ldi	r22, 0x02	; 2
 3a0:	70 e0       	ldi	r23, 0x00	; 0
 3a2:	86 e2       	ldi	r24, 0x26	; 38
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 3aa:	62 e0       	ldi	r22, 0x02	; 2
 3ac:	70 e0       	ldi	r23, 0x00	; 0
 3ae:	86 e0       	ldi	r24, 0x06	; 6
 3b0:	91 e0       	ldi	r25, 0x01	; 1
 3b2:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 2);
 3b6:	62 e0       	ldi	r22, 0x02	; 2
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	86 e0       	ldi	r24, 0x06	; 6
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 2);
 3c2:	62 e0       	ldi	r22, 0x02	; 2
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	86 e2       	ldi	r24, 0x26	; 38
 3c8:	91 e0       	ldi	r25, 0x01	; 1
 3ca:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(E4, 2);
 3ce:	62 e0       	ldi	r22, 0x02	; 2
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	8a e4       	ldi	r24, 0x4A	; 74
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(D4, 4);
 3da:	64 e0       	ldi	r22, 0x04	; 4
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	86 e2       	ldi	r24, 0x26	; 38
 3e0:	91 e0       	ldi	r25, 0x01	; 1
 3e2:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 1);
 3e6:	61 e0       	ldi	r22, 0x01	; 1
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	86 e0       	ldi	r24, 0x06	; 6
 3ec:	91 e0       	ldi	r25, 0x01	; 1
 3ee:	0e 94 4c 00 	call	0x98	; 0x98 <note>
		note(C4, 4);
 3f2:	64 e0       	ldi	r22, 0x04	; 4
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	86 e0       	ldi	r24, 0x06	; 6
 3f8:	91 e0       	ldi	r25, 0x01	; 1
 3fa:	0e 94 4c 00 	call	0x98	; 0x98 <note>
 3fe:	ff cf       	rjmp	.-2      	; 0x3fe <main+0x2ec>

00000400 <__divmodsi4>:
 400:	05 2e       	mov	r0, r21
 402:	97 fb       	bst	r25, 7
 404:	1e f4       	brtc	.+6      	; 0x40c <__divmodsi4+0xc>
 406:	00 94       	com	r0
 408:	0e 94 17 02 	call	0x42e	; 0x42e <__negsi2>
 40c:	57 fd       	sbrc	r21, 7
 40e:	07 d0       	rcall	.+14     	; 0x41e <__divmodsi4_neg2>
 410:	0e 94 1f 02 	call	0x43e	; 0x43e <__udivmodsi4>
 414:	07 fc       	sbrc	r0, 7
 416:	03 d0       	rcall	.+6      	; 0x41e <__divmodsi4_neg2>
 418:	4e f4       	brtc	.+18     	; 0x42c <__divmodsi4_exit>
 41a:	0c 94 17 02 	jmp	0x42e	; 0x42e <__negsi2>

0000041e <__divmodsi4_neg2>:
 41e:	50 95       	com	r21
 420:	40 95       	com	r20
 422:	30 95       	com	r19
 424:	21 95       	neg	r18
 426:	3f 4f       	sbci	r19, 0xFF	; 255
 428:	4f 4f       	sbci	r20, 0xFF	; 255
 42a:	5f 4f       	sbci	r21, 0xFF	; 255

0000042c <__divmodsi4_exit>:
 42c:	08 95       	ret

0000042e <__negsi2>:
 42e:	90 95       	com	r25
 430:	80 95       	com	r24
 432:	70 95       	com	r23
 434:	61 95       	neg	r22
 436:	7f 4f       	sbci	r23, 0xFF	; 255
 438:	8f 4f       	sbci	r24, 0xFF	; 255
 43a:	9f 4f       	sbci	r25, 0xFF	; 255
 43c:	08 95       	ret

0000043e <__udivmodsi4>:
 43e:	a1 e2       	ldi	r26, 0x21	; 33
 440:	1a 2e       	mov	r1, r26
 442:	aa 1b       	sub	r26, r26
 444:	bb 1b       	sub	r27, r27
 446:	fd 01       	movw	r30, r26
 448:	0d c0       	rjmp	.+26     	; 0x464 <__udivmodsi4_ep>

0000044a <__udivmodsi4_loop>:
 44a:	aa 1f       	adc	r26, r26
 44c:	bb 1f       	adc	r27, r27
 44e:	ee 1f       	adc	r30, r30
 450:	ff 1f       	adc	r31, r31
 452:	a2 17       	cp	r26, r18
 454:	b3 07       	cpc	r27, r19
 456:	e4 07       	cpc	r30, r20
 458:	f5 07       	cpc	r31, r21
 45a:	20 f0       	brcs	.+8      	; 0x464 <__udivmodsi4_ep>
 45c:	a2 1b       	sub	r26, r18
 45e:	b3 0b       	sbc	r27, r19
 460:	e4 0b       	sbc	r30, r20
 462:	f5 0b       	sbc	r31, r21

00000464 <__udivmodsi4_ep>:
 464:	66 1f       	adc	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	88 1f       	adc	r24, r24
 46a:	99 1f       	adc	r25, r25
 46c:	1a 94       	dec	r1
 46e:	69 f7       	brne	.-38     	; 0x44a <__udivmodsi4_loop>
 470:	60 95       	com	r22
 472:	70 95       	com	r23
 474:	80 95       	com	r24
 476:	90 95       	com	r25
 478:	9b 01       	movw	r18, r22
 47a:	ac 01       	movw	r20, r24
 47c:	bd 01       	movw	r22, r26
 47e:	cf 01       	movw	r24, r30
 480:	08 95       	ret

00000482 <_exit>:
 482:	f8 94       	cli

00000484 <__stop_program>:
 484:	ff cf       	rjmp	.-2      	; 0x484 <__stop_program>
